{"version":3,"sources":["flex.core.js","flex.binds.js","flex.events.js","flex.html.js","flex.types.array.js","flex.ui.window.move.js","flex.ui.window.resize.js","flex.ui.window.focus.js","flex.ui.window.maximize.js","flex.ui.patterns.js","app.expatterns.js"],"names":["Flex","prototype","config","coreEvents","options","ajax","events","oop","arrays","patterns","privates","hashes","cache","modules","external","asynchronous","overhead","parsing","system","IDs","wrappers","logs","defaults","resources","USE_STORAGED","type","value","WAIT_ASYNCHRONOUS","MODULES","EXTERNAL","ASYNCHRONOUS","paths","CORE","accept","url","parse","toLowerCase","files","target","CORE_URL","path","js","getCurrentSRC","script","document","querySelector","src","Error","ATTACH","onFlexLoad","onPageLoad","settings","CHECK_PATHS_IN_CSS","ATTACH_PATH_SIGNATURE","KERNEL_PATH_SIGNATURE","TEST_FUNCTION","reset","ON_NEW_MODULE","ON_UPDATED_MODULE","ON_NEW_RESOURCE","ON_UPDATED_RESOURCE","ON_CRITICAL_ERROR","SHOW","init","validate","section","getType","property","Array","setting","content","namespace","get","parent","name","backup","globaly","storage","GROUP","DEFAULT_CONFIG","inited","DEFAULT_CONFIG_FLAG","set","objects","copy","modification","preload","log","types","WARNING","_config","key","ready","isReady","attach","unexpected","__inited","execution","handle","this","readyState","DOM","add","window","launched","update","queue","unlock","CRITICAL","RESOURCES_JOURNAL","UNEXPECTED_JOURNAL","WAITING_REGISTER_TASKS","CSS","JS","regs","urls","PARAMS","EXTENSION","JS_URL","NOT_URL_SYMBOLS","JS_EXP_IN_URL","CSS_EXP_IN_URL","register","EXTERNAL_HISTROY","MODULES_HISTROY","MODULES_HISTROY_CREATION","RESOURCES_HISTORY","ASYNCHRONOUS_HISTORY","LOCAL_STORAGE_NAME","STORAGE","URL_PARAM_VERSION","ROOT","FLEX","detect","home","dirs","filter","it","i","its","length","join","setTimeout","NOTIFICATION","other","STORAGE_PREFIX","DEFAULT_TIMEOUT","DEFAULT_METHOD","methods","POST","GET","PUT","DELETE","OPTIONS","URLENCODED","JSON","headers","CONTENT_TYPE","ACCEPT","requests","request","id","remove","isConflict","create","method","parameters","callbacks","Request","indexOf","toUpperCase","timerID","response","responseHeaders","httpRequest","send","self","XMLHttpRequest","event_name","event","callback","before","open","setHeaders","_parameters","timeout","e","fail","destroy","setRequestHeader","readystatechange","reaction","parseHeaders","getAllResponseHeaders","status","responseText","success","result","original","parsed","_headers","temp","split","forEach","header","data","replace","abort","bind","clearTimeout","doNotChangeHeaders","doNotChangeParameters","doNotEncodeParametersAsURL","params","str_params","excluded","encodeURI","call","parameter","index","param","push","toString","stringify","lastIndex","test","encodeURIComponent","_callbacks","parts","part","charAt","slice","root","error","classes","of","object","Object","constr","proto","prop","__instance","protoprop","hasOwnProperty","extend","sources","exclusion","source","copyProperty","item","properties","values_check","nodeName","values","isValueIn","deep","getByPath","steps","errors","NO_BY_PATH","finished","step","findBy","multiple","FOUND","_value","_result","prototypes","array","localStorage","isAvailable","load","actions","hash","core","listen","flex","registry","on","fire","done","force","reseted","save","getJSON","setJSON","journal","isLock","proceed","working","del","work","isWorking","processing","_hash","KERNEL_LOGS","css","style","attr","SRC","connect","parentNode","removeChild","libraries","map","library","tools","clearName","reference","getSource","getSettings","autoHash","history","repository","isIn","caller","lib","histroy","check","storaged","waited","fullName","parseError","pending","tasks","task","makeCaller","full_name","defineProperty","enumerable","configurable","libraries_data","validateSRC","sterilize","protofunction","onBeforeAttach","onAfterAttach","going","embody","procceed","safely","createConstructor","constructor_storage","consts","RESOURCES","resource","isModule","do_not_detect_url","require","requaredPackageID","inbuilt","launch","module","constructor","loader","restore","wrapper","resourceType","getTypeOfResource","adoption","restoreFullURL","Function","reload","getHash","body","parseFunction","is","__started","onLoad","onError","Embody","groups","group","finish","wait","after","isDone","_storage","_function","str_function","getParams","getBody","FUNCTION","ARGUMENTS","ARGUMENTS_BORDERS","BODY_END","STRICT","function_str","search","matches","match","href","getCSSText","sheet","getKeyframesIE","rule","keyframe","cssRules","sub_rule","keyText","cssText","CSSText","rules","styles","styleSheets","default_value","keys","objecty","COMMON_STORAGE_NAME","element","rewrite","deleteAttribute","clear","removeAttribute","build","onReadyHandle","Register","onReady","items","do_not_check","handled","addEventListener","eventName","attachEvent","removeEventListener","detachEvent","registered_only","global_starage","handles","handle_body","handle_arguments","call_point","this_argument","apply","decode","prefix","getItem","convertor","BASE64","UTF8","encode","result_value","removeItem","setItem","RESOURCES_MARK_ATTR","CSS_TIMER_PROPERTY","CSS_TIMER_DURATION","URLS","reg","left","right","_left","_right","addLink","link","createElement","rel","setAttribute","append","head","appendChild","addLoadListener","resetTimer","img","isConnected","documentLink","correctPaths","styleSheet","createTextNode","substr","parent_url","correct","target_url","trim","sets","addScript","jsScript","onFinish","resourceJS","insertBefore","childNodes","detect_core","stack","s","unescape","decodeURIComponent","escape","z","c","x","char","num","v","r","w","String","fromCharCode","n","b","l","o","substring","charCodeAt","o1","o2","o3","h1","h2","h3","h4","bits","b64","ac","enc","tmp_arr","parser","LAST","CORRECTION","BAD_SLASH","PROTOCOL","DOUBLE","getURLInfo","a","hostname","host","port","protocol","isFull","getCurrentDomain","location","origin","_params","pear","_url","count","valid","previous","clear_url","correction","info","back_steps","_origin","splice","_path","_hostname","_host","_port","_protocol","_home","dir","Date","valueOf","LOGICAL","LOGS","rendering","message","console","callEvent","callers","node","selector","use_cache","document_link","constructors","nodes","querySelectorAll","_array","string","_string","boolean","_boolean","_object","obj","updated","pro","subpro","patternsFunction","operation","unique","define","addJSON","attrs","props","mutationCross","support","STORAGE_PROPERTY","HANDLE_ID_PROPERTY","NODE_ID_PROPERTY","INCORRECT_ARGUMENTS","PROPERTY_IS_CONST","DEFINE_PROPERTY","MUTATION_SCANNING","Storage","binds","make","current","setter","getter","handleID","kill","isPropertyReady","unbind","_destroy","attributes","childList","subtree","characterData","attributeOldValue","characterDataOldValue","mutation","attr_value","node_id","getAttribute","setID","handle_id","res","bind_data","prop_value","isValidProp","mutationObserver","MutationObserver","WebKitMutationObserver","observer","mutations","attributeName","observe","disconnect","DOMAttrModified","attrName","onPropertyChange","isDOMAttrModified","flag","SelectorClass","instance","once","touch","touches","has","buildCommonHandle","Handle","element_id","original_type","fixEvent","handles_storage","interaction","isPrevent","needRemoveChecking","event_type","unificationEvent","isRemoving","stop","destroyCommonHandle","getIDByHandle","HANDLE_EVENT_ID_PROPERTY","toRemove","destination","oEvent","eventType","evt","eventMatchers","HTMLEvents","MouseEvents","defaultOptions","canBubble","cancelable","view","ownerDocument","defaultView","detail","screenX","screenY","clientX","clientY","pointerX","pointerY","ctrlKey","altKey","shiftKey","metaKey","button","relatedTarget","arguments","SyntaxError","createEvent","initEvent","bubbles","initMouseEvent","dispatchEvent","createEventObject","fireEvent","STORAGE_NAME","device","context","isDouble","singleTouch","only_get","globalHandle","addContainer","getCoordinates","pageX","pageY","DocumentLink","documentElement","BodyLink","scrollLeft","clientLeft","scrollTop","clientTop","offsetX","layerX","offsetY","layerY","unificationStop","preventDefault","returnValue","stopPropagation","cancelBubble","unificationTarget","srcElement","fromElement","toElement","unificationCoordinate","unificationButtons","which","unificationTouches","click","dblclick","mousedown","mouseenter","mouseleave","mousemove","mouseover","mouseout","mouseup","getOriginalType","_add","_remove","unify","extendedAdd","extendedRemove","DOMEvents","select","find","sizes","scroll","builder","position","units","helpers","SCROLL","CUSTOM_STYLES","MINIMAL_WIDTH","MINIMAL_HEIGHT","bySelector","first","all","cachedFirst","cachedAll","cacheReset","cacheRemove","fromParent","only_first","id_attr","freeze","childByAttr","attribute","result_node","childNode","hasAttribute","childByType","parentByAttr","child","nodeByClientRectSize","height","width","bounding_client_rect","getBoundingClientRect","bottom","top","nodeByOffset","offsetHeight","offsetWidth","nodeWithMargin","b_top","b_bottom","b_right","b_left","size","parseInt","getComputedStyle","marginTop","marginBottom","marginRight","marginLeft","borderTopWidth","borderBottomWidth","borderRightWidth","borderLeftWidth","NaN","innerHeight","innerWidth","clientHeight","clientWidth","image","generateSize","imageObj","Image","naturalWidth","naturalHeight","html","Math","max","pageYOffset","pageXOffset","scrollHeight","scrollWidth","scrollBarSize","getSize","overflow","opacity","probablyMobile","settingup","childs","innerHTML","redraw","display","getRuleFromSheet","selectorText","getRule","concat","setRule","insertRule","addRule","updateRule","deleteRule","getIndex","getRuleIndex","removeRule","_rule","rule_index","addClass","className","removeClass","byPage","byWindow","old","offsetTop","offsetLeft","parseFloat","offsetParent","modern","box","objBody","objDocumentElement","offset","em","fontSize","rem","validateNode","appendChilds","SizeClass","_size","PositionClass","_position","StylesClass","_styles","ScrollClass","_scroll","FindClass","_find","_selector","class_name","node_name","ExArray","getEventName","aliases","executeHandles","setIndex","delIndex","WRONG_EVENT_NAME","HANDLE_ISNOT_FUNCTION","SAME_ID_OF_HANDLE","HANDLE_OR_ID_SHOULD_BE","INVALID_LENGTH","writable","handle_or_id","pop","added","start","shift","removed","end","O","len","relativeStart","k","min","relativeEnd","undefined","final","Number","RangeError","ln","getOriginal","getOwnPropertyNames","containers","_nodes","CONTAINER","INITED","container","hooks","HOOK","render","GLOBAL_GROUP","GLOBAL_EVENT_FLAG","GLOBAL_CURRENT","GLOBAL_EVENT_ID","STATE_STORAGE","hook","_node","getPosition","currentStyle","pos","scrl","isFixed","oldX","oldY","posX","posY","move","global","isAttached","ui","maximize","MAXIMIZED","onRefreshByParent","RESTORED","state","MOUNTED","HOOKS","HOOKS_STYLE","zIndex","cursor","corner","POSITION_PARENT","getParent","direction","position_parent","position_container","resize","REFRESH","FINISH","FOCUSED_ZINDEX","onClick","getContainer","focus","unset","STATE","maximazed","maximaze","CHANGE","byID","findByID","Source","Pattern","Caller","addition","layout","controllers","measuring","conditions","defaultshooks","defaultsmap","USE_STORAGE_CSS","USE_STORAGE_JS","USE_STORAGE_HTML","USE_LOCALSTORAGE","PATTERN_NODE","PATTERN_SRC","HOOK_PREFIX","HOOKS_SET","HOOKS_SRC","ACCESSORS","CACHE_PATTERNS","onLayoutBuildFinish","validator","setup","debug","MEASURE","SOURCE","PATTERN","CALLER","URL","BODY","BODY_TAG","BODY_CLEAR","FIRST_TAG","TAG_BORDERS","CSS_HREF","CSS_REL","CSS_TYPE","JS_SRC","JS_TYPE","STRING","STRING_BORDERS","DOM_OPEN_STR","DOM_CLOSE_STR","MODEL","MODEL_BORDERS","HOOK_OPEN","HOOK_CLOSE","HOOK_BORDERS","CONDITIONS","CONDITION_CONTENT","CONDITION_CONTENT_ANY","STRING_CON","STRING_CON_STRICT","STRING_BORDER_CON","CON_CLOSE_STR","OPEN_TAG","COMMENT_BORDERS","FIRST_WORD","TAGS","ATTRS","DOM_BORDERS","MODEL_OPEN_STR","MODEL_CLOSE_STR","HOOK_OPEN_STR","HOOK_CLOSE_STR","ALL","INSIDE_TAG","EVENT_ATTR","EVENT_BORDERS","LINES","COLLECTION_HOOK_TAG","COLLECTION_HOOK_NAME","COLLECTION_BORDERS","VIRTUAL_STORAGE_GROUP","VIRTUAL_STORAGE_ID","CSS_ATTACHED_JOURNAL","JS_ATTACHED_JOURNAL","PRELOAD_TRACKER","CONTROLLERS_LINKS","CONTROLLERS_STORAGE","CONDITIONS_STORAGE","HOOKS_STORAGE","MAPS_STORAGE","PATTERN_SOURCES","PATTERN_SOURCES_HTML","GLOBAL_EVENTS","PATTERN_CACHE","compatibility","PARENT_TO_CHILD","table","tbody","thead","tfoot","tr","colgroup","CHILD_TO_PARENT","th","td","col","BASE","MODEL_NODE","CONDITION","PARENT","selectors","HOOK_WRAPPERS","ONREADY","ONUPDATE","ONCHANGE","SETINSTNCE","SUBLEVEL_BEGIN","SUBLEVEL_END","BIND_PREFIX","DOM_PREFIX","ACCESSOR_PREFIX","HOOK_COM_BEGIN","HOOK_COM_END","PARENT_MARK_HTML","ANCHOR","EVENTS_HANDLE_ID","CACHE_PATTERNS_PREFIX","HOOK_ACCESSOR_FUNC_NAME","SIGNATURE","TEMPLATE_WAS_LOADED","FAIL_TO_LOAD_TEMPLATE","FAIL_TO_PARSE_TEMPLATE","FAIL_TO_LOAD_JS_RESOURCE","ONLY_ONE_MODEL_REF_CAN_BE_IN_ATTR","BAD_FORMAT_OF_STYLE_IN_ATTRIBUTE","ONLY_ONE_MODEL_REF_CAN_BE_IN_STYLE_PROP","FAIL_TO_LOAD_PATTERN_IN_COMPONENT","COLLECTION_HOOK_IS_WRONG","pattern","CANNOT_FIND_SOURCE_OF_TEMPLATE","CANNOT_DETECT_HOOK_VALUE","CANNOT_DETECT_HOOK_ANCHOR","TEXT_HOOK_VALUE_CANBE_ONLY_TEXT","CANNOT_DETECT_HTML","CANNOT_DETECT_BEGIN_OR_END_HOOK_ANC","CANNOT_INIT_PATTERN","controller","CONTROLLER_DEFINED_MORE_THAN_ONCE","PATTERN_SRC_DEFINED_TWICE_OR_MORE","PATTERN_SRC_OR_NAME_IS_TOO_SHORT","HOOK_SRC_DEFINED_TWICE_OR_MORE","HOOK_SRC_OR_NAME_IS_TOO_SHORT","HOOK_CANNOT_BE_DEFINED_WITH_OTHER_TAGS","URL_SHOULD_BE_DEFINED_AS_STRING","process","component","signature","returning","perf_id","measure","URLs","hrefs","baseURL","getSRCs","procced","links","str","flags","register_id","_success","_fail","references","assign","original_url","srcs","children","onFail","SourceError","code","getting","dest","indexes","refs","ref","model","dom","binding","_prop","val","prev","parseStyle","RegExp","prepare","fix","elem","collections","fragment","_hook","getFirstTagWithContect","tags","tag","org","mod","inAttrs","testReg","inNodes","contents","_content","com_open","com_close","marks","_dom","mark","scheme","_attr","models","pair","has_model","elems","_elem","names","con_strict","condition","corrected","reverse","has_conditions","ID_index","_html","no_parent","createInstanceClass","is_failed","_original_url","_instance","mapping","maps","getMap","proccess","_hooks","inst","defmap","_map","setValue","convert","isArray","_ref","isSubPattern","bind_parent","default_val","nodeValue","isPossible","assing","bindingAttrs","bindingProps","combine","nodeList","NODE_LIST","borders","accessors","finalize","getRef","getPath","anchor","anchors","collection","indexesUpdate","Collection","getStartIndex","mount","unmount","Element","exclude","setIndexes","_cache","_name","fragments","getHTML","cached","getCache","_res","insert","setCache","wrap","getPattern","procces","inc","getValue","source_hooks","getProps","matchs","converHooksAccessors","textNode","makeAccessor","begin","getNodes","nextSibling","setModelValue","inserted","getFirstTag","getParentFor","__root","ends","treeWalker","createTreeWalker","NodeFilter","SHOW_COMMENT","acceptNode","getObj","trg","cur","_trg","ref_perent","clr","_parent","FILTER_ACCEPT","FILTER_REJECT","nextNode","currentNode","_conditions","_cond","_urls","html_conds","close","addAnchors","anchored","list","__anchor","funcs","conds","Instance","results","_val","visible","con","_conds","_count","counts","NodeList","listener","contr","doms","_controller","exchange","_this","getString","_obj","setHash","getHooks","onUpdate","inHooks","hook_name","hook_value","inMap","mounted","_before","ui_created","makeComponentCaller","remove_missing_hooks","correctCallers","checkAdditionRefs","checkURLs","asObj","URL_REGISTER","checkCollections","updateHooks","onSuccess","addID","smth","collection_id","isNode","unshift","show","__display","hide","removeAttr","getAsArray","addMethod","LISTENER","globals","trigger","bindGlobal","triggerGlobal","MAP","nodeType","started","getScheme","hooks_set","getHooksMap","initByScheme","is_auto","__in_work","isNested","initByHTML","is_child","_index","getCallback","hasHooks","is_hook","getHookName","getHooksSet","_caller","single","hooks_src","pattern_url","getPatternURL","_source","virtual","local","resetPatternsCache","performance","now","toFixed","prop_name","_group","something","arr","getTextNode","text","chr","child_tag","replaced","close_pos","open_pos"],"mappings":"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","file":"expatterns.min.js","sourcesContent":["/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\r\n* Copyright � 2015-2016 Dmitry Astafyev. All rights reserved.                                                      *\r\n* This file (core / module) is released under the Apache License (Version 2.0). See [LICENSE] file for details.    *\r\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\r\n\r\n\r\n/// <reference path='intellisense/flex.callers.node.intellisense.js' />\r\n/// <reference path='intellisense/flex.callers.nodes.intellisense.js' />\r\n/// <reference path='intellisense/flex.callers.object.intellisense.js' />\r\n/// <reference path=\"intellisense/flex.intellisense.js\" />\r\n/// <module>\r\n///     <summary>\r\n///         Basic module of [flex].\r\n///     </summary>\r\n/// </module>\r\n(function () {\r\n    \"use strict\";\r\n    //Create class\r\n    var Flex = function () {};\r\n    //Define class\r\n    Flex.prototype = (function () {\r\n        var information     = {\r\n                name    : \"Flex::: web tools\",\r\n                version : \"0.58\",\r\n                author  : \"Dmitry Astafyev\",\r\n            },\r\n            config          = {},\r\n            coreEvents      = {},\r\n            options         = {},\r\n            ajax            = {},\r\n            events          = {},\r\n            oop             = {},\r\n            arrays          = {},\r\n            patterns        = {},\r\n            privates        = {},\r\n            hashes          = {},\r\n            cache           = {},\r\n            modules         = {},\r\n            external        = {},\r\n            asynchronous    = {},\r\n            overhead        = {},\r\n            parsing         = {},\r\n            system          = {},\r\n            IDs             = {},\r\n            wrappers        = {},\r\n            logs            = {};\r\n        config          = {\r\n            defaults    : {\r\n                resources   : {\r\n                    USE_STORAGED        : { type: 'boolean',    value: false    },\r\n                    WAIT_ASYNCHRONOUS   : { type: 'boolean',    value: true     },\r\n                    MODULES             : { type: 'array',      value: []       },\r\n                    EXTERNAL            : { type: 'array',      value: []       },\r\n                    ASYNCHRONOUS        : { type: 'array',      value: []       }\r\n                },\r\n                paths       : {\r\n                    CORE    : {\r\n                        type    : 'string',\r\n                        value   : function () {\r\n                            function accept(url) {\r\n                                url                     = system.url.parse(url.toLowerCase());\r\n                                options.files.CORE      = url.target;\r\n                                options.files.CORE_URL  = url.url;\r\n                                url                     = url.path;\r\n                                return url;\r\n                            };\r\n                            var url     = system.resources.js.getCurrentSRC(true),\r\n                                script  = null;\r\n                            if (url !== null) {\r\n                                return accept(url);\r\n                            } else {\r\n                                script = document.querySelector('script[src*=\"' + options.files.CORE + '\"]');\r\n                                if (script !== null) {\r\n                                    return accept(script.src);\r\n                                }\r\n                            }\r\n                            throw new Error('Cannot detect URL and PATH to core script (default name: flex.core.js)');\r\n                        }\r\n                    },\r\n                    ATTACH  : { type: 'string',     value: '/app'       },\r\n                },\r\n                events      : {\r\n                    /// <field type = 'function'>This event fires after FLEX finished loading all (module + external resources)</field>\r\n                    onFlexLoad      : { type: 'function',   value: null         },\r\n                    /// <field type = 'function'>This event fires on [window.onLoad], but not early than [onFlexLoad]</field>\r\n                    onPageLoad      : { type: 'function',   value: null         },\r\n                },\r\n                settings    : {\r\n                    /// <field type = 'boolean'>True - in all parsed CSS files will be done correction of paths (path like this \"../step/step/some.some\" will be corrected to \"fullpath/step/step/some.some\"</field>\r\n                    CHECK_PATHS_IN_CSS      : { type: 'boolean',    value: false        },\r\n                    ATTACH_PATH_SIGNATURE   : { type: 'string',     value: 'ATTACH::'   },\r\n                    KERNEL_PATH_SIGNATURE   : { type: 'string',     value: 'KERNEL::'   },\r\n                },\r\n                patterns    : {\r\n                    TEST_FUNCTION : 'flexPatternTest'\r\n                },\r\n                cache       : {\r\n                    reset   : {\r\n                        /// <field type = 'boolean'>Reset whole cache if some new resource detected</field>\r\n                        ON_NEW_MODULE       : { type: 'boolean', value: true },\r\n                        /// <field type = 'boolean'>Reset whole cache if some resource is updated</field>\r\n                        ON_UPDATED_MODULE   : { type: 'boolean', value: false },\r\n                        /// <field type = 'boolean'>Reset whole cache if some new resource detected</field>\r\n                        ON_NEW_RESOURCE     : { type: 'boolean', value: false },\r\n                        /// <field type = 'boolean'>Reset whole cache if some resource is updated</field>\r\n                        ON_UPDATED_RESOURCE : { type: 'boolean', value: false },\r\n                        /// <field type = 'boolean'>Reset whole cache if some critical error was</field>\r\n                        ON_CRITICAL_ERROR   : { type: 'boolean', value: true },\r\n                    }\r\n                },\r\n                logs        : {\r\n                    SHOW: { type: 'array', value: ['CRITICAL', 'LOGICAL', 'WARNING'] }\r\n                },\r\n            },\r\n            init        : function (settings) {\r\n                function validate(section, settings, path) {\r\n                    function getType(property) {\r\n                        if (property instanceof Array) {\r\n                            return 'array';\r\n                        } else {\r\n                            return typeof property;\r\n                        }\r\n                    };\r\n                    var path    = path || '',\r\n                        setting = null;\r\n                    if (typeof section.content === 'object') {\r\n                        if (section.content.type !== void 0 && section.content.value !== void 0) {\r\n                            setting = oop.namespace.get(path, settings);\r\n                            if (getType(setting) === section.content.type) {\r\n                                section.parent[section.name] = setting;\r\n                            } else {\r\n                                section.parent[section.name] = typeof section.content.value === 'function' ? section.content.value() : section.content.value;\r\n                            }\r\n                        } else {\r\n                            for (var property in section.content) {\r\n                                validate(\r\n                                    {\r\n                                        content : section.content[property],\r\n                                        parent  : section.content,\r\n                                        name    : property\r\n                                    },\r\n                                    settings,\r\n                                    path + (path === '' ? '' : '.') + property\r\n                                );\r\n                            }\r\n                        }\r\n                    }\r\n                };\r\n                var backup      = overhead.globaly.get(options.storage.GROUP, options.storage.DEFAULT_CONFIG),\r\n                    inited      = overhead.globaly.get(options.storage.GROUP, options.storage.DEFAULT_CONFIG_FLAG);\r\n                if (inited === null) {\r\n                    if (backup === null) {\r\n                        overhead.globaly.set(options.storage.GROUP, options.storage.DEFAULT_CONFIG, oop.objects.copy(config.defaults))\r\n                    } else {\r\n                        config.defaults = oop.objects.copy(backup);\r\n                    }\r\n                    if (settings) {\r\n                        inited = overhead.globaly.set(options.storage.GROUP, options.storage.DEFAULT_CONFIG_FLAG, true);\r\n                    }\r\n                    validate(\r\n                        {\r\n                            content : config.defaults,\r\n                            parent  : null,\r\n                            name    : null\r\n                        },\r\n                        settings || {}\r\n                    );\r\n                    if (settings !== void 0) {\r\n                        patterns.modification();\r\n                        cache.init();\r\n                        modules.preload();\r\n                        asynchronous.preload();\r\n                    }\r\n                } else {\r\n                    logs.log('[CORE]:: flex was initialized before. Initialization can be done only once per session.', logs.types.WARNING);\r\n                }\r\n            },\r\n            get         : function () {\r\n                return config.defaults;\r\n            },\r\n            set         : function (_config) {\r\n                for (var key in _config) {\r\n                    if (config.defaults[key] !== void 0 && typeof config.defaults[key] === typeof _config[key]) {\r\n                        config.defaults[key] = _config[key];\r\n                    }\r\n                }\r\n            }\r\n        };\r\n        coreEvents      = {\r\n            onFlexLoad: function () {\r\n                var inited  = overhead.globaly.get(options.storage.GROUP, options.storage.DEFAULT_CONFIG_FLAG),\r\n                    ready   = false;\r\n                if (inited !== null) {\r\n                    if (modules.isReady() && external.isReady() && asynchronous.isReady() && modules.attach.unexpected.isReady()) {\r\n                        ready = true;\r\n                    }\r\n                } else {\r\n                    if (modules.isReady() && modules.attach.unexpected.isReady()) {\r\n                        ready = true;\r\n                    }\r\n                }\r\n                if (ready) {\r\n                    if (coreEvents.onFlexLoad.__inited === void 0) {\r\n                        if (!patterns.execution()) {\r\n                            coreEvents.onFlexLoad.__inited = true;\r\n                            system.handle(config.defaults.events.onFlexLoad, null, 'config.defaults.events.onFlexLoad', this);\r\n                            if (config.defaults.events.onPageLoad !== null) {\r\n                                if (document.readyState !== 'complete') {\r\n                                    events.DOM.add(window, 'load', config.defaults.events.onPageLoad);\r\n                                } else {\r\n                                    system.handle(config.defaults.events.onPageLoad, null, 'config.defaults.events.onPageLoad', this);\r\n                                }\r\n                            }\r\n                        }\r\n                        //Launch self-lanuched appended modules\r\n                        modules.attach.unexpected.launched.accept();\r\n                        //Run hashes updates\r\n                        hashes.update.queue.unlock();\r\n                    } else {\r\n                        logs.log('Double start of [onFlexLoad]', logs.types.CRITICAL);\r\n                    }\r\n                } else {\r\n                    if (modules.attach.unexpected.isReady()) {\r\n\r\n                    }\r\n                }\r\n            }\r\n        };\r\n        options         = {\r\n            storage     : {\r\n                GROUP                   : 'flex.core',\r\n                RESOURCES_JOURNAL       : 'flex.modules.resources.journal',\r\n                UNEXPECTED_JOURNAL      : 'flex.modules.unexpected.journal',\r\n                DEFAULT_CONFIG          : 'flex.defualt.config',\r\n                DEFAULT_CONFIG_FLAG     : 'flex.defualt.config.flag',\r\n                WAITING_REGISTER_TASKS  : 'flex.register.wait.tasts',\r\n            },\r\n            resources   : {\r\n                types   : {\r\n                    CSS: '.css',\r\n                    JS: '.js',\r\n                }\r\n            },\r\n            regs        : {\r\n                urls    : {\r\n                    PARAMS          : /\\?.*/gi,\r\n                    EXTENSION       : /(\\.[\\w\\n]*)$/gi,\r\n                    JS_URL          : /[\\w]*:\\/\\/[\\w\\n:\\/\\.]*\\.js/gi,\r\n                    NOT_URL_SYMBOLS : /[\\s\\t\\n\\r]/gi,\r\n                    JS_EXP_IN_URL   : /\\.js$/gi,\r\n                    CSS_EXP_IN_URL  : /\\.css$/gi\r\n                }\r\n            },\r\n            register    : {\r\n                EXTERNAL_HISTROY        : 'flex.external.history',\r\n                MODULES_HISTROY         : 'flex.modules.history',\r\n                MODULES_HISTROY_CREATION: 'flex.modules.history.created',\r\n                RESOURCES_HISTORY       : 'flex.modules.resources.history',\r\n                ASYNCHRONOUS_HISTORY    : 'asynchronous.history',\r\n            },\r\n            hashes      : {\r\n                LOCAL_STORAGE_NAME : 'flex.hash.storage'\r\n            },\r\n            cache       : {\r\n                STORAGE             : 'flex.cache.storage.reset_data',\r\n                URL_PARAM_VERSION   : 'flexhash'\r\n            },\r\n            files       : {\r\n                CORE    : '', //This is default value, will be apply in case of fail auto-detection\r\n                CORE_URL: '', //URL to flex core\r\n                ROOT    : '', //Place, where all JS should be. In ideal for sure.\r\n                FLEX    : '', //Folder with flex core and modules\r\n                detect  : function () {\r\n                    function accept(url) {\r\n                        url                     = system.url.parse(url.toLowerCase());\r\n                        options.files.CORE      = url.target;\r\n                        options.files.CORE_URL  = url.url;\r\n                        options.files.ROOT      = url.home + '/' + (url.dirs.filter(function(it, i, its){ return i === its.length - 1 ? false : true;})).join('/');\r\n                        options.files.FLEX      = url.path;\r\n                        if (url.dirs.length === 0) {\r\n                            setTimeout(function () {\r\n                                logs.log('Flex core file [' + url.target + '] attached in root [' + url.home + ']. Recommendation: attach flex\\'s libraries (include core) in some subfolder (for example, \"core\", \"flex\", \"kernel\" or any other).', logs.types.NOTIFICATION);\r\n                            }, 10);\r\n                        }\r\n                        return url.path;\r\n                    };\r\n                    var url     = system.resources.js.getCurrentSRC(true),\r\n                        script  = null;\r\n                    if (url !== null) {\r\n                        return accept(url);\r\n                    } else if (options.files.CORE !== '') {\r\n                        script = document.querySelector('script[src*=\"' + options.files.CORE + '\"]');\r\n                        if (script !== null) {\r\n                            return accept(script.src);\r\n                        }\r\n                    }\r\n                    throw new Error('Cannot detect URL and PATH to core script. Setup name of manually [options.files.CORE]');\r\n                }\r\n            },\r\n            other       : {\r\n                STORAGE_PREFIX  : '[FLEX_SYSTEM_RESURCES]'\r\n            }\r\n        };\r\n        ajax            = {\r\n            settings    : {\r\n                DEFAULT_TIMEOUT : 15000, //ms ==> 1000 ms = 1 s\r\n                DEFAULT_METHOD  : 'POST',\r\n                methods         : {\r\n                    POST    : 'POST',\r\n                    GET     : 'GET',\r\n                    PUT     : 'PUT',\r\n                    DELETE  : 'DELETE',\r\n                    OPTIONS : 'OPTIONS',\r\n                },\r\n                regs            : {\r\n                    URLENCODED  : /-urlencoded/gi,\r\n                    JSON        : /application\\/json/gi\r\n                },\r\n                headers         :{\r\n                    CONTENT_TYPE    : 'Content-Type',\r\n                    ACCEPT          : 'Accept'\r\n                }\r\n            },\r\n            requests    : {\r\n                storage     : {},\r\n                add         : function (request) {\r\n                    var storage = ajax.requests.storage;\r\n                    if (storage[request.settings.id] === void 0) {\r\n                        storage[request.settings.id] = request;\r\n                        return true;\r\n                    }\r\n                    return false;\r\n                },\r\n                remove      : function (request) {\r\n                    var storage = ajax.requests.storage;\r\n                    if (storage[request.settings.id] !== void 0) {\r\n                        storage[request.settings.id] = null;\r\n                        delete storage[request.settings.id];\r\n                        return true;\r\n                    }\r\n                    return false;\r\n                },\r\n                isConflict  : function (id) {\r\n                    return ajax.requests.storage[id] === void 0 ? false : true;\r\n                }\r\n            },\r\n            create      : function (url, method, parameters, callbacks, settings) {\r\n                /// <signature>\r\n                ///     <summary>Create XMLHttpRequest request</summary>\r\n                ///     <param name=\"url\"           type=\"string\"                   >URL</param>\r\n                ///     <returns type=\"object\" mayBeNull=\"true\">Instance of request</returns>\r\n                /// </signature>\r\n                /// <signature>\r\n                ///     <summary>Create XMLHttpRequest request</summary>\r\n                ///     <param name=\"url\"           type=\"string\"                   >URL</param>\r\n                ///     <param name=\"method\"        type=\"string\" default=\"post\"    >[optional] POST or GET. Default POST</param>\r\n                ///     <returns type=\"object\" mayBeNull=\"true\">Instance of request</returns>\r\n                /// </signature>\r\n                /// <signature>\r\n                ///     <summary>Create XMLHttpRequest request</summary>\r\n                ///     <param name=\"url\"           type=\"string\"                   >URL</param>\r\n                ///     <param name=\"method\"        type=\"string\" default=\"post\"    >[optional] POST or GET. Default POST</param>\r\n                ///     <param name=\"parameters\"    type=\"object, string\"           >[optional] Object with parameters or string of parameters</param>\r\n                ///     <returns type=\"object\" mayBeNull=\"true\">Instance of request</returns>\r\n                /// </signature>\r\n                /// <signature>\r\n                ///     <summary>Create XMLHttpRequest request</summary>\r\n                ///     <param name=\"url\"           type=\"string\"                   >URL</param>\r\n                ///     <param name=\"method\"        type=\"string\" default=\"post\"    >[optional] POST or GET. Default POST</param>\r\n                ///     <param name=\"parameters\"    type=\"object, string\"           >[optional] Object with parameters or string of parameters</param>\r\n                ///     <param name=\"callbacks\"     type=\"object\"                   >[optional] Collection of callbacks [before, success, fail, reaction, timeout, headers]. </param>\r\n                ///     <returns type=\"object\" mayBeNull=\"true\">Instance of request</returns>\r\n                /// </signature>\r\n                /// <signature>\r\n                ///     <summary>Create XMLHttpRequest request</summary>\r\n                ///     <param name=\"url\"           type=\"string\"                   >URL</param>\r\n                ///     <param name=\"method\"        type=\"string\" default=\"post\"    >[optional] POST or GET. Default POST</param>\r\n                ///     <param name=\"parameters\"    type=\"object, string\"           >[optional] Object with parameters or string of parameters</param>\r\n                ///     <param name=\"callbacks\"     type=\"object\"                   >[optional] Collection of callbacks [before, success, fail, reaction, timeout, headers]. </param>\r\n                ///     <param name=\"settings\"      type=\"object\"                   >[optional] Settings of request. </param>\r\n                ///     <returns type=\"object\" mayBeNull=\"true\">Instance of request</returns>\r\n                /// </signature>\r\n                var request = null,\r\n                    Request = null;\r\n                //Parse parameters\r\n                url         = (typeof url       === 'string' ? url      : null);\r\n                method      = (typeof method    === 'string' ? ([\r\n                    ajax.settings.methods.POST,\r\n                    ajax.settings.methods.GET,\r\n                    ajax.settings.methods.PUT,\r\n                    ajax.settings.methods.DELETE,\r\n                    ajax.settings.methods.OPTIONS].indexOf(method.toUpperCase()) !== -1 ? method.toUpperCase() : ajax.settings.DEFAULT_METHOD) : ajax.settings.DEFAULT_METHOD);\r\n                settings    = ajax.parse.settings(settings);\r\n                parameters  = ajax.parse.parameters(parameters, settings);\r\n                callbacks   = ajax.parse.callbacks(callbacks);\r\n                if (url !== null) {\r\n                    //Define class for request\r\n                    Request             = function (url, method, parameters, callbacks, settings) {\r\n                        this.settings           = settings;\r\n                        this.url                = url;\r\n                        this.method             = method;\r\n                        this.parameters         = parameters;\r\n                        this.callbacks          = callbacks;\r\n                        this.timerID            = null;\r\n                        this.response           = null;\r\n                        this.responseHeaders    = null;\r\n                        this.httpRequest        = null;\r\n                    };\r\n                    Request.prototype   = {\r\n                        send            : function(){\r\n                            var self = this;\r\n                            try {\r\n                                //Add request to journal\r\n                                ajax.requests.add(self);\r\n                                self.httpRequest = new XMLHttpRequest();\r\n                                for (var event_name in self.events) {\r\n                                    (function (event_name, self) {\r\n                                        events.DOM.add(\r\n                                            self.httpRequest,\r\n                                            event_name,\r\n                                            function (event) {\r\n                                                return self.events[event_name](event, self);\r\n                                            }\r\n                                        );\r\n                                    }(event_name, self));\r\n                                }\r\n                                if (self.httpRequest !== null) {\r\n                                    self.callback(self.callbacks.before);\r\n                                    switch (self.method) {\r\n                                        case ajax.settings.methods.POST:\r\n                                            self.httpRequest.open(self.method, self.url, true);\r\n                                            self.setHeaders(self);\r\n                                            self.httpRequest.send(self.parameters._parameters);\r\n                                            break;\r\n                                        case ajax.settings.methods.GET:\r\n                                            self.httpRequest.open(self.method, self.url + (self.parameters._parameters !== '' ? '?' : '') + self.parameters._parameters, true);\r\n                                            self.setHeaders(self);\r\n                                            self.httpRequest.send();\r\n                                            break;\r\n                                        default:\r\n                                            self.httpRequest.open(self.method, self.url, true);\r\n                                            self.setHeaders(self);\r\n                                            self.httpRequest.send(self.parameters._parameters);\r\n                                            break;\r\n                                    }\r\n                                    //Set manual timeout\r\n                                    self.timerID = setTimeout(\r\n                                        function () {\r\n                                            self.events.timeout(null, self);\r\n                                        },\r\n                                        self.settings.timeout\r\n                                    );\r\n                                    return true;\r\n                                } else {\r\n                                    throw 'Fail create XMLHttpRequest';\r\n                                }\r\n                            } catch (e) {\r\n                                self.callback(self.callbacks.fail, e);\r\n                                self.destroy(self);\r\n                            }\r\n                        },\r\n                        setHeaders      : function(self){\r\n                            //Set headers\r\n                            if (self.settings.headers !== null) {\r\n                                for (var key in self.settings.headers) {\r\n                                    self.httpRequest.setRequestHeader(key, self.settings.headers[key]);\r\n                                }\r\n                            }\r\n                        },\r\n                        events          : {\r\n                            readystatechange: function (event, self) {\r\n                                if (ajax.requests.isConflict(self.settings.id) !== false) {\r\n                                    if (event.target) {\r\n                                        if (event.target.readyState) {\r\n                                            self.callback(self.callbacks.reaction, event);\r\n                                            switch (event.target.readyState) {\r\n                                                case 2:\r\n                                                    //Get headers\r\n                                                    self.responseHeaders = self.parseHeaders(event.target.getAllResponseHeaders());\r\n                                                    self.callback(self.callbacks.headers, event);\r\n                                                    break;\r\n                                                case 4:\r\n                                                    //Get response\r\n                                                    if (event.target.status === 200) {\r\n                                                        //Success\r\n                                                        self.response = self.parse(event.target.responseText);\r\n                                                        self.destroy(self);\r\n                                                        self.callback(self.callbacks.success, event);\r\n                                                        return true;\r\n                                                    } else {\r\n                                                        //Fail\r\n                                                        self.destroy(self);\r\n                                                        self.callback(self.callbacks.fail, event);\r\n                                                        return false;\r\n                                                    }\r\n                                                    break;\r\n                                            }\r\n                                        }\r\n                                    }\r\n                                }\r\n                            },\r\n                            timeout         : function (event, self) {\r\n                                if (ajax.requests.isConflict(self.settings.id) !== false) {\r\n                                    self.callback(self.callbacks.timeout, event);\r\n                                    self.destroy(self);\r\n                                }\r\n                            }\r\n                        },\r\n                        parse           : function (response){\r\n                            var result = {\r\n                                    original: response,\r\n                                    parsed  : void 0\r\n                                };\r\n                            try {\r\n                                //Try get JSON object\r\n                                result.parsed = JSON.parse(response);\r\n                            } catch (e) {\r\n                                //Do nothing\r\n                            } finally {\r\n                                return result;\r\n                            }\r\n                        },\r\n                        parseHeaders    : function (headers) {\r\n                            var result  = {\r\n                                    _headers: headers,\r\n                                    headers : {}\r\n                                },\r\n                                temp    = null;\r\n                            if (typeof headers === 'string') {\r\n                                temp = headers.split('\\r\\n');\r\n                                if (temp instanceof Array) {\r\n                                    temp.forEach(function (header) {\r\n                                        var data = header.split(':');\r\n                                        if (data instanceof Array) {\r\n                                            if (data[0] !== '') {\r\n                                                result.headers[data[0]] = header.replace(data[0] + ':', '');\r\n                                            }\r\n                                        }\r\n                                    });\r\n                                }\r\n                            }\r\n                            return result;\r\n                        },\r\n                        callback        : function (callback, event) {\r\n                            if (callback !== null) {\r\n                                system.handle(\r\n                                    callback,\r\n                                    [\r\n                                        this.response,\r\n                                        {\r\n                                            id          : this.id,\r\n                                            event       : event !== void 0 ? event : null,\r\n                                            headers     : this.responseHeaders,\r\n                                            response    : this.response,\r\n                                            parameters  : this.parameters,\r\n                                            url         : this.url,\r\n                                            abort       : this.abort.bind(this)\r\n                                        }\r\n                                    ],\r\n                                    'ajax.callback:: request ID:: ' + this.id + ' URL:: ' + this.url,\r\n                                    this\r\n                                );\r\n                            }\r\n                        },\r\n                        abort           : function () {\r\n                            if (this.httpRequest !== null) {\r\n                                if (typeof this.httpRequest.abort === 'function') {\r\n                                    this.httpRequest.abort();\r\n                                }\r\n                            }\r\n                        },\r\n                        destroy         : function (self) {\r\n                            clearTimeout(self.timerID);\r\n                            ajax.requests.remove(self);\r\n                        }\r\n                    };\r\n                    //Create and return request\r\n                    return new Request(url, method, parameters, callbacks, settings);\r\n                }\r\n                return null;\r\n            },\r\n            parse       : {\r\n                settings    : function (settings){\r\n                    var settings                        = typeof settings === 'object' ? (settings !== null ? settings : {}) : {};\r\n                    settings.id                         = (typeof settings.id === 'string' ? settings.id : (typeof settings.id === 'number' ? settings.id : IDs.id()));\r\n                    settings.id                         = (ajax.requests.isConflict(settings.id) === false      ? settings.id                       : IDs.id());\r\n                    settings.timeout                    = (typeof settings.timeout                      === 'number'    ? settings.timeout                      : ajax.settings.DEFAULT_TIMEOUT);\r\n                    settings.doNotChangeHeaders         = typeof settings.doNotChangeHeaders            === 'boolean'   ? settings.doNotChangeHeaders           : false,\r\n                    settings.doNotChangeParameters      = typeof settings.doNotChangeParameters         === 'boolean'   ? settings.doNotChangeParameters        : false,\r\n                    settings.doNotEncodeParametersAsURL = typeof settings.doNotEncodeParametersAsURL    === 'boolean'   ? settings.doNotEncodeParametersAsURL   : false,\r\n                    settings.headers                    = ajax.parse.headers(settings);\r\n                    return settings;\r\n                },\r\n                parameters  : function (_parameters, settings) {\r\n                    var parameters  = _parameters,\r\n                        params      = {},\r\n                        str_params  = '',\r\n                        excluded    = [],\r\n                        encodeURI   = null;\r\n                    if (!settings.doNotChangeParameters) {\r\n                        if (parameters instanceof Array) {\r\n                            //If as parameters we have string (after it was convert to array)\r\n                            Array.prototype.forEach.call(\r\n                                parameters,\r\n                                function (parameter, index) {\r\n                                    var property = null;\r\n                                    parameters[index]   = param.replace(/^\\s*\\?/gi, '');\r\n                                    property            = parameters[index].split('=');\r\n                                    if (property instanceof Array) {\r\n                                        if (property.length === 2) {\r\n                                            params[property[0]] = property[1];\r\n                                        } else {\r\n                                            excluded.push(parameters[index]);\r\n                                        }\r\n                                    } else {\r\n                                        excluded.push(parameters[index]);\r\n                                    }\r\n                                }\r\n                            );\r\n                        } else if (typeof parameters === 'object' && parameters !== null) {\r\n                            //If as parameters we have object\r\n                            for (var key in parameters) {\r\n                                switch(typeof parameters[key]){\r\n                                    case 'string':\r\n                                        params[key] = parameters[key];\r\n                                        break;\r\n                                    case 'boolean':\r\n                                        params[key] = parameters[key].toString();\r\n                                        break;\r\n                                    case 'number':\r\n                                        params[key] = parameters[key].toString();\r\n                                        break;\r\n                                    case 'object':\r\n                                        params[key] = JSON.stringify(parameters[key]);\r\n                                        break;\r\n                                    default:\r\n                                        try{\r\n                                            params[key] = JSON.stringify(parameters[key]);\r\n                                        } catch (e) { }\r\n                                        break;\r\n                                }\r\n                                params[key] = params[key];\r\n                            }\r\n                        }\r\n                        if (typeof _parameters !== 'string') {\r\n                            //Make parameters string\r\n                            ajax.settings.regs.JSON.lastIndex       = 0;\r\n                            ajax.settings.regs.URLENCODED.lastIndex = 0;\r\n                            if (ajax.settings.regs.JSON.test(settings.headers[ajax.settings.headers.CONTENT_TYPE])) {\r\n                                str_params = JSON.stringify(params);\r\n                            } else {\r\n                                encodeURI = ajax.settings.regs.URLENCODED.test(settings.headers[ajax.settings.headers.CONTENT_TYPE]);\r\n                                encodeURI = settings.doNotEncodeParametersAsURL ? false : encodeURI;\r\n                                for (var key in params) {\r\n                                    str_params += '&' + key + '=' + encodeURI ? encodeURIComponent(params[key]) : params[key];\r\n                                }\r\n                                str_params = str_params.replace(/^\\s*\\&/gi, '');\r\n                            }\r\n                        } else {\r\n                            str_params = _parameters;\r\n                        }\r\n                    } else {\r\n                        str_params  = _parameters;\r\n                    }\r\n                    //Return result\r\n                    return {\r\n                        original    : _parameters,\r\n                        parameters  : params,\r\n                        _parameters : str_params,\r\n                        excluded    : excluded\r\n                    }\r\n                },\r\n                callbacks   : function (_callbacks) {\r\n                    var callbacks = {\r\n                        before      : null,\r\n                        success     : null,\r\n                        fail        : null,\r\n                        reaction    : null,\r\n                        timeout     : null\r\n                    };\r\n                    if (typeof _callbacks === 'object') {\r\n                        if (_callbacks !== null) {\r\n                            callbacks.before    = typeof _callbacks.before      === 'function' ? _callbacks.before      : null;\r\n                            callbacks.success   = typeof _callbacks.success     === 'function' ? _callbacks.success     : null;\r\n                            callbacks.fail      = typeof _callbacks.fail        === 'function' ? _callbacks.fail        : null;\r\n                            callbacks.reaction  = typeof _callbacks.reaction    === 'function' ? _callbacks.reaction    : null;\r\n                            callbacks.timeout   = typeof _callbacks.timeout     === 'function' ? _callbacks.timeout     : null;\r\n                            callbacks.headers   = typeof _callbacks.headers     === 'function' ? _callbacks.headers     : null;\r\n                        }\r\n                    }\r\n                    return callbacks;\r\n                },\r\n                headers     : function (settings) {\r\n                    var _headers = {};\r\n                    if (!settings.doNotChangeHeaders) {\r\n                        if (typeof settings.headers === 'object' && settings.headers !== null) {\r\n                            oop.objects.forEach(settings.headers, function (key, value) {\r\n                                var parts = key.split('-');\r\n                                parts.forEach(function (part, index) {\r\n                                    parts[index] = part.charAt(0).toUpperCase() + part.slice(1);\r\n                                });\r\n                                _headers[parts.join('-')] = value;\r\n                            });\r\n                        }\r\n                        //Default headers\r\n                        if (_headers[ajax.settings.headers.CONTENT_TYPE] === void 0) {\r\n                            _headers[ajax.settings.headers.CONTENT_TYPE] = 'application/x-www-form-urlencoded';\r\n                        }\r\n                        if (_headers[ajax.settings.headers.ACCEPT] === void 0) {\r\n                            _headers[ajax.settings.headers.ACCEPT] = '*/*';\r\n                        }\r\n                    } else {\r\n                        _headers = typeof settings.headers === 'object' ? (settings.headers !== null ? settings.headers : {}) : {};\r\n                    }\r\n                    settings.headers = _headers;\r\n                    return settings.headers;\r\n                }\r\n            },\r\n        };\r\n        oop             = {\r\n            namespace   : {\r\n                create  : function (namespace, root) {\r\n                    /// <signature>\r\n                    ///     <summary>Create namespace from root.</summary>\r\n                    ///     <param name=\"namespace\" type=\"String\">Namespace, like: root.child.sub</param>\r\n                    ///     <returns type=\"Object\" value=\"{ target: root, parent: parent }\" mayBeNull=\"true\">Namespace data</returns>\r\n                    /// </signature>\r\n                    /// <signature>\r\n                    ///     <summary>Create namespace from root.</summary>\r\n                    ///     <param name=\"namespace\" type=\"String\">Namespace, like: root.child.sub</param>\r\n                    ///     <param name=\"root\"      type=\"Object\">[optional] Root object. Default - window</param>\r\n                    ///     <returns type=\"Object\" value=\"{ target: root, parent: parent }\" mayBeNull=\"true\">Namespace data</returns>\r\n                    /// </signature>\r\n                    var root    = root || window,\r\n                        parent  = null,\r\n                        target  = root,\r\n                        name    = null;\r\n                    if (typeof namespace === 'string') {\r\n                        try{\r\n                            Array.prototype.forEach.call(\r\n                                namespace.split('.'),\r\n                                function (part) {\r\n                                    parent  = target;\r\n                                    if (!(part in target)) {\r\n                                        target[part] = {};\r\n                                    }\r\n                                    target  = target[part];\r\n                                    name    = part;\r\n                                }\r\n                            );\r\n                            return {\r\n                                target  : target,\r\n                                parent  : parent,\r\n                                root    : root,\r\n                                name    : name\r\n                            };\r\n                        } catch (error) {\r\n                            return null;\r\n                        }\r\n                    }\r\n                    return null;\r\n                },\r\n                get     : function (namespace, root) {\r\n                    /// <signature>\r\n                    ///     <summary>Get last child in namespace.</summary>\r\n                    ///     <param name=\"namespace\" type=\"String\">Namespace, like: root.child.sub</param>\r\n                    ///     <returns type=\"Object\" mayBeNull=\"true\">Last child of namespace</returns>\r\n                    /// </signature>\r\n                    /// <signature>\r\n                    ///     <summary>Get last child in namespace.</summary>\r\n                    ///     <param name=\"namespace\" type=\"String\">Namespace, like: root.child.sub</param>\r\n                    ///     <param name=\"root\"      type=\"Object\">[optional] Root object. Default - window</param>\r\n                    ///     <returns type=\"Object\" mayBeNull=\"true\">Last child of namespace</returns>\r\n                    /// </signature>\r\n                    var root    = root || window,\r\n                        target  = root;\r\n                    if (typeof namespace === 'string') {\r\n                        try{\r\n                            Array.prototype.forEach.call(\r\n                                namespace.split('.'),\r\n                                function (part) {\r\n                                    if (!(part in target)) {\r\n                                        throw 'Property [' + target  + '] was not found';\r\n                                    }\r\n                                    target = target[part];\r\n                                }\r\n                            );\r\n                            return target;\r\n                        } catch (error) {\r\n                            return null;\r\n                        }\r\n                    }\r\n                    return null;\r\n                }\r\n            },\r\n            classes     : {\r\n                of      : function (object) {\r\n                    /// <summary>\r\n                    /// Returns class's name of object. \r\n                    /// </summary>\r\n                    /// <param name=\"object\" type=\"Object\">Object</param>\r\n                    /// <returns type=\"String\">Name of class</returns>\r\n                    if (object === null) return null;\r\n                    if (object === void 0) return null;\r\n                    return Object.prototype.toString.call(object).slice(8, -1);\r\n                },\r\n                create  : function (parameters) {\r\n                    ///     <summary>\r\n                    ///         Create instance of class with closed variables\r\n                    ///     </summary>\r\n                    ///     <param name=\"parameters\"    type=\"object\">Parameters of class:  &#13;&#10;\r\n                    ///     {   [function]              constr,                             &#13;&#10;\r\n                    ///         [function]              parent                              &#13;&#10;\r\n                    ///         [object]                privates,                           &#13;&#10;\r\n                    ///         [function || object]    prototype                           &#13;&#10;\r\n                    ///     }</param>\r\n                    ///     <returns type=\"object\">Instance of class</returns>\r\n                    /*\r\n                    =============EXAMPLE=============\r\n                        pattern = flex.oop.classes.create({\r\n                            constr      : function () {\r\n                                this.one = 'one';\r\n                            },\r\n                            parent      : [function],\r\n                            privates    : {\r\n                                two         : 'two',\r\n                                three       : 'three',\r\n                                __instance  : instance //--> automaticaly attached: instance of class\r\n                            },\r\n                            prototype   : function (privates) {\r\n                                var self        = this,         //->one\r\n                                    privates    = privates;     //->two; ->three\r\n                                var show = function () {\r\n                                    alert(self.one);\r\n                                    alert(privates.two);\r\n                                    alert(privates.three);\r\n                                };\r\n                                return {\r\n                                    show : show\r\n                                };\r\n                            }\r\n                        });\r\n                    =============EXAMPLE=============\r\n                    Parameter [parent] also allows to identify instance within instance of.\r\n                    */\r\n                    var constr          = typeof parameters.constr          === 'function'  ? parameters.constr         : null,\r\n                        parent          = typeof parameters.parent          === 'function'  ? parameters.parent         : null,\r\n                        privates        = parameters.privates               !== void 0      ? parameters.privates       : {},\r\n                        prototype       = parameters.prototype              !== void 0      ? parameters.prototype      : {},\r\n                        instance        = null,\r\n                        temp            = null,\r\n                        proto           = null;\r\n                    if (!(this instanceof oop.classes.create)) {\r\n                        if (parent !== null) {\r\n                            temp                = parent;\r\n                            temp.prototype      = parent.prototype;\r\n                            proto               = typeof prototype === 'function' ? prototype.call(new constr(), privates) : prototype;\r\n                            constr.prototype    = new temp();\r\n                            for (var prop in proto) {\r\n                                constr.prototype[prop] = proto[prop];\r\n                            }\r\n                        } else {\r\n                            constr.prototype    = typeof prototype === 'function' ? prototype.call(new constr(), privates) : prototype;\r\n                        }\r\n                        privates.__instance = new constr();\r\n                        return privates.__instance;\r\n                    } else {\r\n                        throw Error('Method [flex.oop.classes.create] cannot be used with derective NEW');\r\n                    }\r\n                },\r\n            },\r\n            objects     : {\r\n                forEach         : function (object, callback) {\r\n                    /// <summary>\r\n                    /// Apply callback function to each enumerable property of object. \r\n                    /// </summary>\r\n                    /// <param name=\"object\" type=\"Object\">Object</param>\r\n                    /// <param name=\"function\" type=\"Object\">Callback function(property_name, object)</param>\r\n                    /// <returns type=\"String\">Name of class</returns>\r\n                    if (typeof object === 'object') {\r\n                        for (var property in object) {\r\n                            (function (property, object, callback) {\r\n                                callback(property, object[property]);\r\n                            }(property, object, callback));\r\n                        }\r\n                        if (!('toString' in { toString: null })) {\r\n                            //Hello, IE8 :)\r\n                            Array.prototype.forEach.call(\r\n                                ['toString', 'valueOf', 'constructor', 'hasOwnPropery', 'isPrototypeOf', 'propertyIsEnumerable', 'toLocaleString'],\r\n                                function (protoprop) {\r\n                                    if (object.hasOwnProperty(prototype)) {\r\n                                        callback(protoprop, object[property]);\r\n                                    }\r\n                                }\r\n                            );\r\n                        }\r\n                    }\r\n                },\r\n                extend          : function (sources, target, exclusion) {\r\n                    /// <signature>\r\n                    ///     <summary>\r\n                    ///     Copy all properties from source object to target object. And miss exclusion. \r\n                    ///     </summary>\r\n                    ///     <param name=\"sources\" type=\"Object\">Object</param>\r\n                    ///     <param name=\"target\" type=\"Object\">Object (can be null, in this case new object will be created)</param>\r\n                    ///     <param name=\"exclusion\" type=\"Array\">String array with properties names</param>\r\n                    ///     <returns type=\"Object\">Updated target object</returns>\r\n                    /// </signature>\r\n                    /// <signature>\r\n                    ///     <summary>\r\n                    ///     Copy all properties from source object to target object. \r\n                    ///     </summary>\r\n                    ///     <param name=\"sources\" type=\"Object\">Object</param>\r\n                    ///     <param name=\"target\" type=\"Object\">Object (can be null, in this case new object will be created)</param>\r\n                    ///     <returns type=\"Object\">New object</returns>\r\n                    /// </signature>\r\n                    /// <signature>\r\n                    ///     <summary>\r\n                    ///     Create new object from all properties from source object. \r\n                    ///     </summary>\r\n                    ///     <param name=\"sources\" type=\"Object\">Object</param>\r\n                    ///     <returns type=\"Object\">New object</returns>\r\n                    /// </signature>\r\n                    var exclusion   = (oop.classes.of(exclusion) === 'Array' ? exclusion : []),\r\n                        target      = (target !== null ? (target !== void 0 ? (typeof target === 'object' ? target : {}) : {}) : {}),\r\n                        sources     = (typeof sources === 'object' ? [sources] : (oop.classes.of(sources) === 'Array' ? sources : null));\r\n                    if (sources !== null) {\r\n                        Array.prototype.forEach.call(\r\n                            sources,\r\n                            function (source) {\r\n                                if (typeof source === 'object') {\r\n                                    for (var property in source) {\r\n                                        if (exclusion.indexOf(property) === -1) {\r\n                                            target[property] = source[property];\r\n                                        }\r\n                                    }\r\n                                }\r\n                            }\r\n                        );\r\n                    }\r\n                    return target;\r\n                },\r\n                copy            : function (source, target) {\r\n                    /// <signature>\r\n                    ///     <summary>Copy object</summary>\r\n                    ///     <param name=\"source\" type=\"object\">Object - source</param>\r\n                    ///     <returns type=\"object\">object</returns>\r\n                    /// </signature>\r\n                    /// <signature>\r\n                    ///     <summary>Copy object</summary>\r\n                    ///     <param name=\"source\" type=\"object\">Object - source</param>\r\n                    ///     <param name=\"target\" type=\"object\">Object - target</param>\r\n                    ///     <returns type=\"object\">object</returns>\r\n                    /// </signature>\r\n                    function copyProperty(property) {\r\n                        var result = null;\r\n                        if (property instanceof Array) {\r\n                            result = [];\r\n                            Array.prototype.forEach.call(\r\n                                property,\r\n                                function (item) {\r\n                                    if (!(item instanceof Array) && typeof item !== 'object' && typeof item !== 'function') {\r\n                                        result.push(item);\r\n                                    } else {\r\n                                        result.push(copyProperty(item));\r\n                                    }\r\n                                }\r\n                            );\r\n                        } else if (typeof property === 'object' && property !== null && typeof property !== 'function') {\r\n                            result = copy(property);\r\n                        } else {\r\n                            result = property;\r\n                        }\r\n                        return result;\r\n                    };\r\n                    var target  = target || {},\r\n                        source  = (typeof source === \"object\" ? source : null),\r\n                        copy    = oop.objects.copy;\r\n                    if (source !== null) {\r\n                        for (var key in source) {\r\n                            if (source.hasOwnProperty(key)) {\r\n                                target[key] = copyProperty(source[key]);\r\n                            }\r\n                        }\r\n                        return target;\r\n                    }\r\n                    return null;\r\n                },\r\n                validate        : function (object, properties) {\r\n                    /// <signature>\r\n                    ///     <summary>\r\n                    ///         Validate object\r\n                    ///     </summary>\r\n                    ///     <param name=\"object\"        type=\"object\">Object for validate</param>\r\n                    ///     <param name=\"properties\"    type=\"object\">Parameters of validation:     &#13;&#10;\r\n                    ///     {   [string]            name,                                           &#13;&#10;\r\n                    ///         [string || array]   type,                                           &#13;&#10;\r\n                    ///         [any]               value       (default value),                    &#13;&#10;\r\n                    ///         [any || array]      values      (allowed values)                    &#13;&#10;\r\n                    ///         [function]          handle      (value = handle(value))             &#13;&#10;\r\n                    ///     }</param>\r\n                    ///     <returns type=\"boolean\">true - valid; false - isn't valid</returns>\r\n                    /// </signature>\r\n                    /// <signature>\r\n                    ///     <summary>\r\n                    ///         Validate object\r\n                    ///     </summary>\r\n                    ///     <param name=\"object\"        type=\"object\"   >Object for validate</param>\r\n                    ///     <param name=\"properties\"    type=\"array\"    >Array of parameters of validation</param>\r\n                    ///     <returns type=\"boolean\">true - valid; false - isn't valid</returns>\r\n                    /// </signature>\r\n                    var object          = (typeof object === \"object\" ? object : null),\r\n                        properties      = properties || null,\r\n                        types           = null,\r\n                        status          = null,\r\n                        values_check    = null;\r\n                    if (object !== null && properties !== null) {\r\n                        properties = (properties instanceof Array ? properties : [properties]);\r\n                        try{\r\n                            properties.forEach(function (property) {\r\n                                if (property.name && property.type) {\r\n                                    if (object[property.name] || typeof object[property.name] === 'boolean' || typeof object[property.name] === 'number') {\r\n                                        property.type = (typeof property.type === \"string\" ? [property.type] : property.type);\r\n                                        if (property.type instanceof Array) {\r\n                                            status = false;\r\n                                            try {\r\n                                                property.type.forEach(function (type) {\r\n                                                    if (typeof type === 'function') {\r\n                                                        status = (object[property.name] instanceof Array === true ? true : status);\r\n                                                    } else if (type === \"node\") {\r\n                                                        object[property.name] !== void 0 && (status = (object[property.name].nodeName ? true : status));\r\n                                                    } else if (type === \"array\") {\r\n                                                        status = (object[property.name] instanceof Array === true ? true : status);\r\n                                                    } else if (window[type] !== void 0 && ['string', 'number', 'bool'].indexOf(type) === -1){\r\n                                                        status = (object[property.name] instanceof window[type] ? true : status);\r\n                                                    } else {\r\n                                                        status = (typeof object[property.name] === type ? true : status);\r\n                                                    }\r\n                                                    if (status !== false){\r\n                                                        throw 'found';\r\n                                                    }\r\n                                                });\r\n                                            } catch (e) {\r\n                                                if (e !== 'found') {\r\n                                                    status = false;\r\n                                                }\r\n                                            } finally {\r\n                                                if (status === false) {\r\n                                                    if (property.value !== void 0) {\r\n                                                        object[property.name] = property.value;\r\n                                                    } else {\r\n                                                        throw 'deny';\r\n                                                    }\r\n                                                } else {\r\n                                                    if (property.values !== void 0) {\r\n                                                        if (property.values instanceof Array) {\r\n                                                            try {\r\n                                                                values_check = false;\r\n                                                                property.values.forEach(function (value) {\r\n                                                                    if (object[property.name] === value) {\r\n                                                                        values_check = true;\r\n                                                                        throw 'found';\r\n                                                                    }\r\n                                                                });\r\n                                                            } catch (e) {\r\n                                                            }\r\n                                                            if (values_check === false) {\r\n                                                                throw 'deny';\r\n                                                            }\r\n                                                        }\r\n                                                    }\r\n                                                    if (typeof property.handle === 'function') {\r\n                                                        try {\r\n                                                            object[property.name] = property.handle(object[property.name]);\r\n                                                        } catch (e) {\r\n                                                            if (property.value) {\r\n                                                                object[property.name] = property.value;\r\n                                                            } else {\r\n                                                                throw 'deny';\r\n                                                            }\r\n                                                        }\r\n                                                    }\r\n                                                }\r\n                                            }\r\n                                        }\r\n                                    } else {\r\n                                        if (property.value !== void 0) {\r\n                                            object[property.name] = property.value;\r\n                                        } else {\r\n                                            throw 'deny';\r\n                                        }\r\n                                    }\r\n                                }\r\n                            });\r\n                        } catch (e) {\r\n                            return false;\r\n                        }\r\n                        return true;\r\n                    }\r\n                    return null;\r\n                },\r\n                isValueIn       : function (target, value, deep) {\r\n                    /// <signature>\r\n                    ///     <summary>Search defined value in object</summary>\r\n                    ///     <param name=\"source\"    type=\"object\"   >Object</param>\r\n                    ///     <param name=\"value\"     type=\"any\"      >Searching value</param>\r\n                    ///     <returns type=\"boolean\">true - value is found; false - value isn't found</returns>\r\n                    /// </signature>\r\n                    /// <signature>\r\n                    ///     <summary>Search defined value in object</summary>\r\n                    ///     <param name=\"source\"    type=\"object\"   >Object</param>\r\n                    ///     <param name=\"value\"     type=\"any\"      >Searching value</param>\r\n                    ///     <param name=\"deep\"      type=\"boolean\"  >True - search in nested objects</param>\r\n                    ///     <returns type=\"boolean\">true - value is found; false - value isn't found</returns>\r\n                    /// </signature>\r\n                    var deep = typeof deep === 'boolean' ? deep : false;\r\n                    if (target instanceof Array) {\r\n                        try{\r\n                            target.forEach(function (property) {\r\n                                if (property === value) {\r\n                                    throw 'found';\r\n                                }\r\n                            });\r\n                            if (deep !== false) {\r\n                                target.forEach(function (property) {\r\n                                    if (typeof property === 'object' || property instanceof Array) {\r\n                                        if (oop.objects.isValueIn(property, value, deep) === true) {\r\n                                            throw 'found';\r\n                                        }\r\n                                    }\r\n                                });\r\n                            }\r\n                        } catch (e) {\r\n                            return true;\r\n                        }\r\n                        return false;\r\n                    } else if (typeof target === 'object') {\r\n                        try {\r\n                            oop.objects.forEach(target, function (key, property) {\r\n                                if (property === value) {\r\n                                    throw 'found';\r\n                                }\r\n                            });\r\n                            if (deep !== false) {\r\n                                oop.objects.forEach(target, function (key, property) {\r\n                                    if (typeof property === 'object' || property instanceof Array) {\r\n                                        if (oop.objects.isValueIn(property, value, deep) === true) {\r\n                                            throw 'found';\r\n                                        }\r\n                                    }\r\n                                });\r\n                            }\r\n                        } catch (e) {\r\n                            return true;\r\n                        }\r\n                        return false;\r\n                    }\r\n                    return null;\r\n                },\r\n                getByPath       : function (target, path) {\r\n                    ///     <summary>Get property by path</summary>\r\n                    ///     <param name=\"target\"    type=\"object\"   >Object</param>\r\n                    ///     <param name=\"path\"      type=\"any\"      >Path to property</param>\r\n                    ///     <returns type=\"any\">Final value or UNDEFINED</returns>\r\n                    var target      = typeof target     === 'object'    ? target    : null,\r\n                        path        = typeof path       === 'string'    ? path      : (path instanceof Array ? path : null),\r\n                        steps       = null,\r\n                        errors      = {\r\n                            NO_BY_PATH: 'NO_BY_PATH'\r\n                        },\r\n                        result      = target,\r\n                        finished    = false;\r\n                    if (target !== null && path !== null) {\r\n                        steps = path instanceof Array ? path : path.split('.');\r\n                        try {\r\n                            steps.forEach(function (step) {\r\n                                if (result[step] !== void 0) {\r\n                                    result = result[step];\r\n                                } else {\r\n                                    throw errors.NO_BY_PATH;\r\n                                }\r\n                            });\r\n                            finished = true;\r\n                        } catch (e) {\r\n                            if (e !== errors.NO_BY_PATH) {\r\n                                throw e;\r\n                            }\r\n                        }\r\n                    }\r\n                    return finished ? result : void 0;\r\n                },\r\n                findBy          : function (target, path, value, multiple) {\r\n                    /// <signature>\r\n                    ///     <summary>Search defined value in properties of object</summary>\r\n                    ///     <param name=\"target\"    type=\"object\"   >Object</param>\r\n                    ///     <param name=\"path\"      type=\"any\"      >Path to property</param>\r\n                    ///     <param name=\"value\"     type=\"any\"      >Compared value</param>\r\n                    ///     <returns type=\"any\">Match(s)</returns>\r\n                    /// </signature>\r\n                    /// <signature>\r\n                    ///     <summary>Search defined value in properties of object</summary>\r\n                    ///     <param name=\"target\"    type=\"object\"   >Object</param>\r\n                    ///     <param name=\"path\"      type=\"any\"      >Path to property</param>\r\n                    ///     <param name=\"value\"     type=\"any\"      >Compared value</param>\r\n                    ///     <param name=\"multiple\"  type=\"boolean\"  >True - return all matches; False - return only first</param>\r\n                    ///     <returns type=\"any\">Match(s)</returns>\r\n                    /// </signature>\r\n                    var target      = typeof target     === 'object'    ? target    : null,\r\n                        path        = typeof path       === 'string'    ? path      : null,\r\n                        multiple    = typeof multiple   === 'boolean'   ? multiple  : false,\r\n                        result      = multiple ? [] : null,\r\n                        errors      = {\r\n                            FOUND       : '1'\r\n                        };\r\n                    if (target !== null && path !== null) {\r\n                        path = path.split('.');\r\n                        try {\r\n                            oop.objects.forEach(target, function (property, _value) {\r\n                                var _result = oop.objects.getByPath(_value, path);\r\n                                if (_result !== void 0) {\r\n                                    if (_result === value) {\r\n                                        if (multiple) {\r\n                                            result.push(_value);\r\n                                        } else {\r\n                                            result = _value;\r\n                                            throw errors.FOUND;\r\n                                        }\r\n                                    }\r\n                                }\r\n                            });\r\n                        } catch (e) {\r\n                            if (e !== errors.FOUND) {\r\n                                throw e;\r\n                            }\r\n                        }\r\n                    }\r\n                    return result;\r\n                }\r\n            },\r\n            wrappers    : {\r\n                objects: function () {\r\n                    wrappers.prototypes.add.object('forEach',   function (callback)             {\r\n                        return oop.objects.forEach(this.target, callback);\r\n                    });\r\n                    wrappers.prototypes.add.object('extend',    function (target, exclusion)    {\r\n                        return oop.objects.extend(this.target, target, exclusion);\r\n                    });\r\n                    wrappers.prototypes.add.object('copy',      function (target)               {\r\n                        return oop.objects.copy(this.target, target);\r\n                    });\r\n                    wrappers.prototypes.add.object('validate',  function (properties)           {\r\n                        return oop.objects.validate(this.target, properties);\r\n                    });\r\n                    wrappers.prototypes.add.object('isValueIn', function (value, deep)          {\r\n                        return oop.objects.isValueIn(this.target, value, deep);\r\n                    });\r\n                    wrappers.prototypes.add.object('getByPath', function (path) {\r\n                        return oop.objects.getByPath(this.target, path);\r\n                    });\r\n                    wrappers.prototypes.add.object('findBy',    function (path, value, multiple) {\r\n                        return oop.objects.findBy(this.target, path, value, multiple);\r\n                    });\r\n                    wrappers.prototypes.add.object('createInstanceClass', function () {\r\n                        return oop.classes.create(this.target);\r\n                    });\r\n                }\r\n            }\r\n        };\r\n        arrays          = {\r\n            findBy      : function (target, path, value, multiple) {\r\n                /// <signature>\r\n                ///     <summary>Search defined value in items of array (if items are objects)</summary>\r\n                ///     <param name=\"target\"    type=\"array\"    >Array of objects</param>\r\n                ///     <param name=\"path\"      type=\"any\"      >Path to property</param>\r\n                ///     <param name=\"value\"     type=\"any\"      >Compared value</param>\r\n                ///     <returns type=\"any\">Match(s)</returns>\r\n                /// </signature>\r\n                /// <signature>\r\n                ///     <summary>Search defined value in items of array (if items are objects)</summary>\r\n                ///     <param name=\"target\"    type=\"array\"    >Array of objects</param>\r\n                ///     <param name=\"path\"      type=\"any\"      >Path to property</param>\r\n                ///     <param name=\"value\"     type=\"any\"      >Compared value</param>\r\n                ///     <param name=\"multiple\"  type=\"boolean\"  >True - return all matches; False - return only first</param>\r\n                ///     <returns type=\"any\">Match(s)</returns>\r\n                /// </signature>\r\n                var target      = target instanceof Array           ? target    : null,\r\n                    path        = typeof path       === 'string'    ? path      : null,\r\n                    multiple    = typeof multiple   === 'boolean'   ? multiple  : false,\r\n                    result      = multiple ? [] : null,\r\n                    errors      = {\r\n                        FOUND       : '1'\r\n                    };\r\n                if (target !== null && path !== null) {\r\n                    path = path.split('.');\r\n                    try {\r\n                        target.forEach(function (item) {\r\n                            var _result = oop.objects.getByPath(item, path);\r\n                            if (_result !== void 0) {\r\n                                if (_result === value) {\r\n                                    if (multiple) {\r\n                                        result.push(item);\r\n                                    } else {\r\n                                        result = item;\r\n                                        throw errors.FOUND;\r\n                                    }\r\n                                }\r\n                            }\r\n                        });\r\n                    } catch (e) {\r\n                        if (e !== errors.FOUND) {\r\n                            throw e;\r\n                        }\r\n                    }\r\n                }\r\n                return result;\r\n            },\r\n            wrappers    : {\r\n                array   : function () {\r\n                    wrappers.prototypes.add.array('findBy', function (path, value, multiple) {\r\n                        return arrays.findBy(this.target, path, value, multiple);\r\n                    });\r\n                }\r\n            }\r\n        };\r\n        cache           = {\r\n            init    : function(){\r\n                if (system.localStorage.isAvailable() !== false) {\r\n                    cache.storage.load();\r\n                    cache.actions.hash();\r\n                    if (config.defaults.resources.USE_STORAGED === true) {\r\n                        //Looking for events only if cache is using\r\n                        cache.attach();\r\n                    }\r\n                }\r\n            },\r\n            attach  : function () {\r\n                ['ON_NEW_MODULE', 'ON_UPDATED_MODULE', 'ON_NEW_RESOURCE', 'ON_UPDATED_RESOURCE'].forEach(function (event) {\r\n                    events.core.listen(\r\n                        flex.registry.events.system.cache.GROUP,\r\n                        flex.registry.events.system.cache[event],\r\n                        function (param) {\r\n                            cache.events.on(config.defaults.cache.reset[event], param);\r\n                        }\r\n                    );\r\n                });\r\n                events.core.listen(\r\n                    flex.registry.events.system.logs.GROUP,\r\n                    flex.registry.events.system.logs.CRITICAL,\r\n                    function (param) {\r\n                        cache.events.on(config.defaults.cache.reset.ON_CRITICAL_ERROR, param);\r\n                    }\r\n                );\r\n            },\r\n            events  : {\r\n                on  : function (reset, url) {\r\n                    if (reset === true) {\r\n                        cache.actions.reset(url);\r\n                    }\r\n                },\r\n                fire: {\r\n                    ON_NEW_MODULE       : function (url) {\r\n                        events.core.fire(flex.registry.events.system.cache.GROUP, flex.registry.events.system.cache.ON_NEW_MODULE, url);\r\n                    },\r\n                    ON_UPDATED_MODULE   : function (url) {\r\n                        events.core.fire(flex.registry.events.system.cache.GROUP, flex.registry.events.system.cache.ON_UPDATED_MODULE, url);\r\n                    },\r\n                    ON_NEW_RESOURCE     : function (url) {\r\n                        events.core.fire(flex.registry.events.system.cache.GROUP, flex.registry.events.system.cache.ON_NEW_RESOURCE, url);\r\n                    },\r\n                    ON_UPDATED_RESOURCE : function (url) {\r\n                        events.core.fire(flex.registry.events.system.cache.GROUP, flex.registry.events.system.cache.ON_UPDATED_RESOURCE, url);\r\n                    },\r\n                }\r\n            },\r\n            actions : {\r\n                reset   : (function () {\r\n                    var done = false;\r\n                    return function (url, force) {\r\n                        var force = typeof force === 'boolean' ? force : false;\r\n                        if (done === false) {\r\n                            done = true;\r\n                            if (cache.storage.data.reseted === false || force === true) {\r\n                                system.localStorage.reset(options.other.STORAGE_PREFIX);\r\n                                logs.log('[CACHE]: cache was reseted. The reason is \"' + url + '\"', logs.types.WARNING);\r\n                                cache.storage.data.reseted = true;\r\n                                cache.storage.save();\r\n                            } else {\r\n                                cache.storage.data.reseted = false;\r\n                                cache.storage.save();\r\n                            }\r\n                        }\r\n                    };\r\n                }()),\r\n                hash    : function () {\r\n                    var hash    = null,\r\n                        script  = document.querySelector('script[src*=\"' + options.files.CORE + '\"]');\r\n                    if (script !== null) {\r\n                        hash = system.url.parse(script.src.toLowerCase());\r\n                        if (hash.params !== null) {\r\n                            if (hash.params[options.cache.URL_PARAM_VERSION]) {\r\n                                hash = hash.params[options.cache.URL_PARAM_VERSION];\r\n                                if (cache.storage.data.hash !== hash) {\r\n                                    cache.storage.data.hash = hash;\r\n                                    cache.storage.save();\r\n                                    cache.actions.reset(hash, true);\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                    return hash;\r\n                }\r\n            },\r\n            storage : {\r\n                data        : {\r\n                    reseted : true,\r\n                    hash    : null\r\n                },\r\n                load        : function () {\r\n                    function validate(data) {\r\n                        for (var key in cache.storage.data) {\r\n                            if (data[key] === void 0) {\r\n                                //It means that flex.core.js was updated (block cache)\r\n                                return false;\r\n                            }\r\n                        }\r\n                        return true;\r\n                    };\r\n                    var data = system.localStorage.getJSON(options.cache.STORAGE);\r\n                    if (data !== null) {\r\n                        if (validate(data) === true) {\r\n                            cache.storage.data = data;\r\n                        } else {\r\n                            cache.storage.save();\r\n                        }\r\n                    }\r\n                    return false;\r\n                },\r\n                save        : function(){\r\n                    system.localStorage.setJSON(options.cache.STORAGE, cache.storage.data);\r\n                },\r\n            },\r\n        };\r\n        hashes          = {\r\n            storage: {\r\n                data    : {},\r\n                get     : function (){\r\n                    hashes.storage.data = system.localStorage.getJSON(options.hashes.LOCAL_STORAGE_NAME, options.other.STORAGE_PREFIX);\r\n                    if (typeof hashes.storage.data !== 'object' || hashes.storage.data === null) {\r\n                        hashes.storage.create();\r\n                    }\r\n                    return hashes.storage.data;\r\n                },\r\n                create  : function () {\r\n                    hashes.storage.data = {};\r\n                    hashes.storage.update();\r\n                },\r\n                update  : function () {\r\n                    system.localStorage.setJSON(options.hashes.LOCAL_STORAGE_NAME, hashes.storage.data, options.other.STORAGE_PREFIX);\r\n                }\r\n            },\r\n            get     : function (url) {\r\n                /// <signature>\r\n                ///     <summary>Get hash for defined resource</summary>\r\n                ///     <param name=\"url\" type=\"string\">URL to resource</param>\r\n                ///     <returns type=\"string\">HASH</returns>\r\n                /// </signature>\r\n                var storage = hashes.storage.get();\r\n                return typeof storage[url] === 'object' ? storage[url].hash : null;\r\n            },\r\n            set     : function (url, hash) {\r\n                var storage = hashes.storage.get();\r\n                if (typeof hash === 'string') {\r\n                    storage[url] = {\r\n                        url     : url,\r\n                        hash    : hash\r\n                    };\r\n                    hashes.storage.update();\r\n                    return true;\r\n                }\r\n                return false;\r\n            },\r\n            update  : {\r\n                add         : function(url){\r\n                    /// <signature>\r\n                    ///     <summary>Update hash of defined resource</summary>\r\n                    ///     <param name=\"url\" type=\"string\">URL to resource</param>\r\n                    ///     <returns type=\"void\">void</returns>\r\n                    /// </signature>\r\n                    hashes.update.queue.add(url);\r\n                },\r\n                queue       : {\r\n                    queue       : {},\r\n                    journal     : {},\r\n                    isLock      : true,\r\n                    unlock      : function () {\r\n                        hashes.update.queue.isLock = false;\r\n                        hashes.update.proceed();\r\n                    },\r\n                    add         : function (url) {\r\n                        if (typeof url === 'string') {\r\n                            if (hashes.update.queue.journal[url] === void 0) {\r\n                                hashes.update.queue.journal [url] = true;\r\n                                hashes.update.queue.queue   [url] = { url: url, working : false };\r\n                            }\r\n                        }\r\n                        if (!hashes.update.queue.isLock) {\r\n                            hashes.update.proceed();\r\n                        }\r\n                    },\r\n                    del         : function (url) {\r\n                        if (typeof url === 'string') {\r\n                            hashes.update.queue.queue[url] = null;\r\n                            delete hashes.update.queue.queue[url];\r\n                        }\r\n                    },\r\n                    work        : function (url) {\r\n                        if (typeof hashes.update.queue.queue[url] === 'object') {\r\n                            hashes.update.queue.queue[url].working = true;\r\n                        }\r\n                    },\r\n                    isWorking   : function (url) {\r\n                        if (typeof hashes.update.queue.queue[url] === 'object') {\r\n                            return hashes.update.queue.queue[url].working;\r\n                        }\r\n                    },\r\n                },\r\n                proceed     : function () {\r\n                    oop.objects.forEach(hashes.update.queue.queue, function (key, value) {\r\n                        var request = null;\r\n                        if (hashes.update.queue.isWorking(key) === false) {\r\n                            hashes.update.queue.work(key);\r\n                            request = ajax.create(\r\n                                value.url,\r\n                                ajax.settings.methods.GET,\r\n                                null,\r\n                                {\r\n                                    headers : function (response, request) { hashes.update.processing   (key, value.url, request); },\r\n                                    fail    : function (response, request) { hashes.update.fail         (key, value.url, request); }\r\n                                }\r\n                            );\r\n                            request.send();\r\n                        }\r\n                    });\r\n                },\r\n                processing  : function (key, url, request) {\r\n                    var hash    = '',\r\n                        _hash   = hashes.get(url);\r\n                    if (request.headers !== null) {\r\n                        if (request.headers._headers !== '') {\r\n                            hashes.update.queue.del(key);\r\n                            oop.objects.forEach(request.headers.headers, function (key, value) {\r\n                                if (key.toLowerCase() !== 'date') {\r\n                                    hash += value;\r\n                                }\r\n                            });\r\n                            if (hashes.get(url) !== hash) {\r\n                                if (_hash === null) {\r\n                                    logs.log('[HASHES]:: hash for resource [' + url + '] was generated. Next updating of page, resource will be loaded again.', logs.types.KERNEL_LOGS);\r\n                                } else {\r\n                                    logs.log('[HASHES]:: resource [' + url + '] have to be updated.', logs.types.KERNEL_LOGS);\r\n                                    hashes.resources.update(url);\r\n                                }\r\n                                //Update hash\r\n                                hashes.set(url, hash);\r\n                            }\r\n                            request.abort();\r\n                        }\r\n                    }\r\n                },\r\n                fail        : function (key, url, request) {\r\n                    if (request.headers === null) {\r\n                        logs.log('[HASHES]:: fail to load hash for resource [' + url + '].', logs.types.KERNEL_LOGS);\r\n                        hashes.update.queue.del(key);\r\n                    }\r\n                }\r\n            },\r\n            resources   : {\r\n                update  : function(url){\r\n                    if (hashes.resources.css.update(url) === true) {\r\n                        return true;\r\n                    }\r\n                    logs.log('[HASHES]:: resource [' + url + '] cannot be updated in current session. It will be done after page be reloaded.', logs.types.KERNEL_LOGS);\r\n                },\r\n                css     : {\r\n                    update: function (url) {\r\n                        var style = document.querySelector('style[' + system.resources.css.settings.attr.SRC + '$=\"' + url + '\"]');\r\n                        if (style !== null) {\r\n                            system.resources.css.connect(url, function () {\r\n                                style.parentNode.removeChild(style);\r\n                                logs.log('[HASHES]:: resource [' + url + '] have been updated in current session.', logs.types.KERNEL_LOGS);\r\n                            });\r\n                            return true;\r\n                        }\r\n                        return false;\r\n                    }\r\n                }\r\n            }\r\n        };\r\n        modules         = {\r\n            isReady     : function(){\r\n                return overhead.register.isReady(options.register.MODULES_HISTROY);\r\n            },\r\n            preload     : function () {\r\n                var libraries = config.defaults.resources.MODULES;\r\n                if (libraries instanceof Array) {\r\n                    if (libraries.length > 0) {\r\n                        overhead.register.open(\r\n                            options.register.MODULES_HISTROY,\r\n                            libraries.map(function (library) { return modules.tools.clearName(library); }),\r\n                            external.preload\r\n                        );\r\n                        Array.prototype.forEach.call(\r\n                            libraries,\r\n                            function (library) {\r\n                                var src = modules.reference.getSource(library);\r\n                                if (modules.registry.getSettings(library.replace(/^flex\\./gi, '')) === null) {\r\n                                    modules.registry.add({\r\n                                        name        : library,\r\n                                        hash        : hashes.get(src),\r\n                                        autoHash    : true,\r\n                                        source      : src\r\n                                    });\r\n                                }\r\n                                modules.reference.history.add(library);\r\n                                modules.repository.call(library);\r\n                            }\r\n                        );\r\n                    } else {\r\n                        external.preload();\r\n                    }\r\n                }\r\n            },\r\n            reference   : {\r\n                history     : {\r\n                    data    : [],\r\n                    add     : function (name) {\r\n                        modules.reference.history.data.push(name.replace('flex.libraries.', '').replace(/^flex\\./gi, ''));\r\n                    },\r\n                    isIn    : function (name) {\r\n                        return (modules.reference.history.data.indexOf(name.replace('flex.libraries.', '').replace(/^flex\\./gi, '')) !== -1 ? true : false);\r\n                    }\r\n                },\r\n                caller      : {\r\n                    name    : null,\r\n                    ready   : null\r\n                },\r\n                getSource   : function(lib){\r\n                    var parts = lib.split('.'),\r\n                        src = '';\r\n                    if (parts.length > 0) {\r\n                        if (parts[0] === 'flex') {\r\n                            src = options.files.FLEX + lib;\r\n                        } else {\r\n                            src = options.files.ROOT + parts[0] + '/' + lib.replace(parts[0] + '.', '');\r\n                        }\r\n                    } else {\r\n                        src = options.files.ROOT + lib;\r\n                    }\r\n                    return src + '.js';\r\n                },\r\n                call    : function (library) {\r\n                    var caller  = modules.reference.caller,\r\n                        histroy = modules.reference.history;\r\n                    if (caller.name !== null) {\r\n                        if (modules.storage.get(library) === null) {\r\n                            caller.ready = false;\r\n                            if (histroy.isIn(library) === false) {\r\n                                histroy.add(library);\r\n                                modules.repository.call(library);\r\n                            }\r\n                        } else {\r\n                            caller.ready = (caller.ready === false ? false : true);\r\n                        }\r\n                    }\r\n                },\r\n                check   : function (library, callback) {\r\n                    var caller          = modules.reference.caller,\r\n                        storaged        = modules.storage.get(library),\r\n                        callback        = typeof callback === 'function' ? callback : false,\r\n                        waited          = [];\r\n                    if (storaged !== null) {\r\n                        try {\r\n                            caller.name     = library;\r\n                            caller.ready    = true;\r\n                            if (storaged.reference instanceof Array) {\r\n                                storaged.reference.forEach(function (lib) {\r\n                                    var src     = modules.reference.getSource(lib),\r\n                                        name    = modules.tools.fullName(lib.replace(/^flex\\./gi, '')),\r\n                                        constr  = null;\r\n                                    if (modules.registry.getSettings(lib.replace(/^flex\\./gi, '')) === null) {\r\n                                        modules.registry.add({\r\n                                            name        : lib,\r\n                                            hash        : hashes.get(src),\r\n                                            autoHash    : true,\r\n                                            source      : src\r\n                                        });\r\n                                    }\r\n                                    if (callback){\r\n                                        constr = oop.namespace.get(name);\r\n                                        if (constr === null || constr.create === void 0){\r\n                                            waited.push(name);\r\n                                        }\r\n                                    }\r\n                                    modules.reference.call(lib);\r\n                                });\r\n                            }\r\n                        } catch (e) {\r\n                            logs.log('[MODULES]:: module [' + library + '] generated error during request for references:\\n\\r' + logs.parseError(e), logs.types.CRITICAL);\r\n                            caller.ready    = false;\r\n                        } finally {\r\n                            storaged.ready  = caller.ready;\r\n                            caller.name     = null;\r\n                            caller.ready    = null;\r\n                            if (callback) {\r\n                                if (waited.length > 0) {\r\n                                    waited = waited.filter(function (lib) {\r\n                                        var constr = oop.namespace.get(lib);\r\n                                        return constr === null ? true : (constr.create === void 0 ? true : false);\r\n                                    });\r\n                                    if (waited.length > 0) {\r\n                                        overhead.register.open(\r\n                                            options.register.MODULES_HISTROY_CREATION + ':' + library,\r\n                                            waited,\r\n                                            callback\r\n                                        );\r\n                                        modules.reference.waited.add(library);\r\n                                    } else {\r\n                                        callback();\r\n                                    }\r\n                                } else {\r\n                                    callback();\r\n                                }\r\n                            }\r\n                        }\r\n                    } else {\r\n                        callback && callback();\r\n                    }\r\n                },\r\n                pending : function () {\r\n                    var libraries   = modules.storage.pending(),\r\n                        check       = modules.reference.check;\r\n                    if (libraries.length > 0) {\r\n                        Array.prototype.forEach.call(\r\n                            libraries,\r\n                            function (library) {\r\n                                check(library);\r\n                            }\r\n                        );\r\n                    }\r\n                },\r\n                waited  : {\r\n                    tasks   : [],\r\n                    add     : function (lib) {\r\n                        modules.reference.waited.tasks.push(lib);\r\n                    },\r\n                    done    : function (lib){\r\n                        modules.reference.waited.tasks.forEach(function (task) {\r\n                            overhead.register.done(options.register.MODULES_HISTROY_CREATION + ':' + task, lib);\r\n                        });\r\n                    }\r\n                }\r\n            },\r\n            registry    : {\r\n                makeCaller  : function (library){\r\n                    var property    = oop.namespace.create(library.name.replace(/^flex\\./gi, ''), flex.libraries),\r\n                        full_name   = null;\r\n                    if (property !== null) {\r\n                        full_name = modules.tools.fullName(library.name.replace(/^flex\\./gi, ''));\r\n                        Object.defineProperty(\r\n                            property.parent,\r\n                            property.name,\r\n                            {\r\n                                enumerable  : false,\r\n                                configurable: false,\r\n                                value       : function () { modules.reference.call(full_name); }\r\n                            }\r\n                        );\r\n                    }\r\n                },\r\n                getSettings : function (name) {\r\n                    /// <summary>\r\n                    /// Get settings of library\r\n                    /// </summary>\r\n                    /// <param name=\"name\" type=\"string\">Library name</param>\r\n                    /// <returns type=\"object\">Settings if it was found or NULL in fail</returns>\r\n                    var name = name.indexOf('flex.libraries.') === 0 ? name.replace('flex.libraries.', '') : name;\r\n                    return oop.namespace.get(name, flex.libraries_data);\r\n                },\r\n                add         : function (library) {\r\n                    var property    = null,\r\n                        name        = library.name.replace(/^flex\\./gi, '');\r\n                    if (modules.registry.getSettings(name) === null) {\r\n                        //Add to list\r\n                        property = oop.namespace.create(name, flex.libraries_data);\r\n                        if (property !== null) {\r\n                            property.target.name        = library.name;\r\n                            property.target.source      = library.source;\r\n                            property.target.hash        = library.hash;\r\n                            property.target.autoHash    = library.autoHash;\r\n                            //Add caller\r\n                            modules.registry.makeCaller(library);\r\n                            return true;\r\n                        }\r\n                    }\r\n                    return false;\r\n                },\r\n                validateSRC : function (url) {\r\n                    return system.url.sterilize(url.replace(config.defaults.settings.KERNEL_PATH_SIGNATURE, config.defaults.paths.CORE + '/'));\r\n                }\r\n            },\r\n            storage     : {\r\n                data    : {},\r\n                add     : function (parameters) {\r\n                    /// <summary>\r\n                    /// Add module data to virtual storage\r\n                    /// </summary>\r\n                    /// <param name=\"parameters\" type=\"Object\">Object of module</param>\r\n                    /// <returns type=\"boolean\">true if success and false if fail</returns>\r\n                    var storage = modules.storage.data;\r\n                    if (storage[parameters.name] === void 0) {\r\n                        storage[parameters.name] = {\r\n                            name            : parameters.name,\r\n                            protofunction   : parameters.protofunction,\r\n                            onBeforeAttach  : parameters.onBeforeAttach,\r\n                            onAfterAttach   : parameters.onAfterAttach,\r\n                            extend          : parameters.extend,\r\n                            reference       : parameters.reference,\r\n                            ready           : false\r\n                        };\r\n                        return true;\r\n                    }\r\n                    return false;\r\n                },\r\n                get     : function (name) {\r\n                    /// <summary>\r\n                    /// Get module data from virtual storage\r\n                    /// </summary>\r\n                    /// <param name=\"name\" type=\"string\">Name of module</param>\r\n                    /// <returns type=\"Object\">Object of module</returns>\r\n                    return (modules.storage.data[name] === void 0 ? null : modules.storage.data[name]);\r\n                },\r\n                pending : function () {\r\n                    /// <summary>\r\n                    /// Get pending modules data from virtual storage\r\n                    /// </summary>\r\n                    /// <returns type=\"Array\">Array of names of pending modules</returns>\r\n                    var libraries = [];\r\n                    for (var library in modules.storage.data) {\r\n                        if (modules.storage.data[library].ready === false) {\r\n                            libraries.push(library);\r\n                        }\r\n                    }\r\n                    return libraries;\r\n                },\r\n            },\r\n            attach      : {\r\n                queue       : {\r\n                    data    : [],\r\n                    add     : function (parameters) {\r\n                        /// <summary>\r\n                        /// Add module to queue of initialization (until registry will be ready)\r\n                        /// </summary>\r\n                        /// <param name=\"parameters\" type=\"Object\">Object of module</param>\r\n                        /// <returns type=\"void\">void</returns>\r\n                        modules.attach.queue.data.push(parameters);\r\n                    },\r\n                    reset   : function () {\r\n                        /// <summary>\r\n                        /// Reset a queue of initialization\r\n                        /// </summary>\r\n                        /// <returns type=\"void\">void</returns>\r\n                        modules.attach.queue.data = [];\r\n                    },\r\n                    proceed : function () {\r\n                        /// <summary>\r\n                        /// Processing of queue of initialization\r\n                        /// </summary>\r\n                        /// <returns type=\"void\">void</returns>\r\n                        var queue = modules.attach.queue;\r\n                        Array.prototype.forEach.call(\r\n                            queue.data,\r\n                            function (parameters, index) {\r\n                                if (typeof parameters.going !== 'boolean') {\r\n                                    queue.data[index].going = true;\r\n                                    modules.attach.embody.procceed(parameters);\r\n                                }\r\n                            }\r\n                        );\r\n                        queue.reset();\r\n                    }\r\n                },\r\n                safely      : function (parameters) {\r\n                    /// <summary>\r\n                    /// Safely attach module. Method attaches module with queue\r\n                    /// </summary>\r\n                    /// <param name=\"parameters\" type=\"Object\">Object of module:    &#13;&#10;\r\n                    /// {   [string]    name,                                       &#13;&#10;\r\n                    ///     [function]  protofunction,                              &#13;&#10;\r\n                    ///     [function]  reference       (optional),                 &#13;&#10;\r\n                    ///     [array]     resources       (optional),                 &#13;&#10;\r\n                    ///     [function]  onBeforeAttach  (optional),                 &#13;&#10;\r\n                    ///     [function]  onAfterAttach   (optional),                 &#13;&#10;\r\n                    ///     [array]     extend          (optional)}</param>\r\n                    /// <returns type=\"boolean\">true if success and false if module placed in queue</returns>\r\n                    var queue = modules.attach.queue;\r\n                    queue.add(parameters);\r\n                    queue.proceed();\r\n                    return false;\r\n                },\r\n                embody      : {\r\n                    createConstructor   : function (name, protofunction) {\r\n                        var library         = modules.storage.get(name),\r\n                            protofunction   = typeof protofunction === 'function' ? protofunction : null;\r\n                        if (protofunction !== null || library !== null) {\r\n                            protofunction = protofunction !== null ? protofunction : library.protofunction;\r\n                            //First time prototype of function should be a function\r\n                            if (typeof protofunction.prototype === 'function') {\r\n                                return function () {\r\n                                    //Initialize prototype if it's necessary\r\n                                    if (typeof protofunction.prototype === 'function') {\r\n                                        protofunction.prototype = protofunction.prototype();\r\n                                    }\r\n                                    return new protofunction();\r\n                                };\r\n                            } else {\r\n                                logs.log('[MODULES]:: cannot create caller for module [' + name + ']. Prototype of module should be a function.', logs.types.CRITICAL);\r\n                                return null;\r\n                            }\r\n                        }\r\n                        logs.log('[MODULES]:: cannot create caller for module [' + name + ']. Incorrect prototype function.', logs.types.CRITICAL);\r\n                        return null;\r\n                    },\r\n                    procceed            : function (parameters) {\r\n                        /// <summary>\r\n                        /// Attach module. Method attaches module directly without queue\r\n                        /// </summary>\r\n                        /// <param name=\"parameters\" type=\"Object\">Object of module:    &#13;&#10;\r\n                        /// {   [string]    name,                                       &#13;&#10;\r\n                        ///     [function]  protofunction,                              &#13;&#10;\r\n                        ///     [function]  reference           (optional),             &#13;&#10;\r\n                        ///     [array]     resources           (optional),             &#13;&#10;\r\n                        ///     [function]  onBeforeAttach      (optional),             &#13;&#10;\r\n                        ///     [function]  onAfterAttach       (optional),             &#13;&#10;\r\n                        ///     [array]     extend              (optional)}</param>\r\n                        /// <returns type=\"boolean\">true if success and false if fail</returns>\r\n                        var constructor_storage = null;\r\n                        if (oop.objects.validate(parameters, [  { name: 'name',             type: 'string'                          },\r\n                                                                { name: 'protofunction',    type: 'function'                        },\r\n                                                                { name: 'reference',        type: 'array',              value: null },\r\n                                                                { name: 'resources',        type: 'array',              value: []   },\r\n                                                                { name: 'onBeforeAttach',   type: 'function',           value: null },\r\n                                                                { name: 'onAfterAttach',    type: 'function',           value: null },\r\n                                                                { name: 'extend',           type: ['array', 'object'],  value: [] } ]) !== false) {\r\n                            if (modules.reference.history.isIn(parameters.name)) {\r\n                                //Module was loaded from separeted file\r\n                                //Correct namespace\r\n                                parameters.name     = modules.tools.fullName(parameters.name);\r\n                                //Get link to storage of library. Also it checks is library in registry or not\r\n                                constructor_storage = oop.namespace.get(parameters.name);\r\n                                if (constructor_storage !== null && constructor_storage !== false) {\r\n                                    //Check is library attached or not\r\n                                    if (constructor_storage.create === void 0) {\r\n                                        //Save library data in storage\r\n                                        modules.storage.add(parameters);\r\n                                        //Make constructor\r\n                                        constructor_storage.create = modules.attach.embody.createConstructor(parameters.name, parameters.protofunction);\r\n                                        if (constructor_storage.create !== null) {\r\n                                            //Add to repository\r\n                                            modules.repository.add(parameters);\r\n                                            //Check references of this library\r\n                                            modules.reference.check(parameters.name, function () {\r\n                                                //Start events\r\n                                                system.handle(parameters.onBeforeAttach);\r\n                                                //Check resources of module and continue after resources will be loaded\r\n                                                modules.resources.check(\r\n                                                    parameters.name,\r\n                                                    parameters.resources,\r\n                                                    function () {\r\n                                                        //Restart references of pending libraries\r\n                                                        modules.reference.pending();\r\n                                                        //Mark as done\r\n                                                        overhead.register.done(options.register.MODULES_HISTROY, parameters.name);\r\n                                                        //Start events\r\n                                                        system.handle(parameters.onAfterAttach);\r\n                                                        //Done event\r\n                                                        modules.reference.waited.done(parameters.name);\r\n                                                        logs.log('[MODULES]:: [' + parameters.name + '] was initialized.', logs.types.KERNEL_LOGS);\r\n                                                    }\r\n                                                );\r\n                                            });\r\n                                            return true;\r\n                                        }\r\n                                    }\r\n                                }\r\n                            } else {\r\n                                //Module is buildin \r\n                                //Add settings\r\n                                if (modules.registry.getSettings(parameters.name.replace(/^flex\\./gi, '')) === null) {\r\n                                    modules.registry.add({\r\n                                        name        : parameters.name,\r\n                                        hash        : null,\r\n                                        autoHash    : false,\r\n                                        source      : null\r\n                                    });\r\n                                }\r\n                                //Correct namespace\r\n                                parameters.name = modules.tools.fullName(parameters.name);\r\n                                //Add to virtual repository\r\n                                modules.storage.add(parameters);\r\n                                //Add to repository\r\n                                modules.repository.add(parameters);\r\n                            }\r\n                        }\r\n                        return false;\r\n                    },\r\n                },\r\n                unexpected  : {\r\n                    isReady     : function(){\r\n                        return modules.attach.unexpected.journal.isReady(true);\r\n                    },\r\n                    journal     : {\r\n                        consts      : {\r\n                            MODULES     : '(modules)',\r\n                            RESOURCES   : '(resources)'\r\n                        },\r\n                        modules     : {\r\n                            add     : function (url) {\r\n                                return modules.attach.unexpected.journal.add(url, true);\r\n                            },\r\n                            done    : function (url) {\r\n                                modules.attach.unexpected.journal.done(url, true);\r\n                                if (modules.attach.unexpected.journal.isReady(true)) {\r\n                                    coreEvents.onFlexLoad();\r\n                                }\r\n                            },\r\n                            isIn    : function (url) {\r\n                                return modules.attach.unexpected.journal.isIn(url, true);\r\n                            },\r\n                            isReady : function () {\r\n                                return modules.attach.unexpected.journal.isReady(true);\r\n                            }\r\n                        },\r\n                        resource    : {\r\n                            add : function (url) {\r\n                                return modules.attach.unexpected.journal.add(url, false);\r\n                            },\r\n                            done: function (url) {\r\n                                return modules.attach.unexpected.journal.done(url, false);\r\n                            },\r\n                            isIn: function (url) {\r\n                                return modules.attach.unexpected.journal.isIn(url, false);\r\n                            }\r\n                        },\r\n                        add         : function (url, isModule) {\r\n                            var consts  = modules.attach.unexpected.journal.consts,\r\n                                journal = overhead.globaly.get(options.storage.GROUP, (isModule ? consts.MODULES : consts.RESOURCES) + options.storage.UNEXPECTED_JOURNAL, {});\r\n                            if (!journal[url]) {\r\n                                journal[url] = false;\r\n                            }\r\n                        },\r\n                        done        : function (url, isModule) {\r\n                            var consts  = modules.attach.unexpected.journal.consts,\r\n                                journal = overhead.globaly.get(options.storage.GROUP, (isModule ? consts.MODULES : consts.RESOURCES) + options.storage.UNEXPECTED_JOURNAL, {});\r\n                            if (journal[url] !== void 0) {\r\n                                journal[url] = true;\r\n                            }\r\n                        },\r\n                        isIn        : function (url, isModule) {\r\n                            var consts  = modules.attach.unexpected.journal.consts,\r\n                                journal = overhead.globaly.get(options.storage.GROUP, (isModule ? consts.MODULES : consts.RESOURCES) + options.storage.UNEXPECTED_JOURNAL, {});\r\n                            return journal[url] === void 0 ? false : true;\r\n                        },\r\n                        isReady     : function (isModule) {\r\n                            var consts  = modules.attach.unexpected.journal.consts,\r\n                                journal = overhead.globaly.get(options.storage.GROUP, (isModule ? consts.MODULES : consts.RESOURCES) + options.storage.UNEXPECTED_JOURNAL, {}),\r\n                                ready   = true;\r\n                            oop.objects.forEach(journal, function (url, value) {\r\n                                ready = ready === false ? false : value;\r\n                            });\r\n                            return ready;\r\n                        },\r\n                    },\r\n                    launched    : {\r\n                        storage : [],\r\n                        add     : function (handle) {\r\n                            modules.attach.unexpected.launched.storage.push(handle);\r\n                        },\r\n                        reset   : function (handle) {\r\n                            modules.attach.unexpected.launched.storage = null;\r\n                        },\r\n                        accept  : function () {\r\n                            modules.attach.unexpected.launched.storage.forEach(function (handle) {\r\n                                handle.call(window);\r\n                            });\r\n                            modules.attach.unexpected.launched.reset();\r\n                        },\r\n                    },\r\n                    safely      : function (parameters, do_not_detect_url) {\r\n                        function validateSRC(src) {\r\n                            if (typeof src === 'string') {\r\n                                return system.url.sterilize(src. replace(config.defaults.settings.ATTACH_PATH_SIGNATURE, config.defaults.paths.ATTACH + '/'));\r\n                            } else {\r\n                                return null;\r\n                            }\r\n                        };\r\n                        function proceed() {\r\n                            //Add module to journal\r\n                            modules.attach.unexpected.journal.modules.add(parameters.src);\r\n                            //Correct paths in resources\r\n                            parameters.require = parameters.require.map(function (resource) {\r\n                                if (typeof resource.url === 'string') {\r\n                                    resource.url = validateSRC(resource.url);\r\n                                    if (resource !== null) {\r\n                                        //Remove all already loaded resources\r\n                                        resource = modules.attach.unexpected.journal.resource.isIn(resource.url) === false ? resource : null;\r\n                                    }\r\n                                    return resource;\r\n                                } else {\r\n                                    logs.log('[' + parameters.name + ']:: some resource was defined incorrectly. Field [url] was not found.', logs.types.CRITICAL);\r\n                                }\r\n                                return null;\r\n                            });\r\n                            parameters.require = parameters.require.filter(function (resource) {\r\n                                return resource !== null ? true : false;\r\n                            });\r\n                            //Add hash to update\r\n                            hashes.update.add(parameters.src);\r\n                            //Try init module\r\n                            if (parameters.require.length > 0) {\r\n                                //Create queue to wait for all requared resources\r\n                                requaredPackageID = IDs.id(parameters.src);\r\n                                overhead.register.open(\r\n                                    requaredPackageID,\r\n                                    parameters.require.map(function (resource) { return resource.url; }),\r\n                                    function () {\r\n                                        //After all resources are loaded -> init module\r\n                                        modules.attach.unexpected.embody(parameters);\r\n                                    }\r\n                                );\r\n                                //Add resources to journal (it can be modules too)\r\n                                parameters.require.forEach(function (resource) {\r\n                                    modules.attach.unexpected.journal.resource.add(resource.url);\r\n                                });\r\n                                //Load resources\r\n                                parameters.require.forEach(function (resource) {\r\n                                    //Add update of hash\r\n                                    hashes.update.add(resource.url);\r\n                                    //Call resource\r\n                                    external.repository.call(resource.url, hashes.get(resource.url), function () {\r\n                                        //Done in package\r\n                                        overhead.register.done(requaredPackageID, resource.url);\r\n                                        //Done in journal\r\n                                        modules.attach.unexpected.journal.resource.done(resource.url);\r\n                                    });\r\n                                });\r\n                            } else {\r\n                                //Init module\r\n                                modules.attach.unexpected.embody(parameters);\r\n                            }\r\n                        };\r\n                        var requaredPackageID = null,\r\n                            do_not_detect_url = typeof do_not_detect_url === 'boolean' ? do_not_detect_url : false;\r\n                        if (oop.objects.validate(parameters, [  { name: 'name',             type: 'string'                          },\r\n                                                                { name: 'launch',           type: 'function',           value: null },\r\n                                                                { name: 'constructor',      type: 'function',           value: null },\r\n                                                                { name: 'module',           type: 'function',           value: null },\r\n                                                                { name: 'require',          type: 'array',              value: []   },\r\n                                                                { name: 'onBeforeAttach',   type: 'function',           value: null },\r\n                                                                { name: 'onAfterAttach',    type: 'function',           value: null },\r\n                                                                { name: 'extend',           type: ['array', 'object'],  value: null }]) !== false) {\r\n                            //Try get URL of script, like script is attached via tag.\r\n                            if (!do_not_detect_url) {\r\n                                parameters.src = system.resources.js.getCurrentSRC();\r\n                            }\r\n                            //Try get URL of script, like it was inbuilt\r\n                            parameters.src = parameters.src === null ? external.inbuilt.get.js() : parameters.src;\r\n                            if (parameters.src !== null) {\r\n                                if (modules.attach.unexpected.journal.modules.isIn(parameters.src) === false) {\r\n                                    if (parameters.launch !== null) {\r\n                                        //Attauch as self-launched\r\n                                        proceed();\r\n                                    } else if (parameters.module !== null) {\r\n                                        //Attach as module\r\n                                        if (modules.registry.add({\r\n                                                name        : parameters.name,\r\n                                                source      : parameters.src,\r\n                                                hash        : hashes.get(parameters.src),\r\n                                                autoHash    : true\r\n                                        }) !== false) {\r\n                                            proceed();\r\n                                        } else {\r\n                                            logs.log('[' + parameters.name + ']:: attempt to attach module twice', logs.types.WARNING);\r\n                                        }\r\n                                    }\r\n                                }\r\n                            } else {\r\n                                logs.log('[' + parameters.name + ']:: unexpected error with module. Cannot detect URL', logs.types.CRITICAL);\r\n                            }\r\n                        } else {\r\n                            if (typeof parameters.name === 'string') {\r\n                                if (typeof parameters.module !== 'function') {\r\n                                    logs.log('[' + parameters.name + ']:: to attach new module, should be defined parameter [module] as function', logs.types.CRITICAL);\r\n                                }\r\n                            } else {\r\n                                logs.log('Fail to attach new module.', logs.types.CRITICAL);\r\n                            }\r\n                        }\r\n                    },\r\n                    embody      : function (parameters) {\r\n                        /// <summary>\r\n                        /// Attach module. Method attaches module directly without queue\r\n                        /// </summary>\r\n                        /// <param name=\"parameters\" type=\"Object\">Object of module:    &#13;&#10;\r\n                        /// {   [string]    name,                                       &#13;&#10;\r\n                        ///     [string]    src,                                        &#13;&#10;\r\n                        ///     [function]  constructor,                                &#13;&#10;\r\n                        ///     [function]  module,                                     &#13;&#10;\r\n                        ///     [function]  onBeforeAttach      (optional),             &#13;&#10;\r\n                        ///     [function]  onAfterAttach       (optional),             &#13;&#10;\r\n                        ///     [array]     extend              (optional)}</param>\r\n                        /// <returns type=\"boolean\">true if success and false if fail</returns>\r\n                        var constructor_storage = null;\r\n                        if (oop.objects.validate(parameters, [  { name: 'name',             type: 'string'                          },\r\n                                                                { name: 'src',              type: 'string'                          },\r\n                                                                { name: 'launch',           type: 'function',           value: null },\r\n                                                                { name: 'constructor',      type: 'function',           value: null },\r\n                                                                { name: 'module',           type: 'function',           value: null },\r\n                                                                { name: 'onBeforeAttach',   type: 'function',           value: null },\r\n                                                                { name: 'onAfterAttach',    type: 'function',           value: null },\r\n                                                                { name: 'extend',           type: ['array', 'object'],  value: [] } ]) !== false) {\r\n                            if (parameters.launch !== null) {\r\n                                //Attauch as self-launched\r\n                                modules.attach.unexpected.launched.add(parameters.launch);\r\n                                //Accept module\r\n                                modules.attach.unexpected.journal.modules.done(parameters.src);\r\n                                return true;\r\n                            } else if (parameters.module !== null) {\r\n                                //Attauch as module\r\n                                //Correct namespace\r\n                                parameters.name = modules.tools.fullName(parameters.name);\r\n                                //Get link to storage of library. Also it checks is library in registry or not\r\n                                constructor_storage = oop.namespace.get(parameters.name);\r\n                                if (constructor_storage !== null && constructor_storage !== false) {\r\n                                    //Check is library attached or not\r\n                                    if (constructor_storage.create === void 0) {\r\n                                        //Add protofunction\r\n                                        parameters.protofunction            = parameters.constructor === null ? function(){} : parameters.constructor;\r\n                                        parameters.protofunction.prototype  = parameters.module;\r\n                                        //Make constructor\r\n                                        constructor_storage.create          = modules.attach.embody.createConstructor(parameters.name, parameters.protofunction);\r\n                                        //Accept module\r\n                                        modules.attach.unexpected.journal.modules.done(parameters.src);\r\n                                        return true;\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                        return false;\r\n                    },\r\n                },\r\n            },\r\n            resources   : {\r\n                loader: {\r\n                    load    : function (url, hash, autoHash) {\r\n                        var request = ajax.create(\r\n                                url,\r\n                                ajax.settings.methods.GET,\r\n                                null,\r\n                                {\r\n                                    success : function (response, request) {\r\n                                        modules.resources.loader.success(url, response, hash);\r\n                                    },\r\n                                    fail    : function (response, request) {\r\n                                        modules.resources.loader.fail(request, url, response, hash);\r\n                                    },\r\n                                }\r\n                            );\r\n                        request.send();\r\n                    },\r\n                    success : function (url, response, hash) {\r\n                        system.localStorage.setJSON(\r\n                            url,\r\n                            {\r\n                                value   : response.original,\r\n                                url     : url,\r\n                                hash    : hash\r\n                            },\r\n                            options.other.STORAGE_PREFIX\r\n                        );\r\n                    },\r\n                    fail    : function (request, url, response, hash) {\r\n                        logs.log('[MODULES]:: cannot load resource: [' + url + ']. Resource will be attached.', logs.types.WARNING);\r\n                    },\r\n                },\r\n                check   : function (name, resources, callback) {\r\n                    var settings    = modules.registry.getSettings(name),\r\n                        repository  = null;\r\n                    if (settings !== null) {\r\n                        if (resources !== null) {\r\n                            if (!(resources instanceof Array)) {\r\n                                resources = [resources];\r\n                            }\r\n                            if (resources.length > 0) {\r\n                                //Validate resources links\r\n                                resources = resources.map(function (resource) {\r\n                                    if (typeof resource.url === 'string') {\r\n                                        return {\r\n                                            url     : modules.registry.validateSRC(resource.url),\r\n                                            hash    : settings.autoHash === true ? hashes.get(resource.url) : settings.hash,\r\n                                            autoHash:settings.autoHash\r\n                                        }\r\n                                    }\r\n                                });\r\n                                //Registry resources of module\r\n                                overhead.register.open(\r\n                                    options.register.RESOURCES_HISTORY + ':' + name,\r\n                                    resources.map(function (resource) { return resource.url; }),\r\n                                    callback\r\n                                );\r\n                                //Try get resources\r\n                                modules.resources.get(resources, name);\r\n                            } else {\r\n                                callback();\r\n                            }\r\n                        }\r\n                    }\r\n                },\r\n                get     : function (resources, name) {\r\n                    var journal = overhead.globaly.get(options.storage.GROUP, options.storage.RESOURCES_JOURNAL, {});\r\n                    Array.prototype.forEach.call(\r\n                        resources,\r\n                        function (resource) {\r\n                            if (!journal[resource.url]) {\r\n                                modules.resources.load(name, resource);\r\n                                journal[resource.url] = name;\r\n                            }\r\n                        }\r\n                    );\r\n                },\r\n                load    : function (name, resource) {\r\n                    function restore(name, resource) {\r\n                        var wrapper         = null,\r\n                            resourceType    = system.url.getTypeOfResource(resource.url);\r\n                        if (resourceType === options.resources.types.CSS) {\r\n                            //Resource: CSS\r\n                            system.resources.css.adoption(resource.value, null, system.url.restoreFullURL(resource.url));\r\n                        } else if (resourceType === options.resources.types.JS) {\r\n                            //Resource: JS\r\n                            wrapper = new Function(resource.value);\r\n                            try {\r\n                                wrapper.call(window);\r\n                                logs.log('[MODULES]:: resource: [' + resource.url + '] was adopted.', logs.types.KERNEL_LOGS);\r\n                            } catch (e) {\r\n                                logs.log('[MODULES]:: during initialization of resource: [' + resource.url + '] happened error:/n/r' + logs.parseError(e), logs.types.WARNING);\r\n                            }\r\n                        }\r\n                        overhead.register.done(options.register.RESOURCES_HISTORY + ':' + name, resource.url);\r\n                    };\r\n                    function reload(name, resource) {\r\n                        var resourceType = system.url.getTypeOfResource(resource.url);\r\n                        if (resourceType === options.resources.types.CSS) {\r\n                            //Resource: CSS\r\n                            system.resources.css.connect(\r\n                                resource.url,\r\n                                function () {\r\n                                    overhead.register.done(options.register.RESOURCES_HISTORY + ':' + name, resource.url);\r\n                                    logs.log('[MODULES]:: resource of module [' + name + '] (file: [' + resource.url + ']) is reloaded.', logs.types.KERNEL_LOGS);\r\n                                },\r\n                                null\r\n                            );\r\n                        } else if (resourceType === options.resources.types.JS) {\r\n                            //Resource: JS\r\n                            system.resources.js.connect(\r\n                                resource.url,\r\n                                function () {\r\n                                    overhead.register.done(options.register.RESOURCES_HISTORY + ':' + name, resource.url);\r\n                                    logs.log('[MODULES]:: resource of module [' + name + '] (file: [' + resource.url + ']) is reloaded.', logs.types.KERNEL_LOGS);\r\n                                },\r\n                                null\r\n                            );\r\n                        }\r\n                        //Try get same resources and cache it\r\n                        modules.resources.loader.load(resource.url, resource.hash, resource.autoHash);\r\n                    };\r\n                    var localStorage    = system.localStorage,\r\n                        storaged        = localStorage.getJSON(resource.url, options.other.STORAGE_PREFIX);\r\n                    if (storaged !== null && config.defaults.resources.USE_STORAGED !== false) {\r\n                        if (resource.hash === storaged.hash) {\r\n                            restore(name, storaged);\r\n                        } else {\r\n                            reload(name, resource);\r\n                            logs.log('[MODULES]:: resource of module [' + name + '] (file: [' + resource.url + ']) will be reloaded.', logs.types.KERNEL_LOGS);\r\n                        }\r\n                    } else {\r\n                        reload(name, resource);\r\n                    }\r\n                    //Update hash\r\n                    if (resource.autoHash === true) {\r\n                        hashes.update.add(resource.url);\r\n                    }\r\n                },\r\n            },\r\n            repository  : {\r\n                add         : function (parameters) {\r\n                    /// <summary>\r\n                    /// Add resource into repository\r\n                    /// </summary>\r\n                    /// <param name=\"parameters\" type=\"Object\">Object of data. Same as in [attach.embody.procceed]</param>\r\n                    /// <returns type=\"boolean\">true if success and false if not</returns>\r\n                    var settings    = modules.registry.getSettings(parameters.name),\r\n                        data        = {\r\n                            name            : parameters.name                       || null,\r\n                            constr          : parameters.protofunction              || null,\r\n                            protofunction   : parameters.protofunction.prototype    || null,\r\n                            reference       : parameters.reference                  || null,\r\n                            resources       : parameters.resources                  || null,\r\n                            onBeforeAttach  : parameters.onBeforeAttach             || null,\r\n                            onAfterAttach   : parameters.onAfterAttach              || null,\r\n                            extend          : parameters.extend                     || null,\r\n                            unexpected      : parameters.unexpected                 || null,\r\n                        },\r\n                        hash        = modules.repository.getHash(parameters.name);\r\n                    data.constr         = (typeof data.constr           === 'function'  ? parsing.js.stringify(data.constr           ) : null);\r\n                    data.protofunction  = (typeof data.protofunction    === 'function'  ? parsing.js.stringify(data.protofunction    ) : null);\r\n                    data.reference      = (data.reference instanceof Array              ? data.reference                               : null);\r\n                    data.onBeforeAttach = (typeof data.onBeforeAttach   === 'function'  ? parsing.js.stringify(data.onBeforeAttach   ) : null);\r\n                    data.onAfterAttach  = (typeof data.onAfterAttach    === 'function'  ? parsing.js.stringify(data.onAfterAttach    ) : null);\r\n                    if (data.constr !== null && data.protofunction !== null) {\r\n                        //Log message\r\n                        logs.log('[MODULES]:: module [' + parameters.name + '] was updated.', logs.types.KERNEL_LOGS);\r\n                        //Save hash\r\n                        if (settings.autoHash === true) {\r\n                            settings.hash = hashes.get(settings.source);\r\n                            hashes.set(settings.source, settings.hash);\r\n                            hashes.update.add(settings.source);\r\n                        }\r\n                        //Return result\r\n                        return system.localStorage.set(\r\n                            parameters.name,\r\n                            JSON.stringify(\r\n                                {\r\n                                    data: data,\r\n                                    hash: settings.hash\r\n                                }\r\n                            ),\r\n                            true,\r\n                            options.other.STORAGE_PREFIX\r\n                        );\r\n                    }\r\n                    return null;\r\n                },\r\n                get         : function (name, hash) {\r\n                    /// <summary>\r\n                    /// Get resource from repository\r\n                    /// </summary>\r\n                    /// <param name=\"name\" type=\"string\">Name of resource</param>\r\n                    /// <param name=\"hash\" type=\"string\">Control hash for resource</param>\r\n                    /// <returns type=\"object\">Value of resource if success and NULL if not</returns>\r\n                    var localStorage    = system.localStorage,\r\n                        storaged        = localStorage.get(name, true, options.other.STORAGE_PREFIX),\r\n                        settings        = modules.registry.getSettings(name);\r\n                    if ((settings.source === null && storaged !== null) || (storaged !== null && config.defaults.resources.USE_STORAGED !== false)) {\r\n                        try{\r\n                            storaged = JSON.parse(storaged);\r\n                            if (storaged.hash === hash || settings.source === null) {\r\n                                storaged.data.protofunction = parsing.js.parse({\r\n                                    constr  : { params: storaged.data.constr.params,        body: storaged.data.constr.body         },\r\n                                    proto   : { params: storaged.data.protofunction.params, body: storaged.data.protofunction.body  }\r\n                                });\r\n                                if (storaged.data.onBeforeAttach !== null) {\r\n                                    storaged.data.onBeforeAttach = parsing.js.parseFunction(storaged.data.onBeforeAttach.params, storaged.data.onBeforeAttach.body);\r\n                                }\r\n                                if (storaged.data.onAfterAttach !== null) {\r\n                                    storaged.data.onAfterAttach = parsing.js.parseFunction(storaged.data.onAfterAttach.params, storaged.data.onAfterAttach.body);\r\n                                }\r\n                                storaged.data.constr = null;\r\n                                delete storaged.data.constr;\r\n                                return storaged.data;\r\n                            } else {\r\n                                //Log message\r\n                                logs.log('[MODULES]:: module [' + name + '] will be updated.', logs.types.KERNEL_LOGS);\r\n                                cache.events.fire.ON_UPDATED_MODULE(name);\r\n                                localStorage.del(name, options.other.STORAGE_PREFIX);\r\n                                return null;\r\n                            }\r\n                        } catch (e) {\r\n                            logs.log('[MODULES]:: new module [' + name + '] is detected.', logs.types.WARNING);\r\n                            cache.events.fire.ON_NEW_MODULE(name);\r\n                            localStorage.del(name, options.other.STORAGE_PREFIX);\r\n                            return null;\r\n                        }\r\n                    } else {\r\n                        logs.log('[MODULES]:: new module [' + name + '] new module is detected.', logs.types.WARNING);\r\n                        cache.events.fire.ON_NEW_MODULE(name);\r\n                    }\r\n                    return null;\r\n                },\r\n                getHash     : function (name){\r\n                    /// <summary>\r\n                    /// Returns hash of resource from repository\r\n                    /// </summary>\r\n                    /// <param name=\"name\" type=\"string\">Name of resource</param>\r\n                    /// <returns type=\"string\">Value of hash</returns>\r\n                    var localStorage    = system.localStorage,\r\n                        storaged        = localStorage.get(name, true, options.other.STORAGE_PREFIX);\r\n                    if (storaged !== null) {\r\n                        try{\r\n                            storaged = JSON.parse(storaged);\r\n                            return storaged.hash;\r\n                        } catch (e) {\r\n                            return null;\r\n                        }\r\n                    }\r\n                    return null;\r\n                },\r\n                call        : function (name) {\r\n                    /// <summary>\r\n                    /// Try find resource into repository and load it if necessary \r\n                    /// </summary>\r\n                    /// <param name=\"name\" type=\"string\">Name of resource</param>\r\n                    /// <returns type=\"void\">void</returns>\r\n                    var name        = modules.tools.clearName(name),\r\n                        settings    = modules.registry.getSettings(name),\r\n                        repository  = null;\r\n                    if (settings !== null) {\r\n                        if (settings.hash !== void 0) {\r\n                            overhead.register.add(options.register.MODULES_HISTROY, modules.tools.clearName(name));\r\n                            repository = modules.storage.get(modules.tools.fullName(name));\r\n                            repository = repository !== null ? repository : modules.repository.get(modules.tools.fullName(name), settings.hash);\r\n                            if (repository !== null) {\r\n                                modules.attach.safely(repository);\r\n                                return true;\r\n                            } else {\r\n                                if (system.url.is.js(settings.source)) {\r\n                                    system.resources.js.connect(settings.source, null, null);\r\n                                    return true;\r\n                                }\r\n                                if (system.url.is.css(settings.source)) {\r\n                                    system.resources.css.connect(settings.source, null, null);\r\n                                    return true;\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                    logs.log('[MODULES]:: module [' + name + '] cannot be called. Check definitions in registry [flex.registry.modules.js].', logs.types.CRITICAL);\r\n                    return false;\r\n                },\r\n            },\r\n            tools       : {\r\n                fullName    : function (library) {\r\n                    library = library.toLowerCase();\r\n                    return (library.indexOf('flex.libraries.') !== 0 ? 'flex.libraries.' + library : library).replace(/\\.\\./gi, '.');\r\n                },\r\n                clearName   : function (library) {\r\n                    library = library.toLowerCase().replace('flex.', '');\r\n                    return (library.indexOf('libraries.') === -1 ? 'flex.libraries.' + library : 'flex.' + library);\r\n                }\r\n            }\r\n        };\r\n        external        = {\r\n            isReady     : function(){\r\n                return external.preload.__started === void 0 ? false : overhead.register.isReady(options.register.EXTERNAL_HISTROY);\r\n            },\r\n            queue       : {\r\n                create  : function (resources) {\r\n                    overhead.register.open(\r\n                        options.register.EXTERNAL_HISTROY,\r\n                        resources.map(function (resource) { return resource.url; }),\r\n                        coreEvents.onFlexLoad\r\n                    );\r\n                },\r\n                add     : function (url) {\r\n                    if (typeof url === 'string') {\r\n                        return overhead.register.add(options.register.EXTERNAL_HISTROY, url);\r\n                    }\r\n                    return false;\r\n                },\r\n                done    : function (url) {\r\n                    if (typeof url === 'string') {\r\n                        return overhead.register.done(options.register.EXTERNAL_HISTROY, url);\r\n                    }\r\n                    return false;\r\n                }\r\n            },\r\n            preload     : function () {\r\n                var resources = config.defaults.resources.EXTERNAL;\r\n                external.preload.__started = true;\r\n                if (resources instanceof Array) {\r\n                    if (resources.length > 0) {\r\n                        external.queue.create(resources);\r\n                        Array.prototype.forEach.call(\r\n                            resources,\r\n                            function (resource) {\r\n                                if (oop.objects.validate(resource, [{ name: 'url',  type: 'string'                  },\r\n                                                                    { name: 'hash', type: 'string', value: false    }]) !== false) {\r\n                                    resource.autoHash   = resource.hash === false ? true : false;\r\n                                    resource.hash       = resource.hash === false ? hashes.get(resource.url) : resource.hash;\r\n                                    external.repository.call(resource.url, resource.hash);\r\n                                    if (resource.autoHash === true) {\r\n                                        hashes.update.add(resource.url);\r\n                                    }\r\n                                }\r\n                            }\r\n                        );\r\n                    } else {\r\n                        coreEvents.onFlexLoad();\r\n                    }\r\n                } else {\r\n                    coreEvents.onFlexLoad();\r\n                }\r\n            },\r\n            embody      : function (parameters) {\r\n                function JS(content, url, onLoad, onError) {\r\n                    var wrapper = null;\r\n                    if (config.defaults.resources.USE_STORAGED === false || parameters.body === null) {\r\n                        system.resources.js.connect(url, onLoad, onError);\r\n                    } else {\r\n                        wrapper = new Function(content);\r\n                        try {\r\n                            external.inbuilt.set.js(url);\r\n                            wrapper.call(window);\r\n                            external.inbuilt.set.js(null);\r\n                            system.handle(onLoad, null, 'external.embody', this);\r\n                            return true;\r\n                        } catch (e) {\r\n                            logs.log('During initialization of resource: [' + url + '] happened error:/n/r' + logs.parseError(e), logs.types.WARNING);\r\n                            system.handle(onError, null, 'external.embody', this);\r\n                            return false;\r\n                        }\r\n                    }\r\n                };\r\n                function CSS(content, url, onLoad, onError) {\r\n                    if (config.defaults.resources.USE_STORAGED === false || parameters.body === null) {\r\n                        system.resources.css.connect(url, onLoad, onError);\r\n                    } else {\r\n                        external.inbuilt.set.css(url);\r\n                        system.resources.css.adoption(content, null, system.url.restoreFullURL(url));\r\n                        external.inbuilt.set.css(null);\r\n                        system.handle(onLoad, null, 'external.embody', this);\r\n                    }\r\n                    return true;\r\n                };\r\n                /// <summary>\r\n                /// Try to initialize external resource\r\n                /// </summary>\r\n                /// <param name=\"parameters\" type=\"Object\">Object of resource:  &#13;&#10;\r\n                /// {   [string]    url,                                        &#13;&#10;\r\n                ///     [string]    body,                                       &#13;&#10;\r\n                ///     [string]    hash                                        &#13;&#10;\r\n                ///     [function]  [option] callback                           &#13;&#10;\r\n                /// }</param>\r\n                /// <returns type=\"boolean\">true if success and false if not</returns>\r\n                var Embody          = null,\r\n                    resourceType    = system.url.getTypeOfResource(parameters.url);\r\n                if (resourceType === options.resources.types.JS) {\r\n                    Embody = JS;\r\n                } else if (resourceType === options.resources.types.CSS) {\r\n                    Embody = CSS;\r\n                }\r\n                if (Embody !== null) {\r\n                    Embody(\r\n                        parameters.body,\r\n                        parameters.url,\r\n                        function () {\r\n                            if (parameters.callback !== null) {\r\n                                system.handle(parameters.callback, parameters.url, '[flex]external.embody');\r\n                            } else {\r\n                                external.queue.done(parameters.url);\r\n                            }\r\n                        },\r\n                        function () {\r\n                            logs.log('Resource [' + parameters.url + '] was not load. But FLEX continues loading.', logs.types.CRITICAL);\r\n                            if (parameters.callback === null) {\r\n                                external.queue.done(parameters.url);\r\n                            }\r\n                        }\r\n                    );\r\n                }\r\n            },\r\n            inbuilt     : {\r\n                storage : {\r\n                    js  : null,\r\n                    css : null\r\n                },\r\n                set     : {\r\n                    js  : function (url) {\r\n                        external.inbuilt.storage.js = url;\r\n                    },\r\n                    css : function (url) {\r\n                        external.inbuilt.storage.css = url;\r\n                    },\r\n                },\r\n                get     : {\r\n                    js  : function () {\r\n                        return external.inbuilt.storage.js;\r\n                    },\r\n                    css : function () {\r\n                        return external.inbuilt.storage.css;\r\n                    },\r\n                }\r\n            },\r\n            repository  : {\r\n                add     : function (parameters) {\r\n                    /// <summary>\r\n                    /// Add resource into repository\r\n                    /// </summary>\r\n                    /// <param name=\"parameters\" type=\"Object\">Object of module:    &#13;&#10;\r\n                    /// {   [string]    url,                                        &#13;&#10;\r\n                    ///     [string]    body,                                       &#13;&#10;\r\n                    ///     [string]    hash                                        &#13;&#10;\r\n                    /// }</param>\r\n                    /// <returns type=\"boolean\">true if success and false if not</returns>\r\n                    var hash = external.repository.getHash(parameters.url);\r\n                    if (hash !== parameters.hash && config.defaults.resources.USE_STORAGED !== false && parameters.body !== null) {\r\n                        return system.localStorage.set(\r\n                            parameters.url,\r\n                            JSON.stringify(\r\n                                {\r\n                                    body: parameters.body,\r\n                                    hash: parameters.hash\r\n                                }\r\n                            ),\r\n                            true,\r\n                            options.other.STORAGE_PREFIX\r\n                        );\r\n                    }\r\n                    return null;\r\n                },\r\n                get     : function (url, hash) {\r\n                    /// <summary>\r\n                    /// Get resource from repository\r\n                    /// </summary>\r\n                    /// <param name=\"url\"   type=\"string\">URL of resource</param>\r\n                    /// <param name=\"hash\"  type=\"string\">Control hash for resource</param>\r\n                    /// <returns type=\"object\">Value of resource if success and NULL if not</returns>\r\n                    var localStorage    = system.localStorage,\r\n                        storaged        = localStorage.get(url, true, options.other.STORAGE_PREFIX);\r\n                    if (storaged !== null && config.defaults.resources.USE_STORAGED !== false) {\r\n                        try {\r\n                            storaged = JSON.parse(storaged);\r\n                            if (storaged.hash === hash) {\r\n                                return storaged;\r\n                            } else {\r\n                                localStorage.del(url, options.other.STORAGE_PREFIX);\r\n                                cache.events.fire.ON_UPDATED_RESOURCE(url);\r\n                                return null;\r\n                            }\r\n                        } catch (e) {\r\n                            cache.events.fire.ON_NEW_RESOURCE(url);\r\n                            localStorage.del(url, options.other.STORAGE_PREFIX);\r\n                            return null;\r\n                        }\r\n                    } else {\r\n                        cache.events.fire.ON_NEW_RESOURCE(url);\r\n                    }\r\n                    return null;\r\n                },\r\n                getHash : function (url) {\r\n                    /// <summary>\r\n                    /// Returns hash of resource from repository\r\n                    /// </summary>\r\n                    /// <param name=\"url\" type=\"string\">URL of resource</param>\r\n                    /// <returns type=\"string\">Value of hash</returns>\r\n                    var localStorage    = system.localStorage,\r\n                        storaged        = localStorage.get(url, true, options.other.STORAGE_PREFIX);\r\n                    if (storaged !== null) {\r\n                        try {\r\n                            storaged = JSON.parse(storaged);\r\n                            return storaged.hash;\r\n                        } catch (e) {\r\n                            return null;\r\n                        }\r\n                    }\r\n                    return null;\r\n                },\r\n                call    : function (url, hash, callback) {\r\n                    /// <summary>\r\n                    /// Try find resource in repository and load it if necessary \r\n                    /// </summary>\r\n                    /// <param name=\"url\"   type=\"string\">URL of resource</param>\r\n                    /// <param name=\"hash\"  type=\"string\">Control hash for resource</param>\r\n                    /// <returns type=\"void\">void</returns>\r\n                    var repository  = external.repository.get(url, hash),\r\n                        callback    = typeof callback === 'function' ? callback : null;\r\n                    if (repository !== null) {\r\n                        if (repository.hash === hash) {\r\n                            external.embody({\r\n                                url     : url,\r\n                                hash    : hash,\r\n                                body    : repository.body,\r\n                                callback: callback\r\n                            });\r\n                        } else {\r\n                            external.loader.load(url, hash, true, callback);\r\n                        }\r\n                    } else {\r\n                        external.loader.load(url, hash, true, callback);\r\n                    }\r\n                }\r\n            },\r\n            loader      : {\r\n                load    : function (url, hash, embody, callback) {\r\n                    var request = ajax.create(\r\n                            url,\r\n                            ajax.settings.methods.GET,\r\n                            null,\r\n                            {\r\n                                success : function (response, request) {\r\n                                    external.loader.success(url, response, hash, embody, callback);\r\n                                },\r\n                                fail    : function (response, request) {\r\n                                    external.loader.fail(request, url, hash, embody, callback);\r\n                                }\r\n                            }\r\n                        );\r\n                    request.send();\r\n                    logs.log('[EXTERNAL]:: resource: [' + url + '] will be reloaded.', logs.types.KERNEL_LOGS);\r\n                },\r\n                success : function (url, response, hash, embody, callback) {\r\n                    external.repository.add({\r\n                        url : url,\r\n                        hash: hash,\r\n                        body: response !== null ? response.original : null\r\n                    });\r\n                    if (embody === true) {\r\n                        external.embody({\r\n                            url     : url,\r\n                            hash    : hash,\r\n                            body    : response !== null ? response.original : null,\r\n                            callback: callback\r\n                        });\r\n                    }\r\n                    logs.log('[EXTERNAL]:: resource: [' + url + '] is reloaded.', logs.types.KERNEL_LOGS);\r\n                },\r\n                fail    : function (request, url, hash, embody, callback) {\r\n                    //Try attach JS\r\n                    logs.log('[EXTERNAL]:: cannot load resource: [' + url + '] cannot be loaded by XMLHttpRequest.', logs.types.WARNING);\r\n                    external.embody({\r\n                        url     : url,\r\n                        hash    : hash,\r\n                        body    : null,\r\n                        callback: callback\r\n                    });\r\n                }\r\n            },\r\n        };\r\n        asynchronous    = {\r\n            isReady: function () {\r\n                return asynchronous.preload.__started === void 0 ? false : (config.defaults.resources.WAIT_ASYNCHRONOUS ? overhead.register.isReady(options.register.ASYNCHRONOUS_HISTORY) : true);\r\n            },\r\n            preload: function () {\r\n                var groups = config.defaults.resources.ASYNCHRONOUS;\r\n                asynchronous.preload.__started = true;\r\n                if (groups instanceof Array) {\r\n                    if (groups.length > 0) {\r\n                        //Global journal\r\n                        overhead.register.open(\r\n                            options.register.ASYNCHRONOUS_HISTORY,\r\n                            Array.prototype.map.call(groups, function (group, index) { return index; }),\r\n                            function () {\r\n                                coreEvents.onFlexLoad();\r\n                            }\r\n                        );\r\n                        Array.prototype.forEach.call(\r\n                            groups,\r\n                            function (group, index) {\r\n                                var id = IDs.id();\r\n                                if (oop.objects.validate(group, [{ name: 'resources', type: 'array' },\r\n                                                                    { name: 'storage', type: 'boolean', value: true },\r\n                                                                    { name: 'finish', type: 'function', value: null }]) !== false) {\r\n                                    //Validate resources\r\n                                    group.resources = group.resources.filter(function (resource) { return typeof resource.url === 'string' ? true : false; });\r\n                                    //Make register\r\n                                    overhead.register.open(\r\n                                        id,\r\n                                        group.resources.map(function (resource) { return resource.url; }),\r\n                                        function () {\r\n                                            system.handle(group.finish);\r\n                                            overhead.register.done(options.register.ASYNCHRONOUS_HISTORY, index);\r\n                                        }\r\n                                    );\r\n                                    //Make calls\r\n                                    group.resources.forEach(function (resource) {\r\n                                        if (oop.objects.validate(resource, [{ name: 'url', type: 'string' },\r\n                                                                            { name: 'hash', type: 'string', value: false },\r\n                                                                            { name: 'after', type: 'array', value: false }]) !== false) {\r\n                                            if (resource.hash === false) {\r\n                                                resource.hash = hashes.get(resource.url);\r\n                                                hashes.update.add(resource.url);\r\n                                            }\r\n                                            asynchronous.repository.call(resource, id, group.storage);\r\n                                        }\r\n                                    });\r\n                                }\r\n                            }\r\n                        );\r\n                    } else {\r\n                        coreEvents.onFlexLoad();\r\n                    }\r\n                } else {\r\n                    coreEvents.onFlexLoad();\r\n                }\r\n            },\r\n            embody      : function (parameters) {\r\n                function JS(id, content, url, storage) {\r\n                    var wrapper = null;\r\n                    if (config.defaults.resources.USE_STORAGED === false || storage === false || parameters.body === null) {\r\n                        system.resources.js.connect(\r\n                            url,\r\n                            function(){\r\n                                overhead.register.done(id, url);\r\n                                asynchronous.wait.check();\r\n                            },\r\n                            function () {\r\n                                logs.log('[ASYNCHRONOUS]:: cannot load resource: [' + url + '].', logs.types.CRITICAL);\r\n                            }\r\n                        );\r\n                        return false;\r\n                    } else {\r\n                        wrapper = new Function(content);\r\n                        try {\r\n                            wrapper.call(window);\r\n                            return true;\r\n                        } catch (e) {\r\n                            logs.log('[ASYNCHRONOUS]:: during initialization of resource: [' + url + '] happened error:/n/r' + logs.parseError(e), logs.types.WARNING);\r\n                            return false;\r\n                        }\r\n                    }\r\n                };\r\n                function CSS(id, content, url, storage) {\r\n                    if (config.defaults.resources.USE_STORAGED === false || storage === false || parameters.body === null) {\r\n                        system.resources.css.connect(\r\n                            url,\r\n                            null,\r\n                            function () {\r\n                                logs.log('[ASYNCHRONOUS]:: cannot load resource: [' + url + '].', logs.types.CRITICAL);\r\n                            }\r\n                        );\r\n                    } else {\r\n                        system.resources.css.adoption(content, null, system.url.restoreFullURL(url));\r\n                    }\r\n                    return true;\r\n                };\r\n                /// <summary>\r\n                /// Try to initialize external resource\r\n                /// </summary>\r\n                /// <param name=\"parameters\" type=\"Object\">Object of resource:  &#13;&#10;\r\n                /// {   [string]    url,                                        &#13;&#10;\r\n                ///     [string]    body,                                       &#13;&#10;\r\n                ///     [string]    id                                          &#13;&#10;\r\n                ///     [string]    storage                                     &#13;&#10;\r\n                /// }</param>\r\n                /// <returns type=\"boolean\">true if success and false if not</returns>\r\n                var resourceType    = system.url.getTypeOfResource(parameters.url),\r\n                    Embody          = null;\r\n                if (resourceType === options.resources.types.JS) {\r\n                    Embody = JS;\r\n                } else if (resourceType === options.resources.types.CSS) {\r\n                    Embody = CSS;\r\n                }\r\n                if (Embody !== null) {\r\n                    if (Embody(parameters.id, parameters.body, parameters.url, parameters.storage) !== false) {\r\n                        overhead.register.done(parameters.id, parameters.url);\r\n                        asynchronous.wait.check();\r\n                    }\r\n                }\r\n            },\r\n            repository  : {\r\n                add : function (parameters) {\r\n                    /// <summary>\r\n                    /// Add resource into repository\r\n                    /// </summary>\r\n                    /// <param name=\"parameters\" type=\"Object\">Object of module:    &#13;&#10;\r\n                    /// {   [string]    url,                                        &#13;&#10;\r\n                    ///     [string]    body,                                       &#13;&#10;\r\n                    ///     [string]    hash,                                       &#13;&#10;\r\n                    /// }</param>\r\n                    /// <returns type=\"boolean\">true if success and false if not</returns>\r\n                    if (config.defaults.resources.USE_STORAGED !== false && parameters.body !== null) {\r\n                        return system.localStorage.set(\r\n                            parameters.url,\r\n                            JSON.stringify(\r\n                                {\r\n                                    body: parameters.body,\r\n                                    hash: parameters.hash,\r\n                                }\r\n                            ),\r\n                            true,\r\n                            options.other.STORAGE_PREFIX\r\n                        );\r\n                    }\r\n                    return null;\r\n                },\r\n                get : function (url, hash) {\r\n                    /// <summary>\r\n                    /// Get resource from repository\r\n                    /// </summary>\r\n                    /// <param name=\"url\" type=\"string\">URL of resource</param>\r\n                    /// <returns type=\"object\">Value of resource if success and NULL if not</returns>\r\n                    var localStorage    = system.localStorage,\r\n                        storaged        = localStorage.get(url, true, options.other.STORAGE_PREFIX);\r\n                    if (storaged !== null && config.defaults.resources.USE_STORAGED !== false) {\r\n                        try {\r\n                            storaged = JSON.parse(storaged);\r\n                            if (storaged.hash !== hash) {\r\n                                logs.log('[ASYNCHRONOUS]:: resource [' + url + '] will be updated.', logs.types.KERNEL_LOGS);\r\n                                localStorage.del(url, options.other.STORAGE_PREFIX);\r\n                                cache.events.fire.ON_UPDATED_RESOURCE(url);\r\n                                return null;\r\n                            } else {\r\n                                return storaged;\r\n                            }\r\n                        } catch (e) {\r\n                            localStorage.del(url, options.other.STORAGE_PREFIX);\r\n                            cache.events.fire.ON_NEW_RESOURCE(url);\r\n                            return null;\r\n                        }\r\n                    } else {\r\n                        cache.events.fire.ON_NEW_RESOURCE(url);\r\n                    }\r\n                    return null;\r\n                },\r\n                call: function (resource, id, storage) {\r\n                    function load(resource, id, storage) {\r\n                        var repository = asynchronous.repository.get(resource.url, resource.hash);\r\n                        if (repository !== null || storage === false) {\r\n                            asynchronous.embody({\r\n                                url     : resource.url,\r\n                                id      : id,\r\n                                body    : repository !== null ? repository.body : null,\r\n                                storage : storage\r\n                            });\r\n                        } else {\r\n                            asynchronous.loader.load(resource.url, id, true, storage, resource.hash);\r\n                        }\r\n                    };\r\n                    /// <summary>\r\n                    /// Try find resource in repository and load it if necessary \r\n                    /// </summary>\r\n                    /// <param name=\"resource\"  type=\"string\">resource</param>\r\n                    /// <param name=\"hash\"      type=\"string\">Control hash for resource</param>\r\n                    /// <returns type=\"void\">void</returns>\r\n                    var status = true;\r\n                    if (resource.after === false) {\r\n                        load(resource, id, storage);\r\n                    } else {\r\n                        resource.after.forEach(function (url) {\r\n                            status = status === false ? false : overhead.register.isDone(id, url);\r\n                        });\r\n                        if (status !== false) {\r\n                            load(resource, id, storage);\r\n                            asynchronous.wait.remove(resource.url);\r\n                        } else {\r\n                            asynchronous.wait.add(resource, id, storage);\r\n                        }\r\n                    }\r\n                }\r\n            },\r\n            loader      : {\r\n                load    : function (url, id, embody, storage, hash) {\r\n                    var request = ajax.create(\r\n                            url,\r\n                            ajax.settings.methods.GET,\r\n                            null,\r\n                            {\r\n                                success : function (response, request) {\r\n                                    asynchronous.loader.success(url, response, id, embody, storage, hash);\r\n                                },\r\n                                fail    : function (response, request) {\r\n                                    asynchronous.loader.fail(request, url, response, id, embody, storage, hash);\r\n                                }\r\n                            }\r\n                        );\r\n                    request.send();\r\n                },\r\n                success : function (url, response, id, embody, storage, hash) {\r\n                    if (storage !== false && response !== null && response.original !== void 0) {\r\n                        asynchronous.repository.add({\r\n                            url : url,\r\n                            body: response.original,\r\n                            hash: hash\r\n                        });\r\n                    }\r\n                    if (embody !== false) {\r\n                        asynchronous.embody({\r\n                            url     : url,\r\n                            id      : id,\r\n                            body    : response !== null ? response.original : null,\r\n                            storage : storage\r\n                        });\r\n                    }\r\n                },\r\n                fail    : function (request, url, response, id, embody, storage, hash) {\r\n                    //Try attach JS\r\n                    logs.log('[ASYNCHRONOUS]:: cannot load resource: [' + url + '] cannot be loaded by XMLHttpRequest.', logs.types.WARNING);\r\n                    asynchronous.embody({\r\n                        url     : url,\r\n                        id      : id,\r\n                        body    : null,\r\n                        storage : false\r\n                    });\r\n                }\r\n            },\r\n            wait        : {\r\n                storage : {},\r\n                add     : function (resource, id, _storage) {\r\n                    var storage = asynchronous.wait.storage;\r\n                    if (!storage[resource.url]) {\r\n                        storage[resource.url]           = resource;\r\n                        storage[resource.url].id        = id;\r\n                        storage[resource.url].storage   = _storage;\r\n                    }\r\n                },\r\n                remove  : function (url) {\r\n                    var storage = asynchronous.wait.storage;\r\n                    if (storage[url]) {\r\n                        storage[url] = null;\r\n                        delete storage[url];\r\n                    }\r\n                },\r\n                check   : function () {\r\n                    var storage = asynchronous.wait.storage;\r\n                    for (var key in storage) {\r\n                        asynchronous.repository.call(storage[key], storage[key].id, storage[key].storage);\r\n                    }\r\n                }\r\n            }\r\n        };\r\n        parsing         = {\r\n            js  : {\r\n                stringify       : function (_function) {\r\n                    /// <summary>\r\n                    /// Get string from function\r\n                    /// </summary>\r\n                    /// <param name=\"name\" type=\"string\">Function body</param>\r\n                    /// <returns type=\"object\" value=\"{params:string,body:string}\">Function as object</returns>\r\n                    var tools           = parsing.js.tools,\r\n                        str_function    = null,\r\n                        result          = null;\r\n                    if (typeof _function === 'function') {\r\n                        str_function    = _function.toString();\r\n                        result          = {\r\n                            params  : tools.getParams(str_function),\r\n                            body    : tools.getBody(str_function)\r\n                        };\r\n                        if (result.params !== null && result.body !== null) {\r\n                            return result;\r\n                        }\r\n                        return null;\r\n                    }\r\n                },\r\n                parse           : function (data) {\r\n                    /// <summary>\r\n                    /// Make prototype function and constructor from string data\r\n                    /// </summary>\r\n                    /// <param name=\"parameters\" type=\"Object\"> \r\n                    /// {   [object] constr:                    &#13;&#10;\r\n                    ///     {   [string] params,                &#13;&#10;\r\n                    ///         [string] body                   &#13;&#10;\r\n                    ///     },                                  &#13;&#10;\r\n                    /// {   [object] proto:                     &#13;&#10;\r\n                    ///     {   [string] params,                &#13;&#10;\r\n                    ///         [string] body                   &#13;&#10;\r\n                    ///     },                                  &#13;&#10;\r\n                    /// }</param>\r\n                    /// <returns type=\"function\">Prototype function</returns>\r\n                    var protofunction = parsing.js.parseFunction(data.constr.params, data.constr.body);\r\n                    if (typeof protofunction === 'function') {\r\n                        protofunction.prototype = parsing.js.parseFunction(data.proto.params, data.proto.body);\r\n                        if (typeof protofunction.prototype === 'function') {\r\n                            return protofunction;\r\n                        }\r\n                    }\r\n                    return null;\r\n                },\r\n                parseFunction   : function (params, body) {\r\n                    /// <summary>\r\n                    /// Make function from string data\r\n                    /// </summary>\r\n                    /// <param name=\"params\" type=\"string\">Parameters of function</param>\r\n                    /// <param name=\"body\" type=\"string\">Body of function</param>\r\n                    /// <returns type=\"function\">Function</returns>\r\n                    if (typeof params === 'string' && typeof body === 'string') {\r\n                        if (params === ''){\r\n                            return new Function(body);\r\n                        } else {\r\n                            return new Function(params, body);\r\n                        }\r\n                    }\r\n                    return null;\r\n                },\r\n                tools           : {\r\n                    regs    : {\r\n                        FUNCTION            : /^\\(?function\\s.*?\\(.*?\\)\\s*?\\{/gi,\r\n                        ARGUMENTS           : /\\(.*?\\)/gi,\r\n                        ARGUMENTS_BORDERS   : /[\\(\\)]/gi,\r\n                        BODY_END            : /\\}$/gi,\r\n                        STRICT              : /(use strict)/gi,\r\n                    },\r\n                    getBody     : function (function_str) {\r\n                        /// <summary>\r\n                        /// Get body of function from string representation\r\n                        /// </summary>\r\n                        /// <param name=\"function_str\" type=\"string\">String representation of function</param>\r\n                        /// <returns type=\"string\">String representation of function's body</returns>\r\n                        function_str = function_str.replace(parsing.js.tools.regs.FUNCTION, '');\r\n                        function_str = function_str.replace(parsing.js.tools.regs.BODY_END, '');\r\n                        if (function_str.search(parsing.js.tools.regs.STRICT) === -1) {\r\n                            function_str = '\"use strict\";' + function_str;\r\n                        }\r\n                        return function_str;\r\n                    },\r\n                    getParams   : function (function_str) {\r\n                        /// <summary>\r\n                        /// Get parameters of function from string representation\r\n                        /// </summary>\r\n                        /// <param name=\"function_str\" type=\"string\">String representation of function</param>\r\n                        /// <returns type=\"string\">String representation of function's parameters</returns>\r\n                        var matches = function_str.match(parsing.js.tools.regs.FUNCTION);\r\n                        if (matches !== null) {\r\n                            if (matches.length === 1) {\r\n                                matches = matches[0].match(parsing.js.tools.regs.ARGUMENTS);\r\n                                if (matches.length === 1) {\r\n                                    matches = matches[0].replace(parsing.js.tools.regs.ARGUMENTS_BORDERS, '');\r\n                                    return matches;\r\n                                }\r\n                            }\r\n                        }\r\n                        return null;\r\n                    }\r\n                }\r\n            },\r\n            css : {\r\n                stringify       : function (href) {\r\n                    /// <summary>\r\n                    /// Get string from CSS resource\r\n                    /// </summary>\r\n                    /// <param name=\"resource\" type=\"string\">URL of CSS resource</param>\r\n                    /// <returns type=\"string\">String representation of CSS resource</returns>\r\n                    function getCSSText(sheet) {\r\n                        function getKeyframesIE(rule) {\r\n                            var keyframe = '';\r\n                            if (rule.cssRules) {\r\n                                keyframe = '@keyframes ' + rule.name + ' {\\n\\r';\r\n                                Array.prototype.forEach.call(\r\n                                    rule.cssRules,\r\n                                    function (sub_rule) {\r\n                                        keyframe += sub_rule.keyText + ' { ' + sub_rule.style.cssText + ' }\\n\\r';\r\n                                    }\r\n                                );\r\n                                keyframe += '}';\r\n                            }\r\n                            return keyframe;\r\n                        };\r\n                        var CSSText = '',\r\n                            doc     = document;\r\n                        if (sheet.cssRules || sheet.rules) {\r\n                            Array.prototype.forEach.call(\r\n                                (sheet.cssRules || sheet.rules),\r\n                                function (rule) {\r\n                                    if (typeof rule.cssText === 'string') {\r\n                                        CSSText += rule.cssText + '\\n\\r';\r\n                                    } else {\r\n                                        CSSText += getKeyframesIE(rule) + '\\n\\r';\r\n                                    }\r\n                                }\r\n                            );\r\n                        } else if (typeof sheet.cssText === 'string') {\r\n                            CSSText = sheet.cssText;\r\n                        }\r\n                        return CSSText;\r\n                    };\r\n                    var sheets      = document.styleSheets,\r\n                        styles      = null;\r\n                    try{\r\n                        Array.prototype.forEach.call(\r\n                            document.styleSheets,\r\n                            function (sheet) {\r\n                                if (sheet.href) {\r\n                                    if (sheet.href.indexOf(href) !== -1) {\r\n                                        styles = getCSSText(sheet);\r\n                                        throw 'found';\r\n                                    }\r\n                                }\r\n                            }\r\n                        );\r\n                    } catch (e) {\r\n                    } finally {\r\n                        return styles;\r\n                    }\r\n                }\r\n            }\r\n        };\r\n        overhead        = {\r\n            globaly : {\r\n                storage : {},\r\n                get     : function (group, name, default_value) {\r\n                    /// <signature>\r\n                    ///     <summary>Return value from closed space</summary>\r\n                    ///     <param name=\"group\" type=\"string\"   >Name of storage group</param>\r\n                    ///     <param name=\"name\"  type=\"string\"   >Name of storage</param>\r\n                    ///     <returns type=\"any\">returns saved value</returns>\r\n                    /// </signature>\r\n                    /// <signature>\r\n                    ///     <summary>Return value from closed space</summary>\r\n                    ///     <param name=\"group\"         type=\"string\"   >Name of storage group</param>\r\n                    ///     <param name=\"name\"          type=\"string\"   >Name of storage</param>\r\n                    ///     <param name=\"default_value\" type=\"any\"      >Default value, if property will not be found</param>\r\n                    ///     <returns type=\"any\">returns saved value</returns>\r\n                    /// </signature>\r\n                    var storage = overhead.globaly.storage;\r\n                    if (group in storage) {\r\n                        if (name in storage[group]) {\r\n                            return storage[group][name];\r\n                        }\r\n                    }\r\n                    if (default_value) {\r\n                        return overhead.globaly.set(group, name, default_value);\r\n                    }\r\n                    return null;\r\n                },\r\n                set     : function (group, name, value) {\r\n                    /// <summary>Create value in closed space</summary>\r\n                    /// <param name=\"group\" type=\"string\"   >Name of storage group</param>\r\n                    /// <param name=\"name\"  type=\"string\"   >Name of storage</param>\r\n                    /// <param name=\"value\" type=\"any\"      >Value</param>\r\n                    /// <returns type=\"any\">returns saved value</returns>\r\n                    var storage = overhead.globaly.storage;\r\n                    storage[group] = (group in storage ? storage[group] : {});\r\n                    storage[group][name] = value;\r\n                    return storage[group][name];\r\n                },\r\n                remove  : function (group, name) {\r\n                    /// <summary>Return value from closed space</summary>\r\n                    /// <param name=\"group\" type=\"string\"   >Name of storage group</param>\r\n                    /// <param name=\"name\"  type=\"string\"   >Name of storage</param>\r\n                    /// <returns type=\"boolean\">true - if removed; false - if not found</returns>\r\n                    var storage = overhead.globaly.storage;\r\n                    if (group in storage) {\r\n                        if (name in storage[group]) {\r\n                            storage[group][name] = null;\r\n                            delete storage[group][name];\r\n                            if (Object.keys(storage[group]).length === 0) {\r\n                                storage[group] = null;\r\n                                delete storage[group];\r\n                            }\r\n                            return true;\r\n                        }\r\n                    }\r\n                    return false;\r\n                }\r\n            },\r\n            objecty : {\r\n                settings: {\r\n                    COMMON_STORAGE_NAME : 'FlexObjectStorage'\r\n                },\r\n                set     : function (element, property, value, rewrite) {\r\n                    /// <signature>\r\n                    ///     <summary>Add property to virtual storage based on element</summary>\r\n                    ///     <param name=\"element\"   type=\"object\"   >Object for attach storage</param>\r\n                    ///     <param name=\"property\"  type=\"string\"   >Name of property</param>\r\n                    ///     <param name=\"value\"     type=\"any\"      >Value</param>\r\n                    ///     <returns type=\"any\">value</returns>\r\n                    /// </signature>\r\n                    /// <signature>\r\n                    ///     <summary>Add property to virtual storage based on element</summary>\r\n                    ///     <param name=\"element\"   type=\"object\"   >Object for attach storage</param>\r\n                    ///     <param name=\"property\"  type=\"string\"   >Name of property</param>\r\n                    ///     <param name=\"value\"     type=\"any\"      >Value</param>\r\n                    ///     <param name=\"rewrite\"   type=\"boolean\"  >[optional] rewrite or not value</param>\r\n                    ///     <returns type=\"any\">value</returns>\r\n                    /// </signature>\r\n                    var rewrite     = (typeof rewrite === \"boolean\" ? rewrite : true),\r\n                        settings    = overhead.objecty.settings;\r\n                    if (typeof element === \"object\" && typeof property === \"string\" && value !== void 0) {\r\n                        if (typeof element[settings.COMMON_STORAGE_NAME] !== \"object\") {\r\n                            element[settings.COMMON_STORAGE_NAME] = {};\r\n                        }\r\n                        if (rewrite === false) {\r\n                            if (element[settings.COMMON_STORAGE_NAME][property] === void 0) {\r\n                                element[settings.COMMON_STORAGE_NAME][property] = value;\r\n                            }\r\n                        } else {\r\n                            element[settings.COMMON_STORAGE_NAME][property] = value;\r\n                        }\r\n                        return value;\r\n                    }\r\n                    return null; \r\n                },\r\n                get     : function (element, property, remove, default_value) {\r\n                    /// <signature>\r\n                    ///     <summary>Get property from virtual storage based on element</summary>\r\n                    ///     <param name=\"element\"       type=\"object\"   >Object for attach storage</param>\r\n                    ///     <param name=\"property\"      type=\"string\"   >Name of property</param>\r\n                    ///     <returns type=\"any\">value</returns>\r\n                    /// </signature>\r\n                    /// <signature>\r\n                    ///     <summary>Get property from virtual storage based on element</summary>\r\n                    ///     <param name=\"element\"       type=\"object\"   >Object for attach storage</param>\r\n                    ///     <param name=\"property\"      type=\"string\"   >Name of property</param>\r\n                    ///     <param name=\"remove\"        type=\"boolean\"  >[optional] remove or not property from storage after value will be read</param>\r\n                    ///     <returns type=\"any\">value</returns>\r\n                    /// </signature>\r\n                    /// <signature>\r\n                    ///     <summary>Get property from virtual storage based on element</summary>\r\n                    ///     <param name=\"element\"       type=\"object\"   >Object for attach storage</param>\r\n                    ///     <param name=\"property\"      type=\"string\"   >Name of property</param>\r\n                    ///     <param name=\"remove\"        type=\"boolean\"  >[optional] remove or not property from storage after value will be read</param>\r\n                    ///     <param name=\"default_value\" type=\"any\"      >[optional] default value of property</param>\r\n                    ///     <returns type=\"any\">value</returns>\r\n                    /// </signature>\r\n                    var remove          = (typeof remove === \"boolean\" ? remove : false),\r\n                        default_value   = (default_value !== void 0 ? default_value : null),\r\n\t\t\t\t\t\tvalue           = null,\r\n                        settings        = overhead.objecty.settings,\r\n\t\t\t\t\t\ttools           = overhead.objecty.tools;\r\n                    if (typeof element === \"object\" && typeof property === \"string\") {\r\n                        if (typeof element[settings.COMMON_STORAGE_NAME] === \"object\") {\r\n                            if (element[settings.COMMON_STORAGE_NAME][property] !== void 0) {\r\n                                value = element[settings.COMMON_STORAGE_NAME][property];\r\n                                if (remove === true) {\r\n                                    element[settings.COMMON_STORAGE_NAME][property] = null;\r\n                                    tools.deleteAttribute(element, property);\r\n                                    tools.clear(element);\r\n                                }\r\n                                return value;\r\n                            } else {\r\n                                if (default_value !== null) {\r\n                                    element[settings.COMMON_STORAGE_NAME][property] = default_value;\r\n                                    return element[settings.COMMON_STORAGE_NAME][property];\r\n                                }\r\n                            }\r\n                        } else {\r\n                            if (default_value !== null) {\r\n                                element[settings.COMMON_STORAGE_NAME]           = {};\r\n                                element[settings.COMMON_STORAGE_NAME][property] = default_value;\r\n                                return element[settings.COMMON_STORAGE_NAME][property];\r\n                            }\r\n                        }\r\n                    }\r\n                    return null;\r\n                },\r\n                remove  : function (element, property) {\r\n                    /// <summary>Remove property from virtual storage based on element</summary>\r\n                    /// <param name=\"element\"   type=\"object\"   >Object for attach storage</param>\r\n                    /// <param name=\"property\"  type=\"string\"   >Name of property</param>\r\n                    /// <returns type=\"boolean\">true - removed; false - not found; null - bad parameters</returns>\r\n                    var remove      = (typeof remove === \"boolean\" ? remove : false),\r\n\t\t\t\t\t\tvalue       = null,\r\n                        settings    = overhead.objecty.settings,\r\n\t\t\t\t\t\ttools       = overhead.objecty.tools;\r\n                    if (typeof element === \"object\" && typeof property === \"string\") {\r\n                        if (typeof element[settings.COMMON_STORAGE_NAME] === \"object\") {\r\n                            if (element[settings.COMMON_STORAGE_NAME][property] !== void 0) {\r\n                                element[settings.COMMON_STORAGE_NAME][property] = null;\r\n                                tools.deleteAttribute(element, property);\r\n                                tools.clear(element);\r\n                                return true;\r\n                            }\r\n                        }\r\n                        return false;\r\n                    }\r\n                    return null;\r\n                },\r\n                tools   : {\r\n                    deleteAttribute : function (element, property) {\r\n                        try {\r\n                            delete element[property];\r\n                        } catch (e) {\r\n                            element.removeAttribute(property);\r\n                        }\r\n                    },\r\n                    clear           : function (element) {\r\n                        var settings    = overhead.objecty.settings,\r\n                            tools       = overhead.objecty.tools;\r\n                        if (Object.keys(element[settings.COMMON_STORAGE_NAME]).length === 0) {\r\n                            element[settings.COMMON_STORAGE_NAME] = null;\r\n                            tools.deleteAttribute(element, settings.COMMON_STORAGE_NAME);\r\n                        }\r\n                    }\r\n                }\r\n            },\r\n            register: {\r\n                settings: {\r\n                    COMMON_STORAGE_NAME: 'FlexRegisterStorage'\r\n                },\r\n                build   : function (name, onReadyHandle) {\r\n                    //Define class of register\r\n                    var Register        = function (name, onReadyHandle) {\r\n                        this.name       = name;\r\n                        this.onReady    = onReadyHandle;\r\n                        this.items      = {};\r\n                    };\r\n                    Register.prototype  = {\r\n                        add     : function (key) {\r\n                            if (!this.items[key]) {\r\n                                this.items[key] = {\r\n                                    isDone  : false,\r\n                                    key     : key\r\n                                };\r\n                                return true;\r\n                            }\r\n                            return false;\r\n                        },\r\n                        done    : function (key, do_not_check) {\r\n                            var do_not_check = typeof do_not_check === 'boolean' ? do_not_check : false;\r\n                            if (this.items[key]) {\r\n                                this.items[key].isDone = true;\r\n                            }\r\n                            if (do_not_check === false) {\r\n                                if (this.isReady() !== false) {\r\n                                    if (this.onReady !== null && this.handled === void 0) {\r\n                                        this.handled = true;\r\n                                        system.handle(this.onReady, null, 'Register: ' + this.name, this);\r\n                                    }\r\n                                    return true;\r\n                                }\r\n                            }\r\n                            return false;\r\n                        },\r\n                        isReady : function () {\r\n                            for (var key in this.items) {\r\n                                if (this.items[key].isDone === false) {\r\n                                    return false;\r\n                                }\r\n                            }\r\n                            return true;\r\n                        },\r\n                        isIn    : function (key) {\r\n                            return (this.items[key] ? true : false);\r\n                        },\r\n                        isDone  : function (key) {\r\n                            if (this.items[key]) {\r\n                                return this.items[key].isDone;\r\n                            }\r\n                            return null;\r\n                        }\r\n                    };\r\n                    //Create register\r\n                    return new Register(name, onReadyHandle);\r\n                },\r\n                open    : function (name, keys, onReadyHandle) {\r\n                    /// <summary>Create new register</summary>\r\n                    /// <param name=\"name\"          type=\"string\"       >Name of register</param>\r\n                    /// <param name=\"keys\"          type=\"array || any\" >Default keys for register</param>\r\n                    /// <param name=\"onReadyHandle\" type=\"function\"     >onReady handle, handle, which will be fired on all items will be done</param>\r\n                    /// <returns type=\"boolean\">true / false</returns>\r\n                    var name            = (typeof name === 'string' ? name : null),\r\n                        keys            = (keys instanceof Array ? keys : (keys !== void 0 ? [keys] : null)),\r\n                        onReadyHandle   = (typeof onReadyHandle === 'function' ? onReadyHandle : null),\r\n                        register        = null,\r\n                        storage         = overhead.globaly.get(options.storage.GROUP, overhead.register.settings.COMMON_STORAGE_NAME, {});\r\n                    if (name !== null) {\r\n                        if (!storage[name]) {\r\n                            //Create register\r\n                            register = overhead.register.build(name, onReadyHandle);\r\n                            //Add keys\r\n                            keys.forEach(function (key) {\r\n                                register.add(key);\r\n                            });\r\n                            //Save register\r\n                            storage[name] = register;\r\n                            return true;\r\n                        }\r\n                    }\r\n                    return false;\r\n                },\r\n                add     : function (name, key) {\r\n                    /// <summary>Add new key into register</summary>\r\n                    /// <param name=\"name\"  type=\"string\">Name of register</param>\r\n                    /// <param name=\"key\"   type=\"string\">New key name</param>\r\n                    /// <returns type=\"boolean\">true / false</returns>\r\n                    var storage = overhead.globaly.get(options.storage.GROUP, overhead.register.settings.COMMON_STORAGE_NAME, {});\r\n                    if (storage[name]) {\r\n                        return storage[name].add(key);\r\n                    }\r\n                    return false;\r\n                },\r\n                done    : function (name, key, do_not_check) {\r\n                    /// <signature>\r\n                    ///     <summary>Set item of register to DONE</summary>\r\n                    ///     <param name=\"name\"          type=\"string\"   >Name of register</param>\r\n                    ///     <param name=\"key\"           type=\"string\"   >New key name</param>\r\n                    ///     <returns type=\"boolean\">true / false</returns>\r\n                    /// </signature>\r\n                    /// <signature>\r\n                    ///     <summary>Set item of register to DONE</summary>\r\n                    ///     <param name=\"name\"          type=\"string\"   >Name of register</param>\r\n                    ///     <param name=\"key\"           type=\"string\"   >New key name</param>\r\n                    ///     <param name=\"do_not_check\"  type=\"boolean\"  >true - check is all items are ready; false - do not check</param>\r\n                    ///     <returns type=\"boolean\">true / false</returns>\r\n                    /// </signature>\r\n                    var storage         = overhead.globaly.get(options.storage.GROUP, overhead.register.settings.COMMON_STORAGE_NAME, {}),\r\n                        do_not_check    = typeof do_not_check === 'boolean' ? do_not_check : false;\r\n                    if (storage[name]) {\r\n                        if (storage[name].done(key, do_not_check) !== false) {\r\n                            storage[name] = null;\r\n                            delete storage[name];\r\n                        }\r\n                    }\r\n                    return false;\r\n                },\r\n                isIn    : function (name, key) {\r\n                    /// <summary>\r\n                    /// Is key in register\r\n                    /// </summary>\r\n                    /// <param name=\"name\"  type=\"string\">Name of register</param>\r\n                    /// <param name=\"key\"   type=\"string\">New key name</param>\r\n                    /// <returns type=\"boolean\">true / false</returns>\r\n                    var storage = overhead.globaly.get(options.storage.GROUP, overhead.register.settings.COMMON_STORAGE_NAME, {});\r\n                    if (storage[name]) {\r\n                        return storage[name].isIn(key);\r\n                    }\r\n                    return false;\r\n                },\r\n                isDone  : function (name, key) {\r\n                    /// <summary>\r\n                    /// Is key done\r\n                    /// </summary>\r\n                    /// <param name=\"name\"  type=\"string\">Name of register</param>\r\n                    /// <param name=\"key\"   type=\"string\">New key name</param>\r\n                    /// <returns type=\"boolean\">true / false</returns>\r\n                    var storage = overhead.globaly.get(options.storage.GROUP, overhead.register.settings.COMMON_STORAGE_NAME, {});\r\n                    if (storage[name]) {\r\n                        return storage[name].isDone(key);\r\n                    }\r\n                    return false;\r\n                },\r\n                isReady : function (name) {\r\n                    /// <summary>\r\n                    /// Is register done\r\n                    /// </summary>\r\n                    /// <param name=\"name\"  type=\"string\">Name of register</param>\r\n                    /// <returns type=\"boolean\">true / false</returns>\r\n                    var storage = overhead.globaly.get(options.storage.GROUP, overhead.register.settings.COMMON_STORAGE_NAME, {});\r\n                    if (storage[name]) {\r\n                        return storage[name].isReady();\r\n                    }\r\n                    return true;\r\n                },\r\n            }\r\n        };\r\n        events          = {\r\n            DOM     : {\r\n                add     : (function () {\r\n                    if (typeof window.addEventListener === \"function\") {\r\n                        return function (element, eventName, handle) {\r\n                            /// <summary>\r\n                            /// Add DOM's events listener \r\n                            /// </summary>\r\n                            /// <param name=\"element\"   type=\"node\"     >Node</param>\r\n                            /// <param name=\"eventName\" type=\"string\"   >Name of event</param>\r\n                            /// <param name=\"handle\"    type=\"function\" >Handle</param>\r\n                            /// <returns type=\"void\">void</returns>\r\n                            var events = (eventName instanceof Array ? eventName : [eventName]);\r\n                            Array.prototype.forEach.call(\r\n                                events,\r\n                                function (event) {\r\n                                    element.addEventListener(event, handle, false);\r\n                                }\r\n                            );\r\n                        };\r\n                    } else if (typeof document.attachEvent === \"function\") {\r\n                        return function (element, eventName, handle) {\r\n                            /// <summary>\r\n                            /// Add DOM's events listener \r\n                            /// </summary>\r\n                            /// <param name=\"element\"   type=\"node\"     >Node</param>\r\n                            /// <param name=\"eventName\" type=\"string\"   >Name of event</param>\r\n                            /// <param name=\"handle\"    type=\"function\" >Handle</param>\r\n                            /// <returns type=\"void\">void</returns>\r\n                            var events = (eventName instanceof Array ? eventName : [eventName]);\r\n                            Array.prototype.forEach.call(\r\n                                events,\r\n                                function (event) {\r\n                                    element.attachEvent((\"on\" + event), handle);\r\n                                }\r\n                            );\r\n                        };\r\n                    } else {\r\n                        return function (element, eventName, handle) {\r\n                            /// <summary>\r\n                            /// Add DOM's events listener \r\n                            /// </summary>\r\n                            /// <param name=\"element\"   type=\"node\"     >Node</param>\r\n                            /// <param name=\"eventName\" type=\"string\"   >Name of event</param>\r\n                            /// <param name=\"handle\"    type=\"function\" >Handle</param>\r\n                            /// <returns type=\"void\">void</returns>\r\n                            var events = (eventName instanceof Array ? eventName : [eventName]);\r\n                            Array.prototype.forEach.call(\r\n                                events,\r\n                                function (event) {\r\n                                    element[(\"on\" + event)] = handle;\r\n                                }\r\n                            );\r\n                        };\r\n                    };\r\n                }()),\r\n                remove  : (function () {\r\n                    if (typeof window.removeEventListener === \"function\") {\r\n                        return function (element, eventName, handle) {\r\n                            /// <summary>\r\n                            /// Remove DOM's events listener \r\n                            /// </summary>\r\n                            /// <param name=\"element\"   type=\"node\"     >Node</param>\r\n                            /// <param name=\"eventName\" type=\"string\"   >Name of event</param>\r\n                            /// <param name=\"handle\"    type=\"function\" >Handle</param>\r\n                            /// <returns type=\"void\">void</returns>\r\n                            element.removeEventListener(eventName, handle, false);\r\n                        };\r\n                    } else if (typeof document.detachEvent === \"function\") {\r\n                        return function (element, eventName, handle) {\r\n                            /// <summary>\r\n                            /// Remove DOM's events listener \r\n                            /// </summary>\r\n                            /// <param name=\"element\"   type=\"node\"     >Node</param>\r\n                            /// <param name=\"eventName\" type=\"string\"   >Name of event</param>\r\n                            /// <param name=\"handle\"    type=\"function\" >Handle</param>\r\n                            /// <returns type=\"void\">void</returns>\r\n                            element.detachEvent((\"on\" + eventName), handle);\r\n                        };\r\n                    } else {\r\n                        return function (element, eventName, handle) {\r\n                            /// <summary>\r\n                            /// Remove DOM's events listener \r\n                            /// </summary>\r\n                            /// <param name=\"element\"   type=\"node\"     >Node</param>\r\n                            /// <param name=\"eventName\" type=\"string\"   >Name of event</param>\r\n                            /// <param name=\"handle\"    type=\"function\" >Handle</param>\r\n                            /// <returns type=\"void\">void</returns>\r\n                            element[(\"on\" + eventName)] = null;\r\n                        };\r\n                    };\r\n                }())\r\n            },\r\n            core    : {\r\n                storage : {},\r\n                listen  : function (group, name, handle, id, registered_only) {\r\n                    /// <signature>\r\n                    ///     <summary>Add core's events listener </summary>\r\n                    ///     <param name=\"group\"             type=\"string\"   >Name of event group</param>\r\n                    ///     <param name=\"name\"              type=\"string\"   >Name of event</param>\r\n                    ///     <param name=\"handle\"            type=\"function\" >Handle</param>\r\n                    ///     <param name=\"id\"                type=\"string\"   >[optional][unique ID] ID of event</param>\r\n                    ///     <returns type=\"boolean / string\">return ID of listener - if attached; false - if not</returns>\r\n                    /// </signature>\r\n                    /// <signature>\r\n                    ///     <summary>Add core's events listener </summary>\r\n                    ///     <param name=\"group\"             type=\"string\"   >Name of event group</param>\r\n                    ///     <param name=\"name\"              type=\"string\"   >Name of event</param>\r\n                    ///     <param name=\"handle\"            type=\"function\" >Handle</param>\r\n                    ///     <param name=\"id\"                type=\"string\"   >[optional][unique ID] ID of event</param>\r\n                    ///     <param name=\"registered_only\"   type=\"boolean\"  >[optional][false] Add listener only if event was registered before</param>\r\n                    ///     <returns type=\"boolean / string\">return ID of listener - if attached; false - if not</returns>\r\n                    /// </signature>\r\n                    var group           = group || null,\r\n                        name            = name      || null,\r\n                        handle          = handle    || null,\r\n                        id              = id        || IDs.id(),\r\n                        registered_only = typeof registered_only !== 'boolean' ? false : registered_only,\r\n                        storage         = null,\r\n                        core            = events.core;\r\n                    if (group !== null && name !== null && handle !== null) {\r\n                        if (registered_only !== false) {\r\n                            if (core.get(group, name) === null) {\r\n                                return false;\r\n                            }\r\n                        }\r\n                        storage = core.register(group, name);\r\n                        if (id in storage) {\r\n                            //Here should be message about rewrite existing handle\r\n                            //LOGS!\r\n                        }\r\n                        storage[id] = handle;\r\n                        return id;\r\n                    }\r\n                    return false;\r\n                },\r\n                remove  : function (group, name, id) {\r\n                    /// <summary>\r\n                    /// Remove core's events listener \r\n                    /// </summary>\r\n                    /// <param name=\"group\" type=\"string\">Name of event group</param>\r\n                    /// <param name=\"name\"  type=\"string\">Name of event</param>\r\n                    /// <param name=\"id\"    type=\"string\">ID of event</param>\r\n                    /// <returns type=\"boolean\">true - removed; false - not found</returns>\r\n                    var group = group || null,\r\n                        name            = name      || null,\r\n                        id              = id        || null,\r\n                        storage         = null,\r\n                        global_starage  = events.core.storage,\r\n                        core            = events.core;\r\n                    if (group !== null && name !== null && id !== null) {\r\n                        storage = core.register(group, name);\r\n                        if (id in storage) {\r\n                            storage[id] = null;\r\n                            delete storage[id];\r\n                            if (Object.keys(storage).length === 0) {\r\n                                global_starage[group][name] = null;\r\n                                delete global_starage[group][name];\r\n                                if (Object.keys(global_starage[group]).length === 0) {\r\n                                    global_starage[group] = null;\r\n                                    delete global_starage[group];\r\n                                }\r\n                            }\r\n                            return true;\r\n                        }\r\n                    }\r\n                    return false;\r\n                },\r\n                register: function (group, name) {\r\n                    /// <summary>\r\n                    /// Register core's event \r\n                    /// </summary>\r\n                    /// <param name=\"group\" type=\"string\">Name of event group</param>\r\n                    /// <param name=\"name\"  type=\"string\">Name of event</param>\r\n                    /// <returns type=\"object\">Storage of registered event</returns>\r\n                    var storage = events.core.storage;\r\n                    if (!(group in storage      )) { storage[group]         = {}; }\r\n                    if (!(name in storage[group])) { storage[group][name]   = {}; }\r\n                    return storage[group][name];\r\n                },\r\n                get     : function (group, name) {\r\n                    /// <summary>\r\n                    /// Get storage of registered core's event \r\n                    /// </summary>\r\n                    /// <param name=\"group\" type=\"string\">Name of event group</param>\r\n                    /// <param name=\"name\"  type=\"string\">Name of event</param>\r\n                    /// <returns type=\"object\" mayBeNull=\"true\">Storage of registered event. NULL if event isn't registered</returns>\r\n                    var storage = events.core.storage;\r\n                    if (!(group in storage      )) { return null; }\r\n                    if (!(name in storage[group])) { return null; }\r\n                    return storage[group][name];\r\n                },\r\n                fire    : function (group, name, params) {\r\n                    /// <signature>\r\n                    ///     <summary>Call handles of registered core's event</summary>\r\n                    ///     <param name=\"group\"     type=\"string\"   >Name of event group</param>\r\n                    ///     <param name=\"name\"      type=\"string\"   >Name of event</param>\r\n                    ///     <returns type=\"void\">void</returns>\r\n                    /// </signature>\r\n                    /// <signature>\r\n                    ///     <summary>Call handles of registered core's event</summary>\r\n                    ///     <param name=\"group\"     type=\"string\"   >Name of event group</param>\r\n                    ///     <param name=\"name\"      type=\"string\"   >Name of event</param>\r\n                    ///     <param name=\"params\"    type=\"any\"      >Parameters for all called handles</param>\r\n                    ///     <returns type=\"void\">void</returns>\r\n                    /// </signature>\r\n                    var handles = events.core.get(group, name);\r\n                    if (handles !== null) {\r\n                        for (var id in handles) {\r\n                            try{\r\n                                handles[id](params);\r\n                            } catch (e) {\r\n                                //LOGS!\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        };\r\n        system          = {\r\n            handle      : function (handle_body, handle_arguments, call_point, this_argument, safely) {\r\n                /// <signature>\r\n                ///     <summary>Run function in safely mode</summary>\r\n                ///     <param name=\"body\"          type=\"function\" >Handle</param>\r\n                ///     <returns type=\"any\">Return of handle</returns>\r\n                /// </signature>\r\n                /// <signature>\r\n                ///     <summary>Run function in safely mode</summary>\r\n                ///     <param name=\"body\"          type=\"function\" >Handle</param>\r\n                ///     <param name=\"arguments\"     type=\"any\"      >Arguments for handle</param>\r\n                ///     <returns type=\"any\">Return of handle</returns>\r\n                /// </signature>\r\n                /// <signature>\r\n                ///     <summary>Run function in safely mode</summary>\r\n                ///     <param name=\"body\"          type=\"function\" >Handle</param>\r\n                ///     <param name=\"arguments\"     type=\"any\"      >Arguments for handle</param>\r\n                ///     <param name=\"call_point\"    type=\"string\"   >Text for log message.</param>\r\n                ///     <returns type=\"any\">Return of handle</returns>\r\n                /// </signature>\r\n                /// <signature>\r\n                ///     <summary>Run function in safely mode</summary>\r\n                ///     <param name=\"body\"          type=\"function\" >Handle</param>\r\n                ///     <param name=\"arguments\"     type=\"any\"      >Arguments for handle</param>\r\n                ///     <param name=\"call_point\"    type=\"string\"   >Text for log message.</param>\r\n                ///     <param name=\"this\"          type=\"object\"   >Context of handle</param>\r\n                ///     <returns type=\"any\">Return of handle</returns>\r\n                /// </signature>\r\n                /// <signature>\r\n                ///     <summary>Run function in safely mode</summary>\r\n                ///     <param name=\"body\"          type=\"function\" >Handle</param>\r\n                ///     <param name=\"arguments\"     type=\"any\"      >Arguments for handle</param>\r\n                ///     <param name=\"call_point\"    type=\"string\"   >Text for log message.</param>\r\n                ///     <param name=\"this\"          type=\"object\"   >Context of handle</param>\r\n                ///     <param name=\"safely\"        type=\"boolean\"  >Wrap into try / catch </param>\r\n                ///     <returns type=\"any\">Return of handle</returns>\r\n                /// </signature>\r\n                function proceed() {\r\n                    if (handle_arguments === null) {\r\n                        return handle_body.call(this_argument);\r\n                    } else {\r\n                        if (typeof handle_arguments.length === \"number\" && typeof handle_arguments === \"object\") {\r\n                            return handle_body.apply(this_argument, handle_arguments);\r\n                        } else {\r\n                            return handle_body.call(this_argument, handle_arguments);\r\n                        }\r\n                    }\r\n                };\r\n                var handle_body         = handle_body       || null,\r\n                    handle_arguments    = handle_arguments  || null,\r\n                    call_point          = call_point        || null,\r\n                    this_argument       = this_argument     || null,\r\n                    safely              = safely            || false;\r\n                if (handle_body !== null) {\r\n                    if (safely) {\r\n                        try {\r\n                            return proceed();\r\n                        } catch (e) {\r\n                            logs.log(\r\n                                \"Initializer runFunction method catch error: \\r\\n\" +\r\n                                logs.parseError(e) + \"\\r\\n Call point: \" + call_point,\r\n                                logs.types.WARNING\r\n                            );\r\n                            return null;\r\n                        }\r\n                    } else {\r\n                        return proceed();\r\n                    }\r\n                }\r\n                return null;\r\n            },\r\n            localStorage: {\r\n                get         : function (key, decode, prefix) {\r\n                    /// <signature>\r\n                    ///     <summary>Get value from localStorage</summary>\r\n                    ///     <param name=\"key\"       type=\"string\"   >Key of value in localStorage</param>\r\n                    ///     <returns type=\"any\">Value from localStorage</returns>\r\n                    /// </signature>\r\n                    /// <signature>\r\n                    ///     <summary>Get value from localStorage</summary>\r\n                    ///     <param name=\"key\"       type=\"string\"   >Key of value in localStorage</param>\r\n                    ///     <param name=\"decode\"    type=\"boolean\"  >True - decode from BASE64String</param>\r\n                    ///     <returns type=\"any\">Value from localStorage</returns>\r\n                    /// </signature>\r\n                    /// <signature>\r\n                    ///     <summary>Get value from localStorage</summary>\r\n                    ///     <param name=\"key\"       type=\"string\"   >Key of value in localStorage</param>\r\n                    ///     <param name=\"decode\"    type=\"boolean\"  >True - decode from BASE64String</param>\r\n                    ///     <param name=\"prefix\"    type=\"string\"   >Prefix for key of value</param>\r\n                    ///     <returns type=\"any\">Value from localStorage</returns>\r\n                    /// </signature>\r\n                    var value = null,\r\n                        decode  = typeof decode === 'boolean' ? decode : false,\r\n                        prefix  = typeof prefix === 'string' ? prefix : '';\r\n                    try {\r\n                        value = window.localStorage.getItem(prefix + key);\r\n                        if (typeof value !== \"string\") {\r\n                            value = null;\r\n                        }\r\n                        if (decode !== false) {\r\n                            value = system.convertor.BASE64.decode(value);\r\n                            value = system.convertor.UTF8.  decode(value);\r\n                        }\r\n                        return value;\r\n                    } catch (e) {\r\n                        return null;\r\n                    }\r\n                },\r\n                set         : function (key, value, encode, prefix) {\r\n                    /// <signature>\r\n                    ///     <summary>Save value in localStorage</summary>\r\n                    ///     <param name=\"key\"       type=\"string\"   >Key of value</param>\r\n                    ///     <param name=\"value\"     type=\"any\"      >Value</param>\r\n                    ///     <returns type=\"any\">Value from localStorage</returns>\r\n                    /// </signature>\r\n                    /// <signature>\r\n                    ///     <summary>Save value in localStorage</summary>\r\n                    ///     <param name=\"key\"       type=\"string\"   >Key of value</param>\r\n                    ///     <param name=\"value\"     type=\"any\"      >Value</param>\r\n                    ///     <param name=\"decode\"    type=\"boolean\"  >True - encode to BASE64String</param>\r\n                    ///     <returns type=\"any\">Value from localStorage</returns>\r\n                    /// </signature>\r\n                    /// <signature>\r\n                    ///     <summary>Save value in localStorage</summary>\r\n                    ///     <param name=\"key\"       type=\"string\"   >Key of value</param>\r\n                    ///     <param name=\"value\"     type=\"any\"      >Value</param>\r\n                    ///     <param name=\"decode\"    type=\"boolean\"  >True - encode to BASE64String</param>\r\n                    ///     <param name=\"prefix\"    type=\"string\"   >Prefix for key of value</param>\r\n                    ///     <returns type=\"any\">Value from localStorage</returns>\r\n                    /// </signature>\r\n                    var result_value = value,\r\n                        encode          = typeof encode === 'boolean' ? encode : false,\r\n                        prefix          = typeof prefix === 'string' ? prefix : '';\r\n                    try {\r\n                        window.localStorage.removeItem(prefix + key);\r\n                        if (encode !== false) {\r\n                            result_value = typeof value !== 'string' ? JSON.stringify(value) : result_value;\r\n                            result_value = system.convertor.UTF8.   encode(result_value);\r\n                            result_value = system.convertor.BASE64. encode(result_value);\r\n                        }\r\n                        window.localStorage.setItem(prefix + key, result_value);\r\n                        return true;\r\n                    } catch (e) {\r\n                        logs.log('Error during saving data into localStorage. [key]:[' + key + ']', logs.types.WARNING);\r\n                        return false;\r\n                    }\r\n                },\r\n                del         : function (key, prefix) {\r\n                    /// <signature>\r\n                    ///     <summary>Remove value from localStorage</summary>\r\n                    ///     <param name=\"key\" type=\"string\">Key of value</param>\r\n                    ///     <returns type=\"boolean\">True - success, False - fail</returns>\r\n                    /// </signature>\r\n                    /// <signature>\r\n                    ///     <summary>Remove value from localStorage</summary>\r\n                    ///     <param name=\"key\"       type=\"string\">Key of value</param>\r\n                    ///     <param name=\"prefix\"    type=\"string\">Prefix for key of value</param>\r\n                    ///     <returns type=\"boolean\">True - success, False - fail</returns>\r\n                    /// </signature>\r\n                    var prefix = typeof prefix === 'string' ? prefix : '';\r\n                    try {\r\n                        window.localStorage.removeItem(prefix + key);\r\n                        return true;\r\n                    } catch (e) {\r\n                        logs.log('Error during deleting data from localStorage. [key]:[' + key + ']', logs.types.WARNING);\r\n                        return null;\r\n                    }\r\n                },\r\n                getJSON     : function (key, prefix) {\r\n                    /// <signature>\r\n                    ///     <summary>Get value from localStorage and convert it to JSON</summary>\r\n                    ///     <param name=\"key\" type=\"string\">Key of value in localStorage</param>\r\n                    ///     <returns type=\"any\">Value from localStorage</returns>\r\n                    /// </signature>\r\n                    /// <signature>\r\n                    ///     <summary>Get value from localStorage and convert it to JSON</summary>\r\n                    ///     <param name=\"key\"       type=\"string\">Key of value in localStorage</param>\r\n                    ///     <param name=\"prefix\"    type=\"string\">Prefix for key of value</param>\r\n                    ///     <returns type=\"any\">Value from localStorage</returns>\r\n                    /// </signature>\r\n                    var storaged = system.localStorage.get(key, true, prefix);\r\n                    if (storaged !== null) {\r\n                        try{\r\n                            storaged = JSON.parse(storaged);\r\n                            return storaged;\r\n                        } catch (e) {\r\n                            return null;\r\n                        }\r\n                    }\r\n                    return null;\r\n                },\r\n                setJSON     : function (key, value, prefix) {\r\n                    /// <signature>\r\n                    ///     <summary>Stringify object from JSON and save it in localStorage</summary>\r\n                    ///     <param name=\"key\"       type=\"string\"   >Key of value</param>\r\n                    ///     <param name=\"value\"     type=\"any\"      >Value</param>\r\n                    ///     <returns type=\"any\">Value from localStorage</returns>\r\n                    /// </signature>\r\n                    /// <signature>\r\n                    ///     <summary>Stringify object from JSON and save it in localStorage</summary>\r\n                    ///     <param name=\"key\"       type=\"string\"   >Key of value</param>\r\n                    ///     <param name=\"value\"     type=\"any\"      >Value</param>\r\n                    ///     <param name=\"prefix\"    type=\"string\"   >Prefix for key of value</param>\r\n                    ///     <returns type=\"any\">Value from localStorage</returns>\r\n                    /// </signature>\r\n                    return system.localStorage.set(key, JSON.stringify(value), true, prefix);\r\n                },\r\n                reset       : function (prefix) {\r\n                    /// <signature>\r\n                    ///     <summary>Clear all data from localStorage</summary>\r\n                    ///     <returns type=\"boolean\">true - success; false - fail</returns>\r\n                    /// </signature>\r\n                    /// <signature>\r\n                    ///     <summary>Clear all data from localStorage</summary>\r\n                    ///     <param name=\"prefix\" type=\"string\">Remove value with key started with prefix</param>\r\n                    ///     <returns type=\"boolean\">true - success; false - fail</returns>\r\n                    /// </signature>\r\n                    var prefix  = typeof prefix === 'string' ? prefix : '',\r\n                        keys    = [];\r\n                    try {\r\n                        if (prefix !== null) {\r\n                            for (var key in window.localStorage) {\r\n                                if (key.indexOf(prefix) === 0) {\r\n                                    keys.push(key);\r\n                                }\r\n                            }\r\n                            keys.forEach(function (key) {\r\n                                window.localStorage.removeItem(key);\r\n                            });\r\n                        } else {\r\n                            window.localStorage.clear();\r\n                        }\r\n                        return true;\r\n                    } catch (e) {\r\n                        return false;\r\n                    }\r\n                },\r\n                isAvailable : function () {\r\n                    var id      = IDs.id(),\r\n                        result  = false;\r\n                    system.localStorage.set(id, id);\r\n                    result = system.localStorage.get(id) === id ? true : false;\r\n                    system.localStorage.del(id);\r\n                    return result;\r\n                }\r\n            },\r\n            resources   : {\r\n                settings    : {\r\n                    RESOURCES_MARK_ATTR: { name: 'data-flex-connect-mark', value: 'dynamically' },\r\n                    CSS_TIMER_PROPERTY : 'flex_css_load_event_timer',\r\n                    CSS_TIMER_DURATION : 5000,\r\n                },\r\n                css         : {\r\n                    settings    : {\r\n                        URLS    : [\r\n                            {\r\n                                reg     : /url\\('([^\\)'].*?)'\\)/gi,\r\n                                left    : /url\\('/gi,\r\n                                right   : /'\\)/gi,\r\n                                _left   : 'url(\"',\r\n                                _right  : '\")',\r\n                            },\r\n                            {\r\n                                reg     : /url\\(\"([^\\)\"].*?)\"\\)/gi,\r\n                                left    : /url\\(\"/gi,\r\n                                right   : /\"\\)/gi,\r\n                                _left   : 'url(\"',\r\n                                _right  : '\")',\r\n                            },\r\n                        ],\r\n                        attr    : {\r\n                            SRC : 'data-flex-src'\r\n                        }\r\n                    },\r\n                    connect     : function (url, onLoad, onError) {\r\n                        /// <signature>\r\n                        ///     <summary>Connect CSS resource via LINK in HEAD of page</summary>\r\n                        ///     <param name=\"url\"       type=\"string\"   >URL to resource</param>\r\n                        ///     <returns type=\"boolean\">true / false</returns>\r\n                        /// </signature>\r\n                        /// <signature>\r\n                        ///     <summary>Connect CSS resource via LINK in HEAD of page</summary>\r\n                        ///     <param name=\"url\"       type=\"string\"   >URL to resource</param>\r\n                        ///     <param name=\"onLoad\"    type=\"function\" >Callback on load will be finished</param>\r\n                        ///     <returns type=\"boolean\">true / false</returns>\r\n                        /// </signature>\r\n                        /// <signature>\r\n                        ///     <summary>Connect CSS resource via LINK in HEAD of page</summary>\r\n                        ///     <param name=\"url\"       type=\"string\"   >URL to resource</param>\r\n                        ///     <param name=\"onLoad\"    type=\"function\" >Callback on load will be finished</param>\r\n                        ///     <param name=\"onError\"   type=\"function\" >Callback on some error</param>\r\n                        ///     <returns type=\"boolean\">true / false</returns>\r\n                        /// </signature>\r\n                        function addLink(url) {\r\n                            var settings    = system.resources.settings,\r\n                                link        = document.createElement(\"LINK\");\r\n                            link.type   = \"text/css\";\r\n                            link.href   = url;\r\n                            link.rel    = \"stylesheet\";\r\n                            link.setAttribute(settings.RESOURCES_MARK_ATTR.name, settings.RESOURCES_MARK_ATTR.value);\r\n                            return {\r\n                                link    : link,\r\n                                append  : function () { document.head.appendChild(link); }\r\n                            };\r\n                        };\r\n                        function addLoadListener(link, url, onLoad) {\r\n                            function resetTimer(link, setting) {\r\n                                clearTimeout(link[settings.CSS_TIMER_PROPERTY]);\r\n                                link[settings.CSS_TIMER_PROPERTY] = null;\r\n                                delete link[settings.CSS_TIMER_PROPERTY];\r\n                            };\r\n                            var settings = system.resources.settings;\r\n                            //Not all browsers supports load event for CSS. That's why using <IMG> to emulate load event\r\n                            link[settings.CSS_TIMER_PROPERTY] = setTimeout(\r\n                                function () {\r\n                                    if (link[settings.CSS_TIMER_PROPERTY] !== void 0) {\r\n                                        var img = document.createElement(\"IMG\");\r\n                                        resetTimer(link, settings);\r\n                                        events.DOM.add(\r\n                                            img,\r\n                                            ['load', 'error'],\r\n                                            function (event) {\r\n                                                system.handle(onLoad, url, 'system.resources.css.connect', this);\r\n                                            }\r\n                                        );\r\n                                        img.src = url;\r\n                                    }\r\n                                },\r\n                                settings.CSS_TIMER_DURATION\r\n                            );\r\n                            events.DOM.add(\r\n                                link,\r\n                                'load',\r\n                                function (event) {\r\n                                    if (link[settings.CSS_TIMER_PROPERTY] !== void 0) {\r\n                                        resetTimer(link, settings);\r\n                                        system.handle(onLoad, url, 'system.resources.css.connect', this);\r\n                                    }\r\n                                }\r\n                            );\r\n                        };\r\n                        function isConnected(url) {\r\n                            var sheets = document.styleSheets;\r\n                            try{\r\n                                Array.prototype.forEach.call(\r\n                                    document.styleSheets,\r\n                                    function (sheet) {\r\n                                        if (sheet.href.indexOf(url) !== -1) {\r\n                                            throw 'found';\r\n                                        }\r\n                                    }\r\n                                );\r\n                            } catch (e) {\r\n                                if (e === 'found') {\r\n                                    return true;\r\n                                }\r\n                            }\r\n                            return false;\r\n                        };\r\n                        var link            = null,\r\n                            onLoad          = onLoad || null,\r\n                            onError         = onError || null,\r\n                            url             = url || null,\r\n                            onLoadContainer = null;\r\n                        if (url !== null) {\r\n                            if (isConnected(url) === false) {\r\n                                link = addLink(url);\r\n                                //Attach common handle for error\r\n                                events.DOM.add(\r\n                                    link.link,\r\n                                    'error',\r\n                                    function (event) {\r\n                                        logs.log(\r\n                                            \"During loading CSS resource [\" + url + \"] was error\",\r\n                                            logs.types.WARNING\r\n                                        );\r\n                                    }\r\n                                );\r\n                                if (onError !== null) {\r\n                                    //Attach user error handle\r\n                                    events.DOM.add(link.link, 'error', onError);\r\n                                }\r\n                                if (onLoad !== null) {\r\n                                    addLoadListener(link.link, url, onLoad);\r\n                                } else {\r\n                                    system.handle(onLoad, null, 'system.resources.css.connect', this);\r\n                                }\r\n                                link.append();\r\n                                return true;\r\n                            }\r\n                        }\r\n                        return false;\r\n                    },\r\n                    adoption    : function (cssText, documentLink, url) {\r\n                        /// <signature>\r\n                        ///     <summary>Inject CSS text as STYLE into HEAD</summary>\r\n                        ///     <param name=\"cssText\"       type=\"string\"   >CSS text</param>\r\n                        ///     <returns type=\"object\">link to created node STYLE</returns>\r\n                        /// </signature>\r\n                        /// <signature>\r\n                        ///     <summary>Inject CSS text as STYLE into HEAD</summary>\r\n                        ///     <param name=\"cssText\"       type=\"string\"   >CSS text</param>\r\n                        ///     <param name=\"documentLink\"  type=\"object\"   >Link to document</param>\r\n                        ///     <returns type=\"object\">link to created node STYLE</returns>\r\n                        /// </signature>\r\n                        /// <signature>\r\n                        ///     <summary>Inject CSS text as STYLE into HEAD</summary>\r\n                        ///     <param name=\"cssText\"       type=\"string\"   >CSS text</param>\r\n                        ///     <param name=\"documentLink\"  type=\"object\"   >Link to document</param>\r\n                        ///     <param name=\"url\"           type=\"string\"   >URL of parent to correct paths in CSS text</param>\r\n                        ///     <returns type=\"object\">link to created node STYLE</returns>\r\n                        /// </signature>\r\n                        var documentLink    = documentLink !== null ? (typeof documentLink === \"object\" ? (documentLink.body !== void 0 ? documentLink : document) : document) : document,\r\n                            style           = documentLink.createElement(\"style\"),\r\n                            url             = typeof url === 'string' ? url : null;\r\n                        if (typeof cssText === 'string') {\r\n                            try {\r\n                                if (url !== null) {\r\n                                    cssText = system.resources.css.correctPaths(cssText, url);\r\n                                    style.setAttribute(system.resources.css.settings.attr.SRC, url);\r\n                                }\r\n                                style.type  = \"text/css\";\r\n                                if (style.styleSheet) {\r\n                                    style.styleSheet.cssText = cssText;\r\n                                } else {\r\n                                    style.appendChild(documentLink.createTextNode(cssText));\r\n                                }\r\n                                documentLink.head.appendChild(style);\r\n                                return style;\r\n                            } catch (e) {\r\n                                logs.log(\r\n                                    'Error during adoption of CSS resource: url = [' + url + '], cssText starts from [' + cssText.substr(0, 50) + ' (...)]',\r\n                                    logs.types.CRITICAL\r\n                                );\r\n                                return null;\r\n                            }\r\n                        }\r\n                        return null;\r\n                    },\r\n                    correctPaths: function (cssText, parent_url) {\r\n                        function correct(target_url, parent_url) {\r\n                            var url = null;\r\n                            if (target_url.trim().toLowerCase().indexOf('data:') !== 0) {\r\n                                url = system.url.parse(target_url, parent_url);\r\n                                if (url !== null) {\r\n                                    return url.url;\r\n                                } else {\r\n                                    return target_url;\r\n                                }\r\n                            } else {\r\n                                return target_url;\r\n                            }\r\n                        };\r\n                        if (config.defaults.settings.CHECK_PATHS_IN_CSS !== false && typeof parent_url === 'string') {\r\n                            if (parent_url !== '') {\r\n                                system.resources.css.settings.URLS.forEach(function (sets) {\r\n                                    var urls = cssText.match(sets.reg);\r\n                                    if (urls instanceof Array) {\r\n                                        urls.forEach(function (url) {\r\n                                            var href = url;\r\n                                            href = href.replace(sets.left, '');\r\n                                            href = href.replace(sets.right, '');\r\n                                            href = correct(href, parent_url);\r\n                                            if (href !== null) {\r\n                                                cssText = cssText.replace(url, sets._left + href + sets._right);\r\n                                            }\r\n                                        });\r\n                                    }\r\n                                });\r\n                            }\r\n                        }\r\n                        return cssText;\r\n                    }\r\n                },\r\n                js          : {\r\n                    connect         : function (url, onLoad, onError) {\r\n                        /// <signature>\r\n                        ///     <summary>Connect JS resource via LINK in HEAD of page</summary>\r\n                        ///     <param name=\"url\"       type=\"string\"   >URL to resource</param>\r\n                        ///     <returns type=\"boolean\">link to created node SCRIPT</returns>\r\n                        /// </signature>\r\n                        /// <signature>\r\n                        ///     <summary>Connect JS resource via LINK in HEAD of page</summary>\r\n                        ///     <param name=\"url\"       type=\"string\"   >URL to resource</param>\r\n                        ///     <param name=\"onLoad\"    type=\"function\" >Callback on load will be finished</param>\r\n                        ///     <returns type=\"boolean\">link to created node SCRIPT</returns>\r\n                        /// </signature>\r\n                        /// <signature>\r\n                        ///     <summary>Connect JS resource via LINK in HEAD of page</summary>\r\n                        ///     <param name=\"url\"       type=\"string\"   >URL to resource</param>\r\n                        ///     <param name=\"onLoad\"    type=\"function\" >Callback on load will be finished</param>\r\n                        ///     <param name=\"onError\"   type=\"function\" >Callback on some error</param>\r\n                        ///     <returns type=\"boolean\">link to created node SCRIPT</returns>\r\n                        /// </signature>\r\n                        function addScript(url) {\r\n                            var settings    = system.resources.settings,\r\n                                script      = document.createElement(\"SCRIPT\");\r\n                            script.type = \"application/javascript\";\r\n                            script.src  = url;\r\n                            script.setAttribute(settings.RESOURCES_MARK_ATTR.name, settings.RESOURCES_MARK_ATTR.value);\r\n                            return {\r\n                                script: script,\r\n                                append: function () { document.head.appendChild(script); }\r\n                            };\r\n                        };\r\n                        var script  = null,\r\n                            onLoad  = onLoad || null,\r\n                            onError = onError || null,\r\n                            url     = url || null;\r\n                        if (url !== null) {\r\n                            script = addScript(url);\r\n                            if (onLoad !== null) {\r\n                                events.DOM.add(script.script, \"load\", onLoad);\r\n                            }\r\n                            if (onError !== null) {\r\n                                events.DOM.add(script.script, \"error\", onError);\r\n                            }\r\n                            script.append();\r\n                            return script.script;\r\n                        }\r\n                        return false;\r\n                    },\r\n                    adoption        : function (jsScript, onFinish) {\r\n                        /// <signature>\r\n                        ///     <summary>Generate script within JS text</summary>\r\n                        ///     <param name=\"jsScript\"  type=\"string\"   >JS text</param>\r\n                        ///     <returns type=\"void\">void</returns>\r\n                        /// </signature>\r\n                        /// <signature>\r\n                        ///     <summary>Generate script within JS text</summary>\r\n                        ///     <param name=\"jsScript\"  type=\"string\"   >JS text</param>\r\n                        ///     <param name=\"onFinish\"  type=\"function\" >Callback on finish</param>\r\n                        ///     <returns type=\"void\">void</returns>\r\n                        /// </signature>\r\n                        var resourceJS  = document.createElement(\"SCRIPT\"),\r\n                            onFinish    = onFinish || null,\r\n                            jsScript    = jsScript || null;\r\n                        if (jsScript !== null) {\r\n                            resourceJS.type = \"application/javascript\";\r\n                            resourceJS.appendChild(document.createTextNode(jsScript));\r\n                            document.body.insertBefore(resourceJS, document.body.childNodes[0]);\r\n                            if (onFinish !== null) {\r\n                                system.handle(onFinish, null, 'system.resources.js.adoption', this);\r\n                            }\r\n                        }\r\n                    },\r\n                    getCurrentSRC   : function (detect_core) {\r\n                        ///     <summary>Try to get URL of current (running) script</summary>\r\n                        ///     <returns type=\"STRING\">URL</returns>\r\n                        var urls        = null,\r\n                            detect_core = typeof detect_core === 'boolean' ? detect_core : false;\r\n                        try {\r\n                            throw new Error('Script URL detection');\r\n                        } catch (e) {\r\n                            if (typeof e.stack === 'string') {\r\n                                urls = e.stack.match(options.regs.urls.JS_URL);\r\n                                if (urls instanceof Array) {\r\n                                    if (urls.length > 0) {\r\n                                        return detect_core ? urls[urls.length - 1] : (urls[urls.length - 1].indexOf(options.files.CORE_URL) === -1 ? urls[urls.length - 1] : null);\r\n                                    }\r\n                                }\r\n                            }\r\n                            return null;\r\n                        }\r\n                    }\r\n                }\r\n            },\r\n            convertor   : {\r\n                UTF8: {\r\n                    encode: function (s) {\r\n                        return unescape(encodeURIComponent(s));\r\n                    },\r\n                    decode: function (s) {\r\n                        return decodeURIComponent(escape(s));\r\n                    }\r\n                },\r\n                BASE64: {\r\n                    decode: function (s) {\r\n                        var e = {}, i, k, v = [], r = \"\", w = String.fromCharCode, z,\r\n                            n = [[65, 91], [97, 123], [48, 58], [43, 44], [47, 48]],\r\n                            b = 0, c, x, l = 0, o = 0, char, num;\r\n                        for (z in n) { for (i = n[z][0]; i < n[z][1]; i++) { v.push(w(i)); } }\r\n                        for (i = 0; i < 64; i++) { e[v[i]] = i; }\r\n                        if (s.length < 100) {\r\n                            var stop = true;\r\n                        }\r\n                        for (i = 0; i < s.length; i += 72) {\r\n                            o = s.substring(i, i + 72);\r\n                            for (x = 0; x < o.length; x++) {\r\n                                c = e[o.charAt(x)]; b = (b << 6) + c; l += 6;\r\n                                while (l >= 8) {\r\n                                    char = w((b >>> (l -= 8)) % 256);\r\n                                    num = char.charCodeAt(0);\r\n                                    r = (num !== 0 ? r + char : r);\r\n                                }\r\n                            }\r\n                        }\r\n                        return r;\r\n                    },\r\n                    encode: function (s) {\r\n                        var b64 = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\",\r\n                            o1, o2, o3, h1, h2, h3, h4, r, bits, i = 0,\r\n                            ac = 0,\r\n                            enc = \"\",\r\n                            tmp_arr = [];\r\n                        if (!s) {\r\n                            return s;\r\n                        }\r\n                        do { // pack three octets into four hexets\r\n                            o1 = s.charCodeAt(i++);\r\n                            o2 = s.charCodeAt(i++);\r\n                            o3 = s.charCodeAt(i++);\r\n                            bits = o1 << 16 | o2 << 8 | o3;\r\n                            h1 = bits >> 18 & 0x3f;\r\n                            h2 = bits >> 12 & 0x3f;\r\n                            h3 = bits >> 6 & 0x3f;\r\n                            h4 = bits & 0x3f;\r\n                            // use hexets to index into b64, and append result to encoded string\r\n                            tmp_arr[ac++] = b64.charAt(h1) + b64.charAt(h2) + b64.charAt(h3) + b64.charAt(h4);\r\n                        } while (i < s.length);\r\n                        enc = tmp_arr.join('');\r\n                        r = s.length % 3;\r\n                        return (r ? enc.slice(0, r - 3) : enc) + '==='.slice(r || 3);\r\n                    }\r\n                }\r\n            },\r\n            url         : {\r\n                settings            : {\r\n                    parser: {\r\n                        LAST        : /([^\\/]*)$/gi,\r\n                        CORRECTION  : /[\\/\\\\]$/gi,\r\n                        BAD_SLASH   : /\\\\/gi,\r\n                        PROTOCOL    : /:\\/\\//gi,\r\n                        DOUBLE      : /\\/{2,}/gi\r\n                    }\r\n                },\r\n                getURLInfo          : function (url) {\r\n                    var a       = document.createElement('a'),\r\n                        result  = null;\r\n                    if (typeof url === 'string') {\r\n                        a.setAttribute('href', url);\r\n                        result = {\r\n                            hostname: a.hostname,\r\n                            host    : a.host,\r\n                            port    : a.port,\r\n                            protocol: a.protocol,\r\n                            isFull  : false\r\n                        };\r\n                        if (result.hostname !== '') {\r\n                            result.isFull = url.indexOf(result.protocol + '//' + result.hostname) !== 0 ? false : true;\r\n                        } else {\r\n                            result.isFull = false;\r\n                        }\r\n                    }\r\n                    return result;\r\n                },\r\n                getCurrentDomain    : function () {\r\n                    var url = null;\r\n                    if (window.location.origin) {\r\n                        url = window.location.origin;\r\n                    } else {\r\n                        url = window.location.protocol + '//' + window.location.host;\r\n                    }\r\n                    return url;\r\n                },\r\n                getParams           : function (url) {\r\n                    /// <signature>\r\n                    ///     <summary>Parsing of parameters in URL</summary>\r\n                    ///     <param name=\"url\"       type=\"string\">URL</param>\r\n                    ///     <returns type=\"object\">{url: string; params: object}</returns>\r\n                    /// </signature>\r\n                    var params = null,\r\n                        _params = null;\r\n                    url     = url.split('?');\r\n                    params  = url.length === 2 ? url[1] : null;\r\n                    url     = url[0];\r\n                    if (params !== null) {\r\n                        _params = params.split('&');\r\n                        params  = {};\r\n                        _params.forEach(function (param) {\r\n                            var pear = param.split('=');\r\n                            if (pear.length === 2) {\r\n                                params[pear[0]] = pear[1];\r\n                            }\r\n                        });\r\n                    }\r\n                    return {\r\n                        url     : url,\r\n                        params  : params\r\n                    };\r\n                },\r\n                restoreFullURL      : function (url){\r\n                    /// <signature>\r\n                    ///     <summary>Add current domain to URL (if there are no definition of domain)</summary>\r\n                    ///     <param name=\"url\"type=\"string\">URL</param>\r\n                    ///     <returns type=\"object\">Restored URL</returns>\r\n                    /// </signature>\r\n                    var _url = url;\r\n                    if (typeof url === 'string') {\r\n                        _url = system.url.getURLInfo(_url);\r\n                        if (_url.isFull === false) {\r\n                            if (_url.hostname === '') {\r\n                                return system.url.getCurrentDomain() + (url.indexOf('/') !== 0 ? '/' : '') + url;\r\n                            } else {\r\n                                return _url.protocol + '//' + _url.host + (url.indexOf('/') !== 0 ? '/' : '') + url;\r\n                            }\r\n                        } else {\r\n                            return url;\r\n                        }\r\n                    }\r\n                    return null;\r\n                },\r\n                parse               : function (url, origin) {\r\n                    /// <signature>\r\n                    ///     <summary>Parsing of URL</summary>\r\n                    ///     <param name=\"url\"       type=\"string\">URL</param>\r\n                    ///     <returns type=\"object\">Parsed URL</returns>\r\n                    /// </signature>\r\n                    /// <signature>\r\n                    ///     <summary>Parsing of URL</summary>\r\n                    ///     <param name=\"url\"       type=\"string\">URL</param>\r\n                    ///     <param name=\"origin\"    type=\"string\">Original URL (i can be needed if URL hasn't domain definition. Like this ../folder/resource.ext</param>\r\n                    ///     <returns type=\"object\">Parsed URL</returns>\r\n                    /// </signature>\r\n                    function steps(url) {\r\n                        var count       = 0,\r\n                            valid       = true,\r\n                            previous    = -1,\r\n                            clear_url   = '';\r\n                        url.split('/').forEach(function (part, index) {\r\n                            if (part === '..') {\r\n                                count += 1;\r\n                                if (previous !== -1) {\r\n                                    if (previous !== index - 1) {\r\n                                        valid = false;\r\n                                    }\r\n                                }\r\n                                previous = index;\r\n                            } else {\r\n                                clear_url += '/' + part;\r\n                            }\r\n                        });\r\n                        return (valid === true ? { count: count, url: clear_url } : false);\r\n                    };\r\n                    function correction(url) {\r\n                        url = url.replace(system.url.settings.parser.CORRECTION, '');\r\n                        url = url.replace(system.url.settings.parser.BAD_SLASH, '/');\r\n                        return url;\r\n                    };\r\n                    var result      = null,\r\n                        info        = null,\r\n                        origin      = typeof origin === 'string' ? origin : null,\r\n                        back_steps  = 0,\r\n                        _origin     = null,\r\n                        params      = null;\r\n                    if (typeof url === 'string') {\r\n                        url     = correction(url);\r\n                        params  = system.url.getParams(url);\r\n                        url     = params.url;\r\n                        params  = params.params;\r\n                        info    = system.url.getURLInfo(url);\r\n                        if (info !== null) {\r\n                            back_steps = steps(url);\r\n                            if (back_steps !== false) {\r\n                                if (back_steps.count > 0) {\r\n                                    /*If URL has some \"back\" direction like [../../folder/resource.ext]\r\n                                    * In this case we need origin URL to build valid path\r\n                                    * */\r\n                                    if (origin !== null) {\r\n                                        _origin = system.url.parse(origin);\r\n                                        if (_origin !== null) {\r\n                                            if (back_steps.count < _origin.parts.length - 1) {\r\n                                                _origin.parts.splice(_origin.parts.length - back_steps.count, back_steps.count);\r\n                                                _origin.parts = _origin.parts.map(function (item) {\r\n                                                    return (item === '//' ? '' : item);\r\n                                                });\r\n                                                url = _origin.parts.join('/') + back_steps.url;\r\n                                                return system.url.parse(url);\r\n                                            }\r\n                                        }\r\n                                    }\r\n                                } else {\r\n                                    if (info.isFull === false){\r\n                                        /*If URL has not root path. URL looks like [folder/resource.ext] or [resource.ext]\r\n                                        * In this case we need origin URL to build valid path\r\n                                        */\r\n                                        origin  = origin === null ? system.url.getCurrentDomain() : origin;\r\n                                        _origin = system.url.parse(origin);\r\n                                        if (_origin !== null) {\r\n                                            if (url.indexOf('~/') === 0) {\r\n                                                url = url.replace('~', _origin.home);\r\n                                            } else {\r\n                                                _origin.parts = _origin.parts.map(function (item) {\r\n                                                    return (item === '//' ? '' : item);\r\n                                                });\r\n                                                url = _origin.parts.join('/') + (url.indexOf('/') !== 0 ? '/' : '') + url;\r\n                                            }\r\n                                            return system.url.parse(url);\r\n                                        }\r\n                                    } else {\r\n                                        /*If we are in this section, it means that we have everything to parse URL*/\r\n                                        result  = {\r\n                                            target      : url.match(system.url.settings.parser.LAST),\r\n                                            _path       : '',\r\n                                            _url        : url,\r\n                                            _hostname   : info.hostname,\r\n                                            hostname    : info.hostname !== '' ? info.hostname  : window.location.hostname,\r\n                                            _host       : info.host,\r\n                                            host        : info.host     !== '' ? info.host      : window.location.host,\r\n                                            _port       : info.port,\r\n                                            port        : info.port     !== '' ? info.port      : window.location.port,\r\n                                            _protocol   : info.protocol,\r\n                                            protocol    : info.protocol !== ':'? info.protocol  : window.location.protocol,\r\n                                            home        : info.hostname === '' ? window.location.protocol   + '//' + window.location.host   : info.protocol + '//' + info.host,\r\n                                            _home       : info.hostname !== '' ? info.protocol + '//' + info.host : '',\r\n                                            params      : params,\r\n                                            dirs        : null,\r\n                                            parts       : null\r\n                                        };\r\n                                        if (result.target instanceof Array && result.target.length > 0) {\r\n                                            result.target   = result.target[0];\r\n                                            if (result.target.indexOf('.') === -1) {\r\n                                                result.target = '';\r\n                                            }\r\n                                            result._path    = url.replace(result.target, '');\r\n                                        } else {\r\n                                            result.target   = '';\r\n                                        }\r\n                                        if (result._home === '') {\r\n                                            result.path = result.home + (result._path.  indexOf('/') === 0 ? '' : '/') + result._path;\r\n                                            result.url  = result.home + (result._url.   indexOf('/') === 0 ? '' : '/') + result._url;\r\n                                        } else {\r\n                                            result.path = result._path;\r\n                                            result.url  = result._url;\r\n                                        }\r\n                                        result.parts = result.url.split('/').map(function (item) {\r\n                                            return (item === '' ? '//' : item);\r\n                                        });\r\n                                        if (result.parts.indexOf(result.target) !== -1) {\r\n                                            result.parts.splice(result.parts.indexOf(result.target), 1);\r\n                                        }\r\n                                        result.dirs = result.path.replace(result.home, '').split('/');\r\n                                        result.dirs = result.dirs.filter(function (dir) { return dir !== '' ? true : false; });\r\n                                        return result;\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                    return null;\r\n                },\r\n                sterilize           : function (url) {\r\n                    var protocol = IDs.id();\r\n                    return url. replace(system.url.settings.parser.PROTOCOL, protocol).\r\n                                replace(system.url.settings.parser.BAD_SLASH, '/').\r\n                                replace(system.url.settings.parser.DOUBLE, '/').\r\n                                replace(protocol, '://');\r\n                },\r\n                getTypeOfResource   : function (url) {\r\n                    var _url = url.replace(options.regs.urls.PARAMS, '');\r\n                    _url = _url.match(options.regs.urls.EXTENSION);\r\n                    if (_url instanceof Array) {\r\n                        if (_url.length === 1) {\r\n                            return _url[0].toLowerCase();\r\n                        }\r\n                    }\r\n                    return null;\r\n                },\r\n                is                  : {\r\n                    clear   : function(url){\r\n                        if (typeof url === 'string') {\r\n                            url = url.split('?');\r\n                            url = url[0];\r\n                            url = url.replace(options.regs.urls.NOT_URL_SYMBOLS, '');\r\n                            return url;\r\n                        }\r\n                        return null;\r\n                    },\r\n                    js      : function (url) {\r\n                        url = system.url.is.clear(url);\r\n                        if (url !== null) {\r\n                            options.regs.urls.JS_EXP_IN_URL.lastIndex = 0;\r\n                            return options.regs.urls.JS_EXP_IN_URL.test(url);\r\n                        }\r\n                        return false;\r\n                    },\r\n                    css     : function (url) {\r\n                        url = system.url.is.clear(url);\r\n                        if (url !== null) {\r\n                            options.regs.urls.CSS_EXP_IN_URL.lastIndex = 0;\r\n                            return options.regs.urls.CSS_EXP_IN_URL.test(url);\r\n                        }\r\n                        return false;\r\n                    },\r\n                }\r\n            },\r\n        };\r\n        IDs             = {\r\n            id: (function () {\r\n                var index = 0;\r\n                return function (prefix) {\r\n                    index += 1;\r\n                    return (prefix || '') + (new Date()).valueOf() + '_' + index;\r\n                };\r\n            }()),\r\n        };\r\n        logs            = {\r\n            types       : {\r\n                CRITICAL        : 'CRITICAL',\r\n                LOGICAL         : 'LOGICAL',\r\n                WARNING         : 'WARNING',\r\n                NOTIFICATION    : 'NOTIFICATION',\r\n                LOGS            : 'LOG',\r\n                KERNEL_LOGS     : 'KERNEL_LOGS',\r\n            },\r\n            rendering   : {\r\n                CRITICAL        : 'color: #FF0000;font-weight:bold;',\r\n                LOGICAL         : 'color: #00FFF7;font-weight:bold;',\r\n                WARNING         : 'color: #A69600;font-weight:bold;',\r\n                NOTIFICATION    : 'color: #988DFF;font-weight:bold;',\r\n                LOGS            : 'color: #6C6C6C;',\r\n                KERNEL_LOGS     : 'color: #008B0E;font-weight:bold;',\r\n            },\r\n            parseError  : function (e) {\r\n                /// <signature>\r\n                ///     <summary>Create string from error object</summary>\r\n                ///     <param name=\"error\" type=\"object\">Error object</param>\r\n                ///     <returns type=\"string\">String</returns>\r\n                /// </signature>\r\n                var message = e.name + \": \" + e.message + \"\\r\\n--------------------------------------------\";\r\n                for (var property in e) {\r\n                    if (property !== \"name\" && property !== \"message\") {\r\n                        message = message + \"\\r\\n  \" + property + \"=\" + e[property];\r\n                    }\r\n                }\r\n                return message;\r\n            },\r\n            log         : function (message, type) {\r\n                /// <signature>\r\n                ///     <summary>Add log message to console</summary>\r\n                ///     <param name=\"message\"   type=\"string\">Message</param>\r\n                ///     <returns type=\"void\">void</returns>\r\n                /// </signature>\r\n                /// <signature>\r\n                ///     <summary>Add log message to console</summary>\r\n                ///     <param name=\"message\"   type=\"string\">Message</param>\r\n                ///     <param name=\"type\"      type=\"string\">Type of message</param>\r\n                ///     <returns type=\"void\">void</returns>\r\n                /// </signature>\r\n                var type = type || 'LOGS';\r\n                if (console && logs.types[type]) {\r\n                    if (console.log !== void 0) {\r\n                        if (config.defaults.logs.SHOW.indexOf(type) !== -1) {\r\n                            console.log('%c [' + type + ']' + '%c' + message, logs.rendering[type], logs.rendering.LOGS);\r\n                            logs.callEvent(message, type);\r\n                        }\r\n                    }\r\n                }\r\n            },\r\n            callEvent: function (message, type) {\r\n                if (oop.namespace.get('flex.registry.events.system.logs') !== null) {\r\n                    if (flex.registry.events.system.logs[type] !== void 0) {\r\n                        events.core.fire(flex.registry.events.system.logs.GROUP, flex.registry.events.system.logs[type], message);\r\n                    }\r\n                }\r\n            }\r\n        };\r\n        wrappers        = {\r\n            callers     : {\r\n                node    : (function () {\r\n                    var cache = {};\r\n                    return function (selector, use_cache, document_link) {\r\n                        var node        = null,\r\n                            use_cache   = typeof use_cache === 'boolean' ? use_cache : false;\r\n                        if (typeof selector === 'string') {\r\n                            if (use_cache) {\r\n                                if (cache[selector]) {\r\n                                    if (cache[selector] !== null) {\r\n                                        node = cache[selector];\r\n                                    }\r\n                                }\r\n                            }\r\n                            node = node !== null ? node : (document_link || document).querySelector(selector);\r\n                            if (use_cache && !cache[selector] && node !== null) {\r\n                                cache[selector] = node;\r\n                            }\r\n                            return new wrappers.constructors.node(node);\r\n                        } else {\r\n                            if (selector !== void 0) {\r\n                                if (typeof selector.nodeName === 'string' || selector == window) {\r\n                                    return new wrappers.constructors.node(selector);\r\n                                }\r\n                            }\r\n                        }\r\n                        return null;\r\n                    };\r\n                }()),\r\n                nodes   : (function () {\r\n                    var cache = {};\r\n                    return function (selector, use_cache, document_link) {\r\n                        var nodes       = null,\r\n                            use_cache   = typeof use_cache === 'boolean' ? use_cache : false;\r\n                        if (typeof selector === 'string') {\r\n                            if (use_cache) {\r\n                                if (cache[selector]) {\r\n                                    if (cache[selector] !== null) {\r\n                                        if (cache[selector].length > 0) {\r\n                                            nodes = cache[selector];\r\n                                        }\r\n                                    }\r\n                                }\r\n                            }\r\n                            nodes = nodes !== null ? nodes : (document_link || document).querySelectorAll(selector);\r\n                            if (use_cache && !cache[selector] && nodes !== null) {\r\n                                if (nodes.length > 0) {\r\n                                    cache[selector] = nodes;\r\n                                }\r\n                            }\r\n                            return new wrappers.constructors.nodes(nodes);\r\n                        } else {\r\n                            if (selector !== void 0) {\r\n                                if (typeof selector.length === 'number') {\r\n                                    if (selector.length > 0) {\r\n                                        if (typeof selector[0] === 'string') {\r\n                                            nodes = [];\r\n                                            Array.prototype.forEach.call(selector, function (selector, index) {\r\n                                                var node = (document_link || document).querySelector(selector);\r\n                                                if (node !== null) {\r\n                                                    nodes.push(node);\r\n                                                }\r\n                                            });\r\n                                            return new wrappers.constructors.nodes(nodes);\r\n                                        } else if (typeof selector[0].nodeName === 'string') {\r\n                                            return new wrappers.constructors.nodes(selector);\r\n                                        }\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                        return null;\r\n                    };\r\n                }()),\r\n                array   : function (_array) {\r\n                    if (_array instanceof Array) {\r\n                        return new wrappers.constructors.array(_array);\r\n                    } else {\r\n                        return null;\r\n                    }\r\n                },\r\n                string  : function (_string) {\r\n                    if (typeof _string === 'string') {\r\n                        return new wrappers.constructors.string(_string);\r\n                    } else {\r\n                        return null;\r\n                    }\r\n                },\r\n                boolean : function (_boolean) {\r\n                    if (typeof _boolean === 'boolean') {\r\n                        return new wrappers.constructors.boolean(_boolean);\r\n                    } else {\r\n                        return null;\r\n                    }\r\n                },\r\n                object  : function (_object) {\r\n                    if (typeof _object === 'object') {\r\n                        return new wrappers.constructors.object(_object);\r\n                    } else {\r\n                        return null;\r\n                    }\r\n                },\r\n            },\r\n            prototypes  : {\r\n                node    : {},\r\n                nodes   : {},\r\n                array   : {},\r\n                string  : {},\r\n                boolean : {},\r\n                object  : {},\r\n                update  : {\r\n                    update  : function (target) {\r\n                        function update(obj) {\r\n                            var updated = null;\r\n                            for (var pro in obj) {\r\n                                if (obj.hasOwnProperty(pro)) {\r\n                                    if (typeof obj[pro] === 'object' && pro !== 'target') {\r\n                                        updated = function () { updated.target = this.target; return updated; };\r\n                                        for (var subpro in obj[pro]) {\r\n                                            updated[subpro] = obj[pro][subpro];\r\n                                        }\r\n                                        obj[pro] = updated;\r\n                                    } else if (typeof obj[pro] === 'function') {\r\n                                        update(obj[pro]);\r\n                                    }\r\n                                }\r\n                            }\r\n                        };\r\n                        if (wrappers.prototypes[target]) {\r\n                            update(wrappers.prototypes[target]);\r\n                        }\r\n                    },\r\n                    node    : function () { wrappers.prototypes.update.update('node'    ); },\r\n                    nodes   : function () { wrappers.prototypes.update.update('nodes'   ); },\r\n                    array   : function () { wrappers.prototypes.update.update('array'   ); },\r\n                    string  : function () { wrappers.prototypes.update.update('string'  ); },\r\n                    boolean : function () { wrappers.prototypes.update.update('boolean' ); },\r\n                    object  : function () { wrappers.prototypes.update.update('object'  ); }\r\n                },\r\n                add     : {\r\n                    add     : function (target, path, value) {\r\n                        var steps = null,\r\n                            proto = null;\r\n                        if (typeof target === 'string' && typeof path === 'string' && value !== void 0) {\r\n                            if (wrappers.prototypes[target]) {\r\n                                steps = path.split('.');\r\n                                proto = wrappers.prototypes[target];\r\n                                steps.forEach(function (property, index) {\r\n                                    if (proto[property] === void 0) {\r\n                                        if (index === steps.length - 1) {\r\n                                            proto[property] = value;\r\n                                        } else {\r\n                                            proto[property] = {};\r\n                                            proto           = proto[property];\r\n                                        }\r\n                                    } else if (typeof proto[property] === 'object' || typeof proto[property] === 'function') {\r\n                                        proto           = proto[property];\r\n                                    } else {\r\n                                        proto[property] = {};\r\n                                        proto           = proto[property];\r\n                                    }\r\n                                });\r\n                                wrappers.prototypes.update[target]();\r\n                            }\r\n                        }\r\n                    },\r\n                    node    : function (path, value) { wrappers.prototypes.add.add('node',      path, value); },\r\n                    nodes   : function (path, value) { wrappers.prototypes.add.add('nodes',     path, value); },\r\n                    array   : function (path, value) { wrappers.prototypes.add.add('array',     path, value); },\r\n                    string  : function (path, value) { wrappers.prototypes.add.add('string',    path, value); },\r\n                    boolean : function (path, value) { wrappers.prototypes.add.add('boolean',   path, value); },\r\n                    object  : function (path, value) { wrappers.prototypes.add.add('object',    path, value); }\r\n                }\r\n            },\r\n            constructors: {\r\n                node    : function (node    ) { this.target = node;     },\r\n                nodes   : function (nodes   ) { this.target = nodes;    },\r\n                array   : function (array   ) { this.target = array;    },\r\n                string  : function (string  ) { this.target = string;   },\r\n                boolean : function (boolean ) { this.target = boolean;  },\r\n                object  : function (object  ) { this.target = object;   }\r\n            },\r\n            build       : function () {\r\n                for (var constructor in wrappers.constructors) {\r\n                    wrappers.constructors[constructor].prototype = wrappers.prototypes[constructor];\r\n                }\r\n                return true;\r\n            }\r\n        };\r\n        patterns        = {\r\n            execution       : function () {\r\n                if (typeof window[config.defaults.patterns.TEST_FUNCTION] === 'function') {\r\n                    system.handle(window[config.defaults.patterns.TEST_FUNCTION], null, config.defaults.patterns.TEST_FUNCTION, this);\r\n                    return true;\r\n                }\r\n                return false;\r\n            },\r\n            modification    : function () {\r\n                function processing(patternsFunction, operation) {\r\n                    if (patternsFunction[operation] instanceof Array && config.defaults.resources.MODULES instanceof Array) {\r\n                        patternsFunction[operation].forEach(function (module) {\r\n                            if (typeof module === 'string') {\r\n                                switch (operation) {\r\n                                    case 'include':\r\n                                        if (config.defaults.resources.MODULES.indexOf(module) === -1) {\r\n                                            config.defaults.resources.MODULES.push(module);\r\n                                        }\r\n                                        break;\r\n                                    case 'exclude':\r\n                                        if (config.defaults.resources.MODULES.indexOf(module) !== -1) {\r\n                                            config.defaults.resources.MODULES.splice(config.defaults.resources.MODULES.indexOf(module), 1);\r\n                                        }\r\n                                        break;\r\n                                }\r\n                            }\r\n                        });\r\n                    }\r\n                };\r\n                var patternsFunction = window[config.defaults.patterns.TEST_FUNCTION];\r\n                if (typeof patternsFunction === 'function') {\r\n                    processing(patternsFunction, 'include');\r\n                    processing(patternsFunction, 'exclude');\r\n                }\r\n            }\r\n        };\r\n        //Private part\r\n        privates        = {\r\n            init            : config.init,\r\n            oop             : {\r\n                objects     : {\r\n                    copy        : oop.objects.copy,\r\n                    extend      : oop.objects.extend,\r\n                    forEach     : oop.objects.forEach,\r\n                    validate    : oop.objects.validate,\r\n                    isValueIn   : oop.objects.isValueIn,\r\n                },\r\n                classes     : {\r\n                    of      : oop.classes.of,\r\n                    create  : oop.classes.create\r\n                },\r\n                namespace   : {\r\n                    create      : oop.namespace.create,\r\n                    get         : oop.namespace.get,\r\n                }\r\n            },\r\n            modules         : {\r\n                attach : modules.attach.safely,\r\n                append : modules.attach.unexpected.safely\r\n            },\r\n            unique          : IDs.id,\r\n            events          : {\r\n                DOM : {\r\n                    add     : events.DOM.add,\r\n                    remove  : events.DOM.remove,\r\n                },\r\n                core: {\r\n                    fire    : events.core.fire,\r\n                    listen  : events.core.listen,\r\n                    register: events.core.register,\r\n                    remove  : events.core.remove,\r\n                }\r\n            },\r\n            overhead        : {\r\n                globaly : {\r\n                    set: overhead.globaly.set,\r\n                    get: overhead.globaly.get,\r\n                    del: overhead.globaly.remove\r\n                },\r\n                objecty : {\r\n                    set: overhead.objecty.set,\r\n                    get: overhead.objecty.get,\r\n                    del: overhead.objecty.remove\r\n                },\r\n                register: {\r\n                    open    : overhead.register.open,\r\n                    add     : overhead.register.add,\r\n                    done    : overhead.register.done,\r\n                    isIn    : overhead.register.isIn,\r\n                    isDone  : overhead.register.isDone,\r\n                    isReady : overhead.register.isReady,\r\n                }\r\n            },\r\n            ajax            : {\r\n                send    : ajax.create,\r\n                methods : {\r\n                    POST    : ajax.settings.methods.POST,\r\n                    GET     : ajax.settings.methods.GET,\r\n                    PUT     : ajax.settings.methods.PUT,\r\n                    DELETE  : ajax.settings.methods.DELETE,\r\n                    OPTIONS : ajax.settings.methods.OPTIONS,\r\n                }\r\n            },\r\n            logs            : {\r\n                parseError  : logs.parseError,\r\n                log         : logs.log,\r\n                types       : logs.types\r\n            },\r\n            callers         : {\r\n                node    : wrappers.callers.node,\r\n                nodes   : wrappers.callers.nodes,\r\n                array   : wrappers.callers.array,\r\n                object  : wrappers.callers.object,\r\n                string  : wrappers.callers.string,\r\n                boolean : wrappers.callers.boolean,\r\n                define  : {\r\n                    node    : wrappers.prototypes.add.node,\r\n                    nodes   : wrappers.prototypes.add.nodes,\r\n                    array   : wrappers.prototypes.add.array,\r\n                    object  : wrappers.prototypes.add.object,\r\n                    string  : wrappers.prototypes.add.string,\r\n                    boolean : wrappers.prototypes.add.boolean,\r\n                }\r\n            },\r\n            resources       : {\r\n                parse   : {\r\n                    css : {\r\n                        stringify: parsing.css.stringify\r\n                    }\r\n                },\r\n                attach  : {\r\n                    css : {\r\n                        connect : system.resources.css.connect,\r\n                        adoption: system.resources.css.adoption,\r\n                    },\r\n                    js  : {\r\n                        connect         : system.resources.js.connect,\r\n                        adoption        : system.resources.js.adoption,\r\n                        getCurrentSRC   : system.resources.js.getCurrentSRC\r\n                    }\r\n                }\r\n            },\r\n            system          : {\r\n                handle      : system.handle,\r\n                convertor   : {\r\n                    UTF8    : {\r\n                        encode  : system.convertor.UTF8.encode,\r\n                        decode  : system.convertor.UTF8.decode,\r\n                    },\r\n                    BASE64  : {\r\n                        encode  : system.convertor.BASE64.encode,\r\n                        decode  : system.convertor.BASE64.decode,\r\n                    },\r\n                },\r\n                url     : {\r\n                    parse   : system.url.parse,\r\n                    restore : system.url.restoreFullURL\r\n                }\r\n            },\r\n            localStorage    : {\r\n                add     : system.localStorage.set,\r\n                get     : system.localStorage.get,\r\n                del     : system.localStorage.del,\r\n                addJSON : system.localStorage.setJSON,\r\n                getJSON : system.localStorage.getJSON,\r\n                reset   : system.localStorage.reset,\r\n            },\r\n            hashes          : {\r\n                get     : hashes.get,\r\n                update  : hashes.update.add\r\n            },\r\n            config          : {\r\n                get: config.get,\r\n                set: config.set\r\n            }\r\n        };\r\n        //Detect core file\r\n        options.files.detect();\r\n        //Settings of flex\r\n        config.init();\r\n        //Module events\r\n        events.core.listen('modules.registry', 'ready', modules.attach.queue.proceed);\r\n        //Build wrappers\r\n        wrappers.build();\r\n        //Add wrappers\r\n        oop.    wrappers.objects();\r\n        arrays. wrappers.array  ();\r\n        //Public methods and properties\r\n        return {\r\n            init            : privates.init,\r\n            oop             : {\r\n                objects     : {\r\n                    copy        : privates.oop.objects.copy,\r\n                    extend      : privates.oop.objects.extend,\r\n                    forEach     : privates.oop.objects.forEach,\r\n                    validate    : privates.oop.objects.validate,\r\n                    isValueIn   : privates.oop.objects.isValueIn,\r\n                },\r\n                classes     : {\r\n                    of      : privates.oop.classes.of,\r\n                    create  : privates.oop.classes.create\r\n                },\r\n                namespace   : {\r\n                    create      : privates.oop.namespace.create,\r\n                    get         : privates.oop.namespace.get,\r\n                }\r\n            },\r\n            modules         : {\r\n                attach: privates.modules.attach,\r\n                append: privates.modules.append\r\n            },\r\n            unique          : privates.unique,\r\n            events          : {\r\n                DOM : {\r\n                    add     : privates.events.DOM.add,\r\n                    remove  : privates.events.DOM.remove,\r\n                },\r\n                core: {\r\n                    fire    : privates.events.core.fire,\r\n                    listen  : privates.events.core.listen,\r\n                    register: privates.events.core.register,\r\n                    remove  : privates.events.core.remove,\r\n                }\r\n            },\r\n            overhead        : {\r\n                globaly : {\r\n                    set: privates.overhead.globaly.set,\r\n                    get: privates.overhead.globaly.get,\r\n                    del: privates.overhead.globaly.del\r\n                },\r\n                objecty : {\r\n                    set: privates.overhead.objecty.set,\r\n                    get: privates.overhead.objecty.get,\r\n                    del: privates.overhead.objecty.del\r\n                },\r\n                register: {\r\n                    open    : privates.overhead.register.open,\r\n                    add     : privates.overhead.register.add,\r\n                    done    : privates.overhead.register.done,\r\n                    isIn    : privates.overhead.register.isIn,\r\n                    isDone  : privates.overhead.register.isDone,\r\n                    isReady : privates.overhead.register.isReady,\r\n                }\r\n            },\r\n            ajax            : {\r\n                send    : privates.ajax.send,\r\n                methods : privates.ajax.methods\r\n            },\r\n            resources       : {\r\n                parse   : {\r\n                    css : {\r\n                        stringify: privates.resources.parse.css.stringify\r\n                    }\r\n                },\r\n                attach  : {\r\n                    css : {\r\n                        connect : privates.resources.attach.css.connect,\r\n                        adoption: privates.resources.attach.css.adoption,\r\n                    },\r\n                    js  : {\r\n                        connect         : privates.resources.attach.js.connect,\r\n                        adoption        : privates.resources.attach.js.adoption,\r\n                        getCurrentSRC   : privates.resources.attach.js.getCurrentSRC\r\n                    }\r\n                }\r\n            },\r\n            localStorage    : {\r\n                add     : privates.localStorage.add,\r\n                get     : privates.localStorage.get,\r\n                del     : privates.localStorage.del,\r\n                addJSON : privates.localStorage.addJSON,\r\n                getJSON : privates.localStorage.getJSON,\r\n                reset   : privates.localStorage.reset,\r\n            },\r\n            system          : {\r\n                handle      : privates.system.handle,\r\n                convertor   : {\r\n                    UTF8    : {\r\n                        encode  : privates.system.convertor.UTF8.encode,\r\n                        decode  : privates.system.convertor.UTF8.decode,\r\n                    },\r\n                    BASE64  : {\r\n                        encode  : privates.system.convertor.BASE64.encode,\r\n                        decode  : privates.system.convertor.BASE64.decode,\r\n                    },\r\n                },\r\n                url         : {\r\n                    parse   : privates.system.url.parse,\r\n                    restore : privates.system.url.restore\r\n                }\r\n            },\r\n            logs            : {\r\n                parseError  : privates.logs.parseError,\r\n                log         : privates.logs.log,\r\n                types       : privates.logs.types\r\n            },\r\n            hashes          : {\r\n                get     : privates.hashes.get,\r\n                update  : privates.hashes.update\r\n            },\r\n            callers         : {\r\n                node    : privates.callers.node,\r\n                nodes   : privates.callers.nodes,\r\n                array   : privates.callers.array,\r\n                object  : privates.callers.object,\r\n                string  : privates.callers.string,\r\n                boolean : privates.callers.boolean,\r\n                define  : {\r\n                    node    : privates.callers.define.node,\r\n                    nodes   : privates.callers.define.nodes,\r\n                    array   : privates.callers.define.array,\r\n                    object  : privates.callers.define.object,\r\n                    string  : privates.callers.define.string,\r\n                    boolean : privates.callers.define.boolean,\r\n                }\r\n            },\r\n            config          : {\r\n                get: privates.config.get,\r\n                set: privates.config.set\r\n            },\r\n            libraries       : {},\r\n            libraries_data  : {},\r\n            registry        : {}\r\n        };\r\n    }());\r\n    //Core of flex is in global space\r\n    window['flex'       ] = new Flex();\r\n    //Default events\r\n    flex.registry.events = {\r\n        system: {\r\n            logs: {\r\n                GROUP       : 'flex.system.logs.messages',\r\n                CRITICAL    : 'critical',\r\n                LOGICAL     : 'logical',\r\n                WARNING     : 'warning',\r\n                NOTIFICATION: 'notification',\r\n                LOGS        : 'log',\r\n                KERNEL_LOGS : 'kernel_logs',\r\n            },\r\n            cache: {\r\n                GROUP               : 'flex.system.cache.events',\r\n                ON_NEW_MODULE       : 'ON_NEW_MODULE',\r\n                ON_UPDATED_MODULE   : 'ON_UPDATED_MODULE',\r\n                ON_NEW_RESOURCE     : 'ON_NEW_RESOURCE',\r\n                ON_UPDATED_RESOURCE : 'ON_UPDATED_RESOURCE',\r\n            }\r\n        }\r\n    };\r\n    //Define short callers\r\n    window['_node'      ] = flex.callers.node;\r\n    window['_nodes'     ] = flex.callers.nodes;\r\n    window['_array'     ] = flex.callers.array;\r\n    window['_object'    ] = flex.callers.object;\r\n    window['_string'    ] = flex.callers.string;\r\n    window['_boolean'   ] = flex.callers.boolean;\r\n    //Other shorts\r\n    window['_append'    ] = flex.modules.append;\r\n}());\r\n/*TODO:\r\n* fix problem with IE9 -> limit for CSS - 4095 selectors per one stylesheet\r\n* Prevent double initialization (and do not damage intellisense)\r\n* parseFunction -> has potential error with parsing params. There are should be array, but not string\r\n*/\r\n","/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\r\n* Copyright � 2015-2016 Dmitry Astafyev. All rights reserved.                                                      *\r\n* This file (core / module) is released under the Apache License (Version 2.0). See [LICENSE] file for details.    *\r\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\r\n\r\n\r\n/// <reference path='intellisense/flex.callers.node.intellisense.js' />\r\n/// <reference path='intellisense/flex.callers.nodes.intellisense.js' />\r\n/// <reference path='intellisense/flex.callers.object.intellisense.js' />\r\n/// <reference path=\"intellisense/flex.intellisense.js\" />\r\n/// <module>\r\n///     <summary>\r\n///         Basic events controller.\r\n///     </summary>\r\n/// </module>\r\n(function () {\r\n    \"use strict\";\r\n    if (flex !== void 0) {\r\n        var protofunction = function () { };\r\n        protofunction.prototype = function () {\r\n            var objects         = null,\r\n                attrs           = null,\r\n                props           = null,\r\n                mutationCross   = null,\r\n                privates        = null,\r\n                callers         = null,\r\n                settings        = null,\r\n                errors          = null,\r\n                support         = null;\r\n            settings        = {\r\n                objects : {\r\n                    STORAGE_PROPERTY    : 'flex.object.bind.storage',\r\n                    HANDLE_ID_PROPERTY  : 'flex.object.bind.handle.id'\r\n                },\r\n                attrs   : {\r\n                    STORAGE_PROPERTY    : 'flex.attrs.bind.storage',\r\n                    NODE_ID_PROPERTY    : 'flex.attrs.bind.node.id',\r\n                    HANDLE_ID_PROPERTY  : 'flex.attrs.bind.handle.id'\r\n                },\r\n                props   : {\r\n                    STORAGE_PROPERTY    : 'flex.props.bind.storage',\r\n                    NODE_ID_PROPERTY    : 'flex.props.bind.node.id',\r\n                    HANDLE_ID_PROPERTY  : 'flex.props.bind.handle.id'\r\n                },\r\n            };\r\n            errors          = {\r\n                objects: {\r\n                    INCORRECT_ARGUMENTS : 'defined incorrect arguments or not defined at all',\r\n                    PROPERTY_IS_CONST   : 'cannot kill bind with property, because property now is constant'\r\n                },\r\n                support: {\r\n                    DEFINE_PROPERTY     : 'flex.binds: Current browser does not support Object.defineProperty',\r\n                    MUTATION_SCANNING   : 'flex.attrs: Current browser does not support any avaliable way to scanning mutation of attributes',\r\n                }\r\n            };\r\n            //Binding properies of objects\r\n            objects         = {\r\n                storage : {\r\n                    create : function (object) {\r\n                        var Storage = function (object) {\r\n                                this.parent     = object;\r\n                                this.binds      = {};\r\n                            };\r\n                        Storage.prototype = {\r\n                            make            : function (property, value) {\r\n                                var self = this;\r\n                                if (!this.binds[property]) {\r\n                                    this.binds[property] = {\r\n                                        current     : value,\r\n                                        previous    : value,\r\n                                        setter      : function (value) { \r\n                                            self.binds[property].previous   = self.binds[property].current;\r\n                                            self.binds[property].current    = value;\r\n                                            for (var id in self.binds[property].handles) {\r\n                                                self.binds[property].handles[id].call(self.parent, self.binds[property].current, self.binds[property].previous, id);\r\n                                            }\r\n                                        },\r\n                                        getter      : function () {\r\n                                            return self.binds[property].current;\r\n                                        },\r\n                                        handles     : {}\r\n                                    };\r\n                                    return true;\r\n                                }\r\n                                return false;\r\n                            },\r\n                            add             : function (property, handle) {\r\n                                var handleID = flex.unique();\r\n                                //Save handle ID in handle\r\n                                handle[settings.objects.HANDLE_ID_PROPERTY] = handleID;\r\n                                //Add handle in storage\r\n                                this.binds[property].handles[handleID]      = handle;\r\n                                //Return handle ID\r\n                                return handleID;\r\n                            },\r\n                            remove          : function (property, id) {\r\n                                if (this.binds[property]) {\r\n                                    if (this.binds[property].handles[id]) {\r\n                                        delete this.binds[property].handles[id];\r\n                                        if (Object.keys(this.binds[property].handles).length === 0) {\r\n                                            return delete this.binds[property];\r\n                                        }\r\n                                    }\r\n                                }\r\n                                return null;\r\n                            },\r\n                            kill            : function (property) {\r\n                                if (this.binds[property]) {\r\n                                    return delete this.binds[property];\r\n                                }\r\n                                return null;\r\n                            },\r\n                            isPropertyReady : function (property){\r\n                                return this.binds[property] !== void 0 ? true : false;\r\n                            },\r\n                            destroy         : function (){\r\n                                if (Object.keys(this.binds).length === 0) {\r\n                                    return delete this.parent[settings.objects.STORAGE_PROPERTY];\r\n                                }\r\n                                return false;\r\n                            },\r\n                            setter          : function (property) {\r\n                                return this.binds[property].setter;\r\n                            },\r\n                            getter          : function (property) {\r\n                                return this.binds[property].getter;\r\n                            }\r\n                        };\r\n                        return new Storage(object);\r\n                    }\r\n                },\r\n                bind    : function (object, property, handle) {\r\n                    /// <signature>\r\n                    ///     <summary>Bind handle to property of object</summary>\r\n                    ///     <param name=\"object\"    type=\"OBJECT\"   >Parent object</param>\r\n                    ///     <param name=\"property\"  type=\"STRING\"   >Property</param>\r\n                    ///     <param name=\"handle\"    type=\"FUNCTION\" >Handle of property changing</param>\r\n                    ///     <returns type=\"STRING\"/>\r\n                    /// </signature>\r\n                    var storage = settings.objects.STORAGE_PROPERTY,\r\n                        value   = null;\r\n                    if (Object.defineProperty) {\r\n                        if (typeof object === 'object' && typeof property === 'string' && typeof handle === 'function') {\r\n                            value = object[property];\r\n                            if (!object[storage]) {\r\n                                //Object isn't listening\r\n                                object[storage] = objects.storage.create(object);\r\n                            }\r\n                            storage = object[storage];\r\n                            //Prepare property if needed\r\n                            if (!storage.isPropertyReady(property)) {\r\n                                //First handle for property\r\n                                if (delete object[property]) {\r\n                                    //Prepare property storage\r\n                                    storage.make(property, value);\r\n                                    //Bind\r\n                                    Object.defineProperty(object, property, {\r\n                                        get         : storage.getter(property),\r\n                                        set         : storage.setter(property),\r\n                                        configurable: true\r\n                                    });\r\n                                } else {\r\n                                    storage.destroy();\r\n                                    return false;\r\n                                }\r\n                            }\r\n                            //Add handle\r\n                            return storage.add(property, handle);\r\n                        }\r\n                        throw 'object.bind::' + errors.objects.INCORRECT_ARGUMENTS;\r\n                    }\r\n                },\r\n                unbind  : function (object, property, id) {\r\n                    /// <signature>\r\n                    ///     <summary>Unbind handle to property of object by handle's ID</summary>\r\n                    ///     <param name=\"object\"    type=\"OBJECT\">Parent object</param>\r\n                    ///     <param name=\"property\"  type=\"STRING\">Property</param>\r\n                    ///     <param name=\"id\"        type=\"STRING\">ID of handle</param>\r\n                    ///     <returns type=\"BOOLEAN\"/>\r\n                    /// </signature>\r\n                    var storage = settings.objects.STORAGE_PROPERTY,\r\n                        value   = null;\r\n                    if (typeof object === 'object' && typeof property === 'string' && typeof id === 'string') {\r\n                        if (object[storage]) {\r\n                            storage = object[storage];\r\n                            if (storage.isPropertyReady(property)) {\r\n                                value = object[property];\r\n                                storage.remove(property, id);\r\n                                if (!storage.isPropertyReady(property)) {\r\n                                    try {\r\n                                        delete object[property];\r\n                                        object[property] = value;\r\n                                        return true;\r\n                                    } catch (e) {\r\n                                        throw 'object.unbind::' + errors.objects.PROPERTY_IS_CONST;\r\n                                        return false;\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                        return null;\r\n                    }\r\n                    throw 'object.unbind::' + errors.objects.INCORRECT_ARGUMENTS;\r\n                },\r\n                kill    : function (object, property) {\r\n                    /// <signature>\r\n                    ///     <summary>Unbind all handles, which was attached to property of object</summary>\r\n                    ///     <param name=\"object\"    type=\"OBJECT\">Parent object</param>\r\n                    ///     <param name=\"property\"  type=\"STRING\">Property</param>\r\n                    ///     <returns type=\"BOOLEAN\"/>\r\n                    /// </signature>\r\n                    var storage = settings.objects.STORAGE_PROPERTY,\r\n                        value   = null;\r\n                    if (typeof object === 'object' && typeof property === 'string') {\r\n                        if (object[storage]) {\r\n                            value   = object[property];\r\n                            storage = object[storage];\r\n                            try {\r\n                                if (storage.kill(property)) {\r\n                                    delete object[property];\r\n                                    object[property] = value;\r\n                                    return true;\r\n                                } else {\r\n                                    return false;\r\n                                }\r\n                            } catch (e) {\r\n                                throw 'object.kill::' + errors.objects.PROPERTY_IS_CONST;\r\n                                return false;\r\n                            }\r\n                        }\r\n                        return null;\r\n                    }\r\n                    throw 'object.kill::' + errors.objects.INCORRECT_ARGUMENTS;\r\n                },\r\n            };\r\n            //Binding attributes of nodes\r\n            attrs           = {\r\n                storage : {\r\n                    create : function (node) {\r\n                        var Storage = function (node) {\r\n                                this.node       = node;\r\n                                this.binds      = {};\r\n                                this._destroy   = null;\r\n                            };\r\n                        Storage.prototype = {\r\n                            init            : function (){\r\n                                this._destroy = mutationCross.attach(this.node,\r\n                                    this.handle,\r\n                                    this,\r\n                                    {\r\n                                        attributes              : true,\r\n                                        childList               : false,\r\n                                        subtree                 : true,\r\n                                        characterData           : true,\r\n                                        attributeOldValue       : false,\r\n                                        characterDataOldValue   : false\r\n                                    }\r\n                                );\r\n                            },\r\n                            handle          : function (attr, mutation) {\r\n                                var self        = this,\r\n                                    attr_value  = null,\r\n                                    target      = mutation.target,\r\n                                    node_id     = target[settings.attrs.NODE_ID_PROPERTY] !== void 0 ? target[settings.attrs.NODE_ID_PROPERTY] : null;\r\n                                if (node_id !== null && this.binds[node_id] !== void 0 && this.binds[node_id][attr] !== void 0) {\r\n                                    attr_value = target.getAttribute(attr);\r\n                                    if (attr_value !== this.binds[node_id][attr].current) {\r\n                                        this.binds[node_id][attr].previous  = this.binds[node_id][attr].current;\r\n                                        this.binds[node_id][attr].current   = attr_value;\r\n                                        _object(this.binds[node_id][attr].handles).forEach(function (id, handle) {\r\n                                            handle.call(target, attr, self.binds[node_id][attr].current, self.binds[node_id][attr].previous, mutation, id);\r\n                                        });\r\n                                    }\r\n                                }\r\n                            },\r\n                            make            : function (node, attr) {\r\n                                var node_id                 = this.setID(node);\r\n                                this.binds[node_id]         = this.binds[node_id]       === void 0 ? {} : this.binds[node_id];\r\n                                this.binds[node_id][attr]   = this.binds[node_id][attr] === void 0 ?\r\n                                    {\r\n                                        handles : {},\r\n                                        previous: null,\r\n                                        current : node.getAttribute(attr)\r\n                                    } : this.binds[node_id][attr];\r\n                            },\r\n                            add             : function (node, attr, handle) {\r\n                                var node_id     = node[settings.attrs.NODE_ID_PROPERTY],\r\n                                    handle_id   = flex.unique();\r\n                                //Save handle ID in handle\r\n                                handle[settings.attrs.HANDLE_ID_PROPERTY] = handle_id;\r\n                                //Add handle in storage\r\n                                this.binds[node_id][attr].handles[handle_id] = handle;\r\n                                //Return handle ID\r\n                                return handle_id;\r\n                            },\r\n                            remove          : function (node, attr, id) {\r\n                                var result  = null,\r\n                                    node_id = node[settings.attrs.NODE_ID_PROPERTY];\r\n                                if (this.binds[node_id] !== void 0 && this.binds[node_id][attr] !== void 0) {\r\n                                    if (this.binds[node_id][attr].handles[id] !== void 0) {\r\n                                        delete this.binds[node_id][attr].handles[id];\r\n                                        if (Object.keys(this.binds[node_id][attr].handles).length === 0) {\r\n                                            result = delete this.binds[node_id][attr];\r\n                                            if (Object.keys(this.binds[node_id]).length === 0) {\r\n                                                result = delete this.binds[node_id];\r\n                                                this.destroy();\r\n                                            }\r\n                                            return result;\r\n                                        }\r\n                                    }\r\n                                }\r\n                                return result;\r\n                            },\r\n                            kill            : function (node, attr) {\r\n                                var result  = null,\r\n                                    node_id = node[settings.attrs.NODE_ID_PROPERTY];\r\n                                if (this.binds[node_id] !== void 0 && this.binds[node_id][attr] !== void 0) {\r\n                                    result = delete this.binds[node_id][attr];\r\n                                    if (Object.keys(this.binds[node_id]).length === 0) {\r\n                                        result = delete this.binds[node_id];\r\n                                        this.destroy();\r\n                                    }\r\n                                    return result;\r\n                                }\r\n                                return result;\r\n                            },\r\n                            setID           : function (node){\r\n                                if (node[settings.attrs.NODE_ID_PROPERTY] === void 0) {\r\n                                    node[settings.attrs.NODE_ID_PROPERTY] = flex.unique();\r\n                                }\r\n                                return node[settings.attrs.NODE_ID_PROPERTY];\r\n                            },\r\n                            destroy         : function (){\r\n                                if (Object.keys(this.binds).length === 0) {\r\n                                    this._destroy();\r\n                                    return delete this.node[settings.attrs.STORAGE_PROPERTY];\r\n                                }\r\n                                return false;\r\n                            },\r\n                        };\r\n                        return new Storage(node);\r\n                    }\r\n                },\r\n                bind    : function (node, attr, handle, parent) {\r\n                    /// <signature>\r\n                    ///     <summary>Bind handle to attribute of node</summary>\r\n                    ///     <param name=\"node\"      type=\"DOMNode\"  >Target node</param>\r\n                    ///     <param name=\"attr\"      type=\"STRING\"   >Attribute name</param>\r\n                    ///     <param name=\"handle\"    type=\"FUNCTION\" >Handle of attribute changing</param>\r\n                    ///     <returns type=\"STRING\"/>\r\n                    /// </signature>\r\n                    var storage = settings.attrs.STORAGE_PROPERTY,\r\n                        parent  = parent !== void 0 ? parent : node;\r\n                    if (mutationCross.attach !== null) {\r\n                        if (node !== void 0 && typeof attr === 'string' && typeof handle === 'function') {\r\n                            if (node.nodeName) {\r\n                                if (!parent[storage]) {\r\n                                    //Node isn't listening\r\n                                    parent[storage] = attrs.storage.create(parent);\r\n                                    parent[storage].init();\r\n                                }\r\n                                storage = parent[storage];\r\n                                //Prepare attr if needed\r\n                                storage.make(node, attr);\r\n                                //Add handle\r\n                                return storage.add(node, attr, handle);\r\n                            }\r\n                        }\r\n                        throw 'attrs.bind::' + errors.objects.INCORRECT_ARGUMENTS;\r\n                    }\r\n                },\r\n                unbind  : function (node, attr, id, parent) {\r\n                    /// <signature>\r\n                    ///     <summary>Unbind handle to attribute of node by handle's ID</summary>\r\n                    ///     <param name=\"node\"      type=\"DOMNode\"  >Target node</param>\r\n                    ///     <param name=\"attr\"      type=\"STRING\"   >Attribute name</param>\r\n                    ///     <param name=\"id\"        type=\"STRING\"   >ID of handle</param>\r\n                    ///     <returns type=\"BOOLEAN\"/>\r\n                    /// </signature>\r\n                    var storage = settings.attrs.STORAGE_PROPERTY,\r\n                        parent  = parent !== void 0 ? parent : node;\r\n                    if (typeof node === 'object' && typeof attr === 'string' && typeof id === 'string') {\r\n                        if (parent[storage]) {\r\n                            storage = parent[storage];\r\n                            return storage.remove(node, attr, id);\r\n                        }\r\n                        return null;\r\n                    }\r\n                    throw 'attrs.unbind::' + errors.objects.INCORRECT_ARGUMENTS;\r\n                },\r\n                kill    : function (node, attr, parent) {\r\n                    /// <signature>\r\n                    ///     <summary>Unbind all handles, which was attached to attribute of node</summary>\r\n                    ///     <param name=\"node\"      type=\"DOMNode\"  >Target node</param>\r\n                    ///     <param name=\"attr\"      type=\"STRING\"   >Attribute name</param>\r\n                    ///     <returns type=\"BOOLEAN\"/>\r\n                    /// </signature>\r\n                    var storage = settings.attrs.STORAGE_PROPERTY,\r\n                        parent  = parent !== void 0 ? parent : node;\r\n                    if (typeof node === 'object' && typeof attr === 'string') {\r\n                        if (parent[storage]) {\r\n                            storage = parent[storage];\r\n                            return storage.kill(node, attr);\r\n                        }\r\n                        return null;\r\n                    }\r\n                    throw 'attrs.unbind::' + errors.objects.INCORRECT_ARGUMENTS;\r\n                },\r\n            };\r\n            //Binding properties of nodes\r\n            props           = {\r\n                storage : {\r\n                    create : function (node) {\r\n                        var Storage = function (node) {\r\n                                this.node       = node;\r\n                                this.binds      = {};\r\n                                this._destroy   = null;\r\n                            };\r\n                        Storage.prototype = {\r\n                            init            : function (){\r\n                                this._destroy = mutationCross.attach(\r\n                                    this.node,\r\n                                    this.handle,\r\n                                    this,\r\n                                    {\r\n                                        attributes              : true,\r\n                                        childList               : true,\r\n                                        subtree                 : true,\r\n                                        characterData           : true,\r\n                                        attributeOldValue       : false,\r\n                                        characterDataOldValue   : false\r\n                                    }\r\n                                );\r\n                            },\r\n                            prop            : function (node, prop){\r\n                                var res = null;\r\n                                prop.split('.').forEach(function (step, index, steps) {\r\n                                    if (node[step] !== void 0 && index < steps.length - 1) {\r\n                                        node = node[step];\r\n                                    } else if (node[step] !== void 0 && index === steps.length - 1) {\r\n                                        res = {\r\n                                            parent  : node,\r\n                                            name    : step\r\n                                        };\r\n                                    }\r\n                                });\r\n                                return res;\r\n                            },\r\n                            handle          : function (attr, mutation) {\r\n                                var self        = this,\r\n                                    target      = mutation.target,\r\n                                    node_id     = target[settings.props.NODE_ID_PROPERTY] !== void 0 ? target[settings.props.NODE_ID_PROPERTY] : null;\r\n                                if (node_id !== null && this.binds[node_id] !== void 0) {\r\n                                    _object(this.binds[node_id]).forEach(function (prop, bind_data) {\r\n                                        var prop_value = bind_data.parent[prop];\r\n                                        if (prop_value !== bind_data.current) {\r\n                                            bind_data.previous    = bind_data.current;\r\n                                            bind_data.current     = prop_value;\r\n                                            _object(bind_data.handles).forEach(function (id, handle) {\r\n                                                handle.call(bind_data.parent, prop, bind_data.current, bind_data.previous, mutation, id);\r\n                                            });\r\n                                        }\r\n                                    });\r\n                                }\r\n                            },\r\n                            make            : function (node, prop) {\r\n                                var node_id                     = this.setID(node),\r\n                                    prop                        = this.prop(node, prop);\r\n                                this.binds[node_id]             = this.binds[node_id] === void 0 ? {} : this.binds[node_id];\r\n                                this.binds[node_id][prop.name]  = this.binds[node_id][prop.name] === void 0 ?\r\n                                    {\r\n                                        handles : {},\r\n                                        previous: null,\r\n                                        current : prop.parent[prop.name],\r\n                                        parent  : prop.parent\r\n                                    } : this.binds[node_id][prop.name];\r\n                            },\r\n                            add             : function (node, prop, handle) {\r\n                                var handle_id   = flex.unique(),\r\n                                    node_id     = node[settings.props.NODE_ID_PROPERTY] !== void 0 ? node[settings.props.NODE_ID_PROPERTY] : null,\r\n                                    prop        = this.prop(node, prop);\r\n                                //Save handle ID in handle\r\n                                handle[settings.props.HANDLE_ID_PROPERTY] = handle_id;\r\n                                //Add handle in storage\r\n                                this.binds[node_id][prop.name].handles[handle_id] = handle;\r\n                                //Return handle ID\r\n                                return handle_id;\r\n                            },\r\n                            remove          : function (node, prop, id) {\r\n                                var result  = null,\r\n                                    node_id = node[settings.props.NODE_ID_PROPERTY] !== void 0 ? node[settings.props.NODE_ID_PROPERTY] : null,\r\n                                    prop    = this.prop(node, prop);\r\n                                if (node_id !== null && this.binds[node_id] !== void 0 && this.binds[node_id][prop.name] !== void 0) {\r\n                                    if (this.binds[node_id][prop.name].handles[id]) {\r\n                                        delete this.binds[node_id][prop.name].handles[id];\r\n                                        if (Object.keys(this.binds[node_id][prop.name].handles).length === 0) {\r\n                                            result = delete this.binds[node_id][prop.name];\r\n                                            if (Object.keys(this.binds[node_id]).length === 0) {\r\n                                                result = delete this.binds[node_id];\r\n                                                this.destroy();\r\n                                            }\r\n                                        }\r\n                                    }\r\n                                }\r\n                                return result;\r\n                            },\r\n                            kill            : function (node, prop) {\r\n                                var result  = null,\r\n                                    node_id = node[settings.props.NODE_ID_PROPERTY] !== void 0 ? node[settings.props.NODE_ID_PROPERTY] : null,\r\n                                    prop    = this.prop(node, prop);\r\n                                if (node_id !== null && this.binds[node_id] !== void 0 && this.binds[node_id][prop.name] !== void 0) {\r\n                                    result = delete this.binds[node_id][prop.name];\r\n                                    if (Object.keys(this.binds[node_id]).length === 0) {\r\n                                        result = delete this.binds[node_id];\r\n                                        this.destroy();\r\n                                    }\r\n                                }\r\n                                return result;\r\n                            },\r\n                            setID           : function (node){\r\n                                if (node[settings.props.NODE_ID_PROPERTY] === void 0) {\r\n                                    node[settings.props.NODE_ID_PROPERTY] = flex.unique();\r\n                                }\r\n                                return node[settings.props.NODE_ID_PROPERTY];\r\n                            },\r\n                            destroy         : function (){\r\n                                if (Object.keys(this.binds).length === 0) {\r\n                                    this._destroy();\r\n                                    return delete this.node[settings.props.STORAGE_PROPERTY];\r\n                                }\r\n                                return false;\r\n                            },\r\n                        };\r\n                        return new Storage(node);\r\n                    }\r\n                },\r\n                bind    : function (node, prop, handle, parent) {\r\n                    /// <signature>\r\n                    ///     <summary>Bind handle to prop of node</summary>\r\n                    ///     <param name=\"node\"      type=\"DOMNode\"  >Target node</param>\r\n                    ///     <param name=\"prop\"      type=\"STRING\"   >Prop name</param>\r\n                    ///     <param name=\"handle\"    type=\"FUNCTION\" >Handle of prop changing</param>\r\n                    ///     <returns type=\"STRING\"/>\r\n                    /// </signature>\r\n                    function isValidProp(node, prop) {\r\n                        var res = false;\r\n                        prop.split('.').forEach(function (step, index, steps) {\r\n                            if (node[step] !== void 0 && index < steps.length - 1) {\r\n                                node = node[step];\r\n                            } else if (node[step] !== void 0 && index === steps.length - 1) {\r\n                                res = true;\r\n                            }\r\n                        });\r\n                        return res;\r\n                    };\r\n                    var storage = settings.props.STORAGE_PROPERTY,\r\n                        parent  = parent !== void 0 ? parent : node;\r\n                    if (mutationCross.attach !== null) {\r\n                        if (node !== void 0 && typeof prop === 'string' && typeof handle === 'function') {\r\n                            if (node.nodeName !== void 0) {\r\n                                if (isValidProp(node, prop)) {\r\n                                    if (parent[storage] === void 0) {\r\n                                        //Node isn't listening\r\n                                        parent[storage] = props.storage.create(parent);\r\n                                        parent[storage].init();\r\n                                    }\r\n                                    storage = parent[storage];\r\n                                    storage.make(node, prop);\r\n                                    //Add handle\r\n                                    return storage.add(node, prop, handle);\r\n                                }\r\n                            }\r\n                        }\r\n                        throw 'props.bind::' + errors.objects.INCORRECT_ARGUMENTS;\r\n                    }\r\n                },\r\n                unbind  : function (node, prop, id, parent) {\r\n                    /// <signature>\r\n                    ///     <summary>Unbind handle to prop of node by handle's ID</summary>\r\n                    ///     <param name=\"node\"      type=\"DOMNode\"  >Target node</param>\r\n                    ///     <param name=\"prop\"      type=\"STRING\"   >Prop name</param>\r\n                    ///     <param name=\"id\"        type=\"STRING\"   >ID of handle</param>\r\n                    ///     <returns type=\"BOOLEAN\"/>\r\n                    /// </signature>\r\n                    var storage = settings.props.STORAGE_PROPERTY,\r\n                        parent  = parent !== void 0 ? parent : node;\r\n                    if (typeof node === 'object' && typeof prop === 'string' && typeof id === 'string') {\r\n                        if (parent[storage]) {\r\n                            storage = parent[storage];\r\n                            return storage.remove(node, prop, id);\r\n                        }\r\n                        return null;\r\n                    }\r\n                    throw 'props.unbind::' + errors.objects.INCORRECT_ARGUMENTS;\r\n                },\r\n                kill    : function (node, prop, parent) {\r\n                    /// <signature>\r\n                    ///     <summary>Unbind all handles, which was attached to prop of node</summary>\r\n                    ///     <param name=\"node\"      type=\"DOMNode\"  >Target node</param>\r\n                    ///     <param name=\"prop\"      type=\"STRING\"   >Prop name</param>\r\n                    ///     <returns type=\"BOOLEAN\"/>\r\n                    /// </signature>\r\n                    var storage = settings.props.STORAGE_PROPERTY,\r\n                        parent  = parent !== void 0 ? parent : node;\r\n                    if (typeof node === 'object' && typeof prop === 'string') {\r\n                        if (parent[storage]) {\r\n                            storage = parent[storage];\r\n                            return storage.kill(node, prop);\r\n                        }\r\n                        return null;\r\n                    }\r\n                    throw 'props.unbind::' + errors.objects.INCORRECT_ARGUMENTS;\r\n                },\r\n            };\r\n            mutationCross   = {\r\n                init                : function () {\r\n                    mutationCross.attach = mutationCross.attach();\r\n                },\r\n                //Modern\r\n                mutationObserver    : function (node, handle, self, parameters) {\r\n                    var MutationObserver    = window.MutationObserver || window.WebKitMutationObserver,\r\n                        observer            = null;\r\n                    observer = new MutationObserver(function (mutations) {\r\n                        mutations.forEach(function (mutation) {\r\n                            handle.call(self, mutation.attributeName, mutation);\r\n                        });\r\n                    });\r\n                    observer.observe(node, parameters);\r\n                    //Return distroy / disconnect method\r\n                    return function () {\r\n                        observer.disconnect();\r\n                    };\r\n                },\r\n                //Old\r\n                DOMAttrModified     : function (node, handle, self) {\r\n                    flex.events.DOM.add(node, 'DOMAttrModified', function (mutation) {\r\n                        handle.call(self, event.attrName, mutation);\r\n                    });\r\n                    //Return distroy / disconnect method\r\n                    return function () {\r\n                        //Do nothing\r\n                    };\r\n                },\r\n                //IE < 11\r\n                onPropertyChange    : function (node, handle, self) {\r\n                    flex.events.DOM.add(node, 'propertychange', function (mutation) {\r\n                        handle.call(self, event.attributeName, mutation);\r\n                    });\r\n                    //Return distroy / disconnect method\r\n                    return function () {\r\n                        //Do nothing\r\n                    };\r\n                },\r\n                //Common accessor to browser API\r\n                attach              : function () {\r\n                    function isDOMAttrModified() {\r\n                        var node = document.createElement('DIV'),\r\n                            flag = false;\r\n                        flex.events.DOM.add(node, 'DOMAttrModified', function () {\r\n                            flag = true;\r\n                        });\r\n                        node.setAttribute('id', 'test');\r\n                        return flag;\r\n                    };\r\n                    if (window.MutationObserver || window.WebKitMutationObserver) {\r\n                        return mutationCross.mutationObserver;\r\n                    }\r\n                    if (isDOMAttrModified()) {\r\n                        return mutationCross.DOMAttrModified;\r\n                    }\r\n                    if ('onpropertychange' in document.body) {\r\n                        return mutationCross.onPropertyChange;\r\n                    }\r\n                    return null;\r\n                }\r\n            };\r\n            callers         = {\r\n                init: function () {\r\n                    flex.callers.define.object('binding.bind',          function (property, handle) {\r\n                        return objects.bind(this.target, property, handle);\r\n                    });\r\n                    flex.callers.define.object('binding.unbind',        function (property, id) {\r\n                        return objects.unbind(this.target, property, id);\r\n                    });\r\n                    flex.callers.define.object('binding.kill',          function (property) {\r\n                        return objects.kill(this.target, property);\r\n                    });\r\n\r\n                    flex.callers.define.node('bindingAttrs.bind',       function (attr, handle, parent) {\r\n                        return attrs.bind(this.target, attr, handle, parent);\r\n                    });\r\n                    flex.callers.define.node('bindingAttrs.unbind',     function (attr, id, parent) {\r\n                        return attrs.unbind(this.target, attr, id, parent);\r\n                    });\r\n                    flex.callers.define.node('bindingAttrs.kill',       function (attr, parent) {\r\n                        return attrs.kill(this.target, attr, parent);\r\n                    });\r\n\r\n                    flex.callers.define.nodes('bindingAttrs.bind',      function (attr, handle, parent) {\r\n                        var result = [];\r\n                        SelectorClass();\r\n                        Array.prototype.forEach.call(this.target,       function (target) {\r\n                            result.push(attrs.bind(target, attr, handle, parent));\r\n                        });\r\n                        return result;\r\n                    });\r\n                    flex.callers.define.nodes('bindingAttrs.unbind',    function (attr, id, parent) {\r\n                        var result = [];\r\n                        SelectorClass();\r\n                        Array.prototype.forEach.call(this.target,       function (target) {\r\n                            result.push(attrs.unbind(target, attr, id, parent));\r\n                        });\r\n                        return result;\r\n                    });\r\n                    flex.callers.define.nodes('bindingAttrs.kill',      function (attr, parent) {\r\n                        var result = [];\r\n                        SelectorClass();\r\n                        Array.prototype.forEach.call(this.target,       function (target) {\r\n                            result.push(attrs.kill(target, attr, parent));\r\n                        });\r\n                        return result;\r\n                    });\r\n\r\n                    flex.callers.define.node('bindingProps.bind',       function (prop, handle, parent) {\r\n                        return props.bind(this.target, prop, handle, parent);\r\n                    });\r\n                    flex.callers.define.node('bindingProps.unbind',     function (prop, id, parent) {\r\n                        return props.unbind(this.target, prop, id, parent);\r\n                    });\r\n                    flex.callers.define.node('bindingProps.kill',       function (prop, parent) {\r\n                        return props.kill(this.target, prop, parent);\r\n                    });\r\n\r\n                    flex.callers.define.nodes('bindingProps.bind',      function (prop, handle, parent) {\r\n                        var result = [];\r\n                        SelectorClass();\r\n                        Array.prototype.forEach.call(this.target, function (target) {\r\n                            result.push(props.bind(target, prop, handle, parent));\r\n                        });\r\n                        return result;\r\n                    });\r\n                    flex.callers.define.nodes('bindingProps.unbind',    function (prop, id, parent) {\r\n                        var result = [];\r\n                        SelectorClass();\r\n                        Array.prototype.forEach.call(this.target, function (target) {\r\n                            result.push(props.unbind(target, prop, id, parent));\r\n                        });\r\n                        return result;\r\n                    });\r\n                    flex.callers.define.nodes('bindingProps.kill',      function (prop, parent) {\r\n                        var result = [];\r\n                        SelectorClass();\r\n                        Array.prototype.forEach.call(this.target, function (target) {\r\n                            result.push(props.kill(target, prop, parent));\r\n                        });\r\n                        return result;\r\n                    });\r\n                }\r\n            };\r\n            support         = {\r\n                check   : function () {\r\n                    if (!Object.defineProperty) {\r\n                        throw errors.support.DEFINE_PROPERTY;\r\n                    }\r\n                    if (mutationCross.attach === null) {\r\n                        throw errors.support.MUTATION_SCANNING;\r\n                    }\r\n                }\r\n            };\r\n            //Init \r\n            mutationCross.init();\r\n            //Initialization of callers\r\n            callers.init();\r\n            //Check support\r\n            support.check();\r\n            //Public part\r\n            privates        = {\r\n            };\r\n            return {\r\n            };\r\n        };\r\n        flex.modules.attach({\r\n            name            : 'binds',\r\n            protofunction   : protofunction,\r\n        });\r\n    }\r\n}());","/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\r\n* Copyright � 2015-2016 Dmitry Astafyev. All rights reserved.                                                      *\r\n* This file (core / module) is released under the Apache License (Version 2.0). See [LICENSE] file for details.    *\r\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\r\n\r\n\r\n/// <reference path='intellisense/flex.callers.node.intellisense.js' />\r\n/// <reference path='intellisense/flex.callers.nodes.intellisense.js' />\r\n/// <reference path='intellisense/flex.callers.object.intellisense.js' />\r\n/// <reference path=\"intellisense/flex.intellisense.js\" />\r\n/// <module>\r\n///     <summary>\r\n///         Basic events controller.\r\n///     </summary>\r\n/// </module>\r\n(function () {\r\n    \"use strict\";\r\n    if (flex !== void 0) {\r\n        var protofunction = function () { };\r\n        protofunction.prototype = function () {\r\n            var instance    = null,\r\n                DOM         = null,\r\n                callers     = null,\r\n                privates    = null;\r\n            DOM         = function () {\r\n                if (instance === null) {\r\n                    instance            = function () { };\r\n                    instance.prototype  = (function () {\r\n                        var tools       = null,\r\n                            touches     = null,\r\n                            storage     = null,\r\n                            settings    = {\r\n                                STORAGE_NAME                : 'FlexEventsStorage',\r\n                                HANDLE_EVENT_ID_PROPERTY    : 'FlexEventIDProrerty'\r\n                            },\r\n                            Handle      = null,\r\n                            privates    = null;\r\n                        //Handle class\r\n                        Handle              = function (id, handle, once, touch, safely) {\r\n                            this.id             = id;\r\n                            this.handle         = handle;\r\n                            this.once           = once;\r\n                            this.touch          = touch;\r\n                            this.safely         = safely;\r\n                            this.remove         = false;\r\n                            this.interaction    = null;\r\n                            this.working        = false;\r\n                            this.device         = null;\r\n                        };\r\n                        Handle.prototype    = {\r\n                            launch      : function (context, event) {\r\n                                var error = null;\r\n                                if (this.remove === false && this.isDouble(event) === false) {\r\n                                    try {\r\n                                        this.working = true;\r\n                                        this.remove = this.once;\r\n                                        return this.handle.call(context, event);\r\n                                    } catch (e) {\r\n                                        if (this.safely) {\r\n                                            this.error(event, e);\r\n                                            return null;\r\n                                        } else {\r\n                                            error = e;\r\n                                        }\r\n                                    } finally {\r\n                                        this.working = false;\r\n                                        if (this.once === true && this.remove === false) {\r\n                                            flex.logs.log(\r\n                                                'Unexpected behavior DOM.fire. Flag [once] is true, but [remove] is false; \\n\\r ' +\r\n                                                '>event id' + this.id,\r\n                                                flex.logs.types.WARNING\r\n                                            );\r\n                                        }\r\n                                    }\r\n                                    if (error !== null) {\r\n                                        throw error;\r\n                                    }\r\n                                }\r\n                                return null;\r\n                            },\r\n                            isWorking   : function(){\r\n                                return this.working;\r\n                            },\r\n                            isRemoving  : function(){\r\n                                return this.remove;\r\n                            },\r\n                            toRemove    : function(){\r\n                                this.remove = true;\r\n                            },\r\n                            error       : function (event, e) {\r\n                                flex.logs.log(\r\n                                    \"event: \" + event.type + \"; ID: \" + this.id + \"; generated error: \\r\\n\" + flex.logs.parseError(e),\r\n                                    flex.logs.types.WARNING\r\n                                );\r\n                            },\r\n                            isDouble   : function (event) {\r\n                                var device = '';\r\n                                if (event.flex.singleTouch) {\r\n                                    device = 'touch';\r\n                                } else {\r\n                                    device = 'mouse';\r\n                                }\r\n                                this.device = (this.device === null ? device : this.device);\r\n                                return this.device === device ? false : true;\r\n                            }\r\n                        };\r\n                        //Methods\r\n                        function add(parameters) {\r\n                            /// <summary>\r\n                            /// Attach to element event handle\r\n                            /// </summary>\r\n                            /// <param name=\"parameters\" type=\"Object\">Events parameters:               &#13;&#10;\r\n                            /// {   [node]      element,                                                &#13;&#10;\r\n                            ///     [string]    name,                                                   &#13;&#10;\r\n                            ///     [function]  handle,                                                 &#13;&#10;\r\n                            ///     [string]    id     (optional),                                      &#13;&#10;\r\n                            ///     [boolean]   once   (optional, def:false) -> true - remove after handle will be once used}</param>\r\n                            ///     [boolean]   touch  (optional, def:false) -> true - try find analog of touch event and attach it}</param>\r\n                            ///     [boolean]   safely (optional, def:false) -> true - will block all throws and show log in console instead.}</param>\r\n                            /// <returns type=\"boolean\">true if success and false if fail</returns>\r\n                            function validate(parameters) {\r\n                                parameters.element  = parameters.element        !== void 0      ? parameters.element    : null;\r\n                                parameters.name     = typeof parameters.name    === 'string'    ? parameters.name       : null;\r\n                                parameters.handle   = typeof parameters.handle  === 'function'  ? parameters.handle     : null;\r\n                                parameters.id       = typeof parameters.id      === 'string'    ? parameters.id         : flex.unique();\r\n                                parameters.once     = typeof parameters.once    === 'boolean'   ? parameters.once       : false;\r\n                                parameters.touch    = typeof parameters.touch   === 'boolean'   ? parameters.touch      : true;\r\n                                parameters.safely   = typeof parameters.safely  === 'boolean'   ? parameters.safely     : false;\r\n                                //Prevent double attaching for touch events\r\n                                if (touches.has(parameters.name) === false) {\r\n                                    parameters.touch = false;\r\n                                }\r\n                                return parameters;\r\n                            };\r\n                            var parameters  = validate(parameters),\r\n                                handles     = null;\r\n                            if (parameters.element !== null && parameters.handle !== null && parameters.name !== null) {\r\n                                handles = storage.get(parameters.element, false);\r\n                                if (handles !== null) {\r\n                                    handles = tools.buildCommonHandle(parameters.element, parameters.name, handles, parameters.touch, parameters.safely);\r\n                                    if (handles instanceof Array) {\r\n                                        handles.push(\r\n                                            new Handle(parameters.id, parameters.handle, parameters.once, parameters.touch)\r\n                                        );\r\n                                        return parameters.id;\r\n                                    }\r\n                                }\r\n                            }\r\n                            return null;\r\n                        };\r\n                        function fire(element, event, element_id, original_type, safely) {\r\n                            /// <summary>\r\n                            /// Common handle of events\r\n                            /// </summary>\r\n                            /// <param name=\"element\" type=\"node\"       >Element        </param>\r\n                            /// <param name=\"event\" type=\"string\"       >Event name     </param>\r\n                            /// <param name=\"element_id\" type=\"string\"  >ID of event    </param>\r\n                            /// <returns type=\"boolean\">true if success and false if fail</returns>\r\n                            var event               = event !== void 0 ? event : tools.fixEvent(),\r\n                                handles_storage     = storage.get(this, true),\r\n                                handles             = null,\r\n                                interaction         = flex.unique(),\r\n                                isPrevent           = null,\r\n                                self                = this,\r\n                                needRemoveChecking  = false,\r\n                                event_type          = (event.type !== original_type ? original_type : event.type),\r\n                                error               = null;\r\n                            if (event && element && element_id && handles_storage !== null) {\r\n                                event = tools.unificationEvent(event);\r\n                                if (handles_storage[event_type]) {\r\n                                    handles_storage = handles_storage[event_type];\r\n                                    if (handles_storage.element_id === element_id) {\r\n                                        handles = handles_storage.handles;\r\n                                        try {\r\n                                            Array.prototype.forEach.call(\r\n                                                handles,\r\n                                                function (handle) {\r\n                                                    if (handle.interaction !== interaction) {\r\n                                                        handle.interaction  = interaction;\r\n                                                        isPrevent           = handle.launch(self, event);\r\n                                                        needRemoveChecking  = needRemoveChecking === true ? true : (handle.isRemoving() === false ? false : true);\r\n                                                        if (isPrevent === false) {//It's correct. Here false means prevent other handles\r\n                                                            event.flex.stop();\r\n                                                            flex.logs.log(\r\n                                                                'Break event in DOM.fire; \\n\\r ' +\r\n                                                                '>event: '      + event.type    + '\\n\\r ' +\r\n                                                                '>handle_id'    + handle.id     + '\\n\\r ' +\r\n                                                                '>element_id'   + element_id,\r\n                                                                flex.logs.types.WARNING\r\n                                                            );\r\n                                                            throw 'prevent';\r\n                                                        }\r\n                                                    } else {\r\n                                                        flex.logs.log(\r\n                                                            'Unexpected behavior of handle event in DOM.fire. Attempt to call handle twice. \\n\\r ' +\r\n                                                            '>event: '      + event.type    + '\\n\\r ' +\r\n                                                            '>handle_id'    + handle.id     + '\\n\\r ' +\r\n                                                            '>element_id'   + element_id,\r\n                                                            flex.logs.types.LOGICAL\r\n                                                        );\r\n                                                    }\r\n                                                }\r\n                                            );\r\n                                        } catch (e) {\r\n                                            if (e !== 'prevent') {\r\n                                                if (safely) {\r\n                                                    flex.logs.log(\r\n                                                        'Unexpected error in DOM.fire; \\n\\r ' +\r\n                                                        '>event: ' + event.type + '\\n\\r ' +\r\n                                                        '>element_id' + element_id,\r\n                                                        flex.logs.types.CRITICAL\r\n                                                    );\r\n                                                } else {\r\n                                                    error = e;\r\n                                                }\r\n                                            }\r\n                                        } finally {\r\n                                            if (needRemoveChecking !== false) {\r\n                                                //Remove all handles, which should be removed\r\n                                                handles_storage.handles = handles.filter(\r\n                                                    function (handle) {\r\n                                                        if (handle.isWorking() === false && handle.isRemoving() !== false) {\r\n                                                            return false;\r\n                                                        } else {\r\n                                                            return true;\r\n                                                        }\r\n                                                    }\r\n                                                );\r\n                                                if (handles_storage.handles.length === 0) {\r\n                                                    tools.destroyCommonHandle(element, event_type);\r\n                                                    storage.clear(element);\r\n                                                }\r\n                                            }\r\n                                        }\r\n                                        if (error !== null) {\r\n                                            throw error;\r\n                                        }\r\n                                        return true;\r\n                                    }\r\n                                }\r\n                            }\r\n                            return false;\r\n                        };\r\n                        function remove(parameters) {\r\n                            /// <summary>\r\n                            /// Attach to element event handle\r\n                            /// </summary>\r\n                            /// <param name=\"parameters\" type=\"Object\">Events parameters:               &#13;&#10;\r\n                            /// {   [node]      element,                                                &#13;&#10;\r\n                            ///     [string]    name,                                                   &#13;&#10;\r\n                            ///     [function]  handle,                                                 &#13;&#10;\r\n                            ///     [string]    id     (optional) }</param>\r\n                            /// <returns type=\"boolean\">true if success and false if fail</returns>\r\n                            function getIDByHandle(handle) {\r\n                                return handle[settings.HANDLE_EVENT_ID_PROPERTY] !== void 0 ? handle[settings.HANDLE_EVENT_ID_PROPERTY] : null;\r\n                            };\r\n                            function validate(parameters) {\r\n                                parameters.element  = parameters.element        !== void 0      ? parameters.element    : null;\r\n                                parameters.name     = typeof parameters.name    === 'string'    ? parameters.name       : null;\r\n                                parameters.handle   = typeof parameters.handle  === 'function'  ? parameters.handle     : null;\r\n                                parameters.id       = typeof parameters.id      === 'string'    ? parameters.id         : getIDByHandle(parameters.handle);\r\n                                return parameters;\r\n                            };\r\n                            var parameters      = validate(parameters),\r\n                                handles_storage = null,\r\n                                handles         = null;\r\n                            if (parameters.element !== null && parameters.name !== null) {\r\n                                if (parameters.id === null && parameters.handle !== null) {\r\n                                    if (parameters.handle[settings.HANDLE_EVENT_ID_PROPERTY] !== void 0) {\r\n                                        parameters.id = parameters.handle[settings.HANDLE_EVENT_ID_PROPERTY];\r\n                                    }\r\n                                }\r\n                                if (parameters.id !== null) {\r\n                                    handles_storage = storage.get(parameters.element, true);\r\n                                    if (typeof handles_storage[parameters.name] === 'object') {\r\n                                        handles_storage = handles_storage[parameters.name];\r\n                                        handles         = handles_storage.handles;\r\n                                        try {\r\n                                            Array.prototype.forEach.call(\r\n                                                handles,\r\n                                                function (handle) {\r\n                                                    if (handle.id === parameters.id) {\r\n                                                        handle.toRemove();\r\n                                                        throw 'handle found';\r\n                                                    }\r\n                                                }\r\n                                            );\r\n                                        } catch (e) {\r\n                                            if (e !== 'handle found') {\r\n                                                flex.logs.log(\r\n                                                    'Unexpected error in DOM.remove; \\n\\r ' +\r\n                                                    '>event: ' + parameters.name + '\\n\\r ' +\r\n                                                    '>event_id' + parameters.id,\r\n                                                    flex.logs.types.CRITICAL\r\n                                                );\r\n                                            }\r\n                                        } finally {\r\n                                            handles = handles.filter(\r\n                                                function (handle) {\r\n                                                    if (handle.isWorking() === false && handle.isRemoving() !== false) {\r\n                                                        return false;\r\n                                                    } else {\r\n                                                        return true;\r\n                                                    }\r\n                                                }\r\n                                            );\r\n                                            if (handles.length === 0) {\r\n                                                tools.destroyCommonHandle(parameters.element, parameters.name);\r\n                                                storage.clear(parameters.element);\r\n                                            }\r\n                                        }\r\n                                    }\r\n                                }\r\n                            }\r\n                        };\r\n                        function clear(element, event, fire) {\r\n                            /// <summary>\r\n                            /// Remove all handles of event's type\r\n                            /// </summary>\r\n                            /// <param name=\"element\"   type=\"node\"     >target element</param>\r\n                            /// <param name=\"type\"      type=\"string\"   >event type</param>\r\n                            /// <param name=\"fire\"      type=\"boolean\"  >fire all handles before remove</param>\r\n                            /// <returns type=\"boolean\">true if success and false if fail</returns>\r\n                            var handles_storage = null,\r\n                                handles         = null,\r\n                                fire            = typeof fire === 'boolean' ? fire : false;\r\n                            if (element && event) {\r\n                                handles_storage = storage.get(element, true);\r\n                                if (handles_storage !== null) {\r\n                                    if (typeof handles_storage[event] === 'object') {\r\n                                        handles_storage = handles_storage[event];\r\n                                        if (fire !== false) {\r\n                                            try {\r\n                                                Array.prototype.forEach.call(\r\n                                                    handles_storage.handles,\r\n                                                    function (handle) {\r\n                                                        flex.logs.log(\r\n                                                            'Event fired in DOM.clear.fire; \\n\\r' +\r\n                                                            '>event: '      + event + '\\n\\r'+\r\n                                                            '>handle_id: '  + handle.id,\r\n                                                            flex.logs.types.NOTIFICATION\r\n                                                        );\r\n                                                        if (handle.launch(element, null) === false) {\r\n                                                            throw 'prevent';\r\n                                                        }\r\n                                                    }\r\n                                                );\r\n                                            } catch (e) {\r\n                                                if (e === 'prevent') {\r\n                                                    flex.logs.log(\r\n                                                        'Break event in DOM.clear.fire; \\n\\r ' +\r\n                                                        '>event: ' + event,\r\n                                                        flex.logs.types.WARNING\r\n                                                    );\r\n                                                } else {\r\n                                                    flex.logs.log(\r\n                                                        'Fatal error event in DOM.clear.fire; \\n\\r ' +\r\n                                                        '>event: ' + event,\r\n                                                        flex.logs.types.WARNING\r\n                                                    );\r\n                                                }\r\n                                            }\r\n                                        }\r\n                                        handles_storage.handles = [];\r\n                                        tools.destroyCommonHandle(element, event);\r\n                                        storage.clear(element);\r\n                                        return true;\r\n                                    }\r\n                                }\r\n                                return false;\r\n                            }\r\n                            return null;\r\n                        };\r\n                        function call(element, name) {\r\n                            /// <summary>\r\n                            /// Emulate (call) event on some node\r\n                            /// </summary>\r\n                            /// <param name=\"element\" type=\"Object\" >Node           </param>\r\n                            /// <param name=\"name\" type=\"string\"    >Type of event  </param>\r\n                            /// <returns type=\"Object\">returns node in success or throw new syntax error in fail</returns>\r\n                            function extend(destination, source) {\r\n                                for (var property in source)\r\n                                    destination[property] = source[property];\r\n                                return destination;\r\n                            }\r\n                            var oEvent          = null,\r\n                                eventType       = null,\r\n                                evt             = null,\r\n                                eventMatchers   = {\r\n                                    'HTMLEvents'    : /^(?:load|unload|abort|error|select|change|submit|reset|focus|blur|resize|scroll)$/,\r\n                                    'MouseEvents'   : /^(?:click|dblclick|mouse(?:down|up|over|move|out))$/\r\n                                },\r\n                                defaultOptions  = {\r\n                                    type            : name,\r\n                                    canBubble       : true,\r\n                                    cancelable      : true,\r\n                                    view            : element.ownerDocument.defaultView,\r\n                                    detail          : 1,\r\n                                    screenX         : 0,\r\n                                    screenY         : 0,\r\n                                    clientX         : 0,\r\n                                    clientY         : 0,\r\n                                    pointerX        : 0,\r\n                                    pointerY        : 0,\r\n                                    ctrlKey         : false,\r\n                                    altKey          : false,\r\n                                    shiftKey        : false,\r\n                                    metaKey         : false,\r\n                                    button          : 0,\r\n                                    relatedTarget   : null\r\n                                },\r\n                                options = extend(defaultOptions, arguments[2] || {});\r\n                            for (var name in eventMatchers) {\r\n                                if (eventMatchers[name].test(name)) { eventType = name; break; }\r\n                            }\r\n                            if (!eventType) {\r\n                                throw new SyntaxError('Only HTMLEvents and MouseEvents interfaces are supported');\r\n                            }\r\n                            if (document.createEvent) {\r\n                                oEvent = document.createEvent(eventType);\r\n                                if (eventType == 'HTMLEvents') {\r\n                                    oEvent.initEvent(name, options.bubbles, options.cancelable);\r\n                                } else {\r\n                                    oEvent.initMouseEvent(\r\n                                        options.type,       options.canBubble,  options.cancelable, options.view,\r\n                                        options.detail,     options.screenX,    options.screenY,    options.clientX,\r\n                                        options.clientY,    options.ctrlKey,    options.altKey,     options.shiftKey,\r\n                                        options.metaKey,    options.button,     options.relatedTarget\r\n                                    );\r\n                                }\r\n                                element.dispatchEvent(oEvent);\r\n                            } else {\r\n                                options.clientX = options.pointerX;\r\n                                options.clientY = options.pointerY;\r\n                                evt             = document.createEventObject();\r\n                                oEvent          = extend(evt, options);\r\n                                element.fireEvent('on' + name, oEvent);\r\n                            }\r\n                            return element;\r\n                        };\r\n                        storage = {\r\n                            get     : function (element, only_get) {\r\n                                /// <summary>\r\n                                /// Get virtual storage from element\r\n                                /// </summary>\r\n                                /// <param name=\"element\"   type=\"node\"     >Element</param>\r\n                                /// <param name=\"only_get\"  type=\"boolean\"  >false - create, if doesn't exist; true - only get</param>\r\n                                /// <returns type=\"object\">virtual storage</returns>\r\n                                var only_get = (typeof only_get === \"boolean\" ? only_get : true),\r\n                                    storage     = null;\r\n                                if (element) {\r\n                                    storage = flex.overhead.objecty.get(element, settings.STORAGE_NAME);\r\n                                    if (storage === null && only_get === false) {\r\n                                        storage = flex.overhead.objecty.set(element, settings.STORAGE_NAME, {});\r\n                                    }\r\n                                    return storage;\r\n                                }\r\n                                return null;\r\n                            },\r\n                            clear   : function (element) {\r\n                                    /// <summary>\r\n                                    /// Try to clear virtual storage from element (only if storage is empty)\r\n                                    /// </summary>\r\n                                    /// <param name=\"element\"   type=\"node\"     >Element</param>\r\n                                    /// <returns type=\"object\">true - if removed; false - if not.</returns>\r\n                                var handles = storage.get(element, true);\r\n                                if (handles !== null) {\r\n                                    if (Object.keys(handles).length === 0) {\r\n                                        flex.overhead.objecty.del(element, settings.STORAGE_NAME);\r\n                                        return true;\r\n                                    } else {\r\n                                        return false;\r\n                                    }\r\n                                }\r\n                                return false;\r\n                            }\r\n                        };\r\n                        tools = {\r\n                            buildCommonHandle   : function (element, type, storage, touch, safely) {\r\n                                /// <summary>\r\n                                /// Build common handle for element for defined event\r\n                                /// </summary>\r\n                                /// <param name=\"element\"   type=\"node\"     >Element</param>\r\n                                /// <param name=\"type\"      type=\"string\"   >Event name</param>\r\n                                /// <param name=\"storage\"   type=\"object\"   >Virtual storage of element</param>\r\n                                /// <returns type=\"object\">collection of handles</returns>\r\n                                var element_id = flex.unique();\r\n                                if (typeof storage[type] !== \"object\") {\r\n                                    storage[type] = {\r\n                                        globalHandle    : function (event) {\r\n                                            return fire.call(element, element, event, element_id, type, safely);\r\n                                        },\r\n                                        element_id      : element_id,\r\n                                        handles         : []\r\n                                    };\r\n                                    if (flex.events.DOM.add(element, type, storage[type].globalHandle) === false) {\r\n                                        return null;\r\n                                    }\r\n                                    if (touch !== false) {\r\n                                        if (touches.has(type) !== false) {\r\n                                            flex.events.DOM.add(element, touches.getType(type), storage[type].globalHandle);\r\n                                        }\r\n                                    }\r\n                                }\r\n                                return storage[type].handles;\r\n                            },\r\n                            destroyCommonHandle : function (element, type) {\r\n                                /// <summary>\r\n                                /// Destroy common handle for element for defined event\r\n                                /// </summary>\r\n                                /// <param name=\"element\"   type=\"node\"     >Element</param>\r\n                                /// <param name=\"type\"      type=\"string\"   >Event name</param>\r\n                                /// <returns type=\"object\">true - if removed; false - if not.</returns>\r\n                                var handles_storage = null;\r\n                                if (element && type) {\r\n                                    handles_storage = storage.get(element, true);\r\n                                    if (typeof handles_storage[type] === 'object') {\r\n                                        flex.events.DOM.remove(element, type, handles_storage[type].globalHandle);\r\n                                        if (touches.has(type) !== false) {\r\n                                            flex.events.DOM.remove(element, touches.getType(type), handles_storage[type].globalHandle);\r\n                                        }\r\n                                        handles_storage[type] = null;\r\n                                        delete handles_storage[type];\r\n                                        return true;\r\n                                    }\r\n                                }\r\n                                return null;\r\n                            },\r\n                            fixEvent            : function() {\r\n                                /// <summary>\r\n                                /// Fix IE bug with event object\r\n                                /// </summary>\r\n                                /// <returns type=\"void\">void</returns>\r\n                                if (!event) {\r\n                                    if (window.event) {\r\n                                        return window.event;\r\n                                    }\r\n                                }\r\n                                return null;\r\n                            },\r\n                            unificationEvent    : function (event) {\r\n                                /// <summary>\r\n                                /// Unification of event object\r\n                                /// </summary>\r\n                                /// <param name=\"event\" type=\"event\">Event object</param>\r\n                                /// <returns type=\"event\">Event object</returns>\r\n                                function addContainer(event) {\r\n                                    event.flex = {};\r\n                                    return event;\r\n                                };\r\n                                function getCoordinates(event, source) {\r\n                                    if (source.clientX !== void 0) {\r\n                                        if (source.pageX === void 0) {\r\n                                            event.flex.pageX = null;\r\n                                            event.flex.pageY = null;\r\n                                        }\r\n                                        if (source.pageX === null && source.clientX !== null) {\r\n                                            var DocumentLink    = document.documentElement,\r\n                                                BodyLink        = document.body;\r\n                                            event.flex.pageX = source.clientX + (DocumentLink && DocumentLink.scrollLeft || BodyLink && BodyLink.scrollLeft || 0) - (DocumentLink.clientLeft || 0);\r\n                                            event.flex.pageY = source.clientY + (DocumentLink && DocumentLink.scrollTop || BodyLink && BodyLink.scrollTop || 0) - (DocumentLink.clientTop || 0);\r\n                                        } else {\r\n                                            event.flex.pageX = source.pageX;\r\n                                            event.flex.pageY = source.pageY;\r\n                                        }\r\n                                    } else {\r\n                                        event.flex.pageX = null;\r\n                                        event.flex.pageY = null;\r\n                                    }\r\n                                    event.flex.clientX = (source.clientX !== void 0 ? source.clientX : null);\r\n                                    event.flex.clientY = (source.clientY !== void 0 ? source.clientY : null);\r\n                                    event.flex.offsetX = (source.offsetX !== void 0 ? source.offsetX : (source.layerX !== void 0 ? source.layerX : null));\r\n                                    event.flex.offsetY = (source.offsetY !== void 0 ? source.offsetY : (source.layerY !== void 0 ? source.layerY : null));\r\n                                    return event;\r\n                                };\r\n                                function unificationStop(event) {\r\n                                    if (event.preventDefault === void 0) {\r\n                                        event.preventDefault = function () { try { this.returnValue = false; } catch (e) { } };\r\n                                    }\r\n                                    if (event.stopPropagation === void 0) {\r\n                                        event.stopPropagation = function () { try { this.cancelBubble = true; } catch (e) { } };\r\n                                    }\r\n                                    event.flex.stop = function () {\r\n                                        event.preventDefault();\r\n                                        event.stopPropagation();\r\n                                        return false;\r\n                                    };\r\n                                    return event;\r\n                                };\r\n                                function unificationTarget(event) {\r\n                                    if (event.target === void 0) {\r\n                                        if (event.srcElement !== void 0) {\r\n                                            event.target = event.srcElement;\r\n                                        } else {\r\n                                            event.target = null;\r\n                                        }\r\n                                    }\r\n                                    if (event.target !== null) {\r\n                                        if (event.relatedTarget === void 0) {\r\n                                            if (event.fromElement !== void 0) {\r\n                                                if (event.fromElement === event.target) {\r\n                                                    event.relatedTarget = event.toElement;\r\n                                                } else {\r\n                                                    event.relatedTarget = event.fromElement;\r\n                                                }\r\n                                            } else {\r\n                                                event.relatedTarget = null;\r\n                                                event.fromElement   = null;\r\n                                            }\r\n                                        }\r\n                                    }\r\n                                    event.flex.target = event.target;\r\n                                    return event;\r\n                                };\r\n                                function unificationCoordinate(event) {\r\n                                    return getCoordinates(event, event);\r\n                                };\r\n                                function unificationButtons(event) {\r\n                                    if (event.which === void 0 && event.button !== void 0) {\r\n                                        event.flex.which    = (event.button & 1 ? 1 : (event.button & 2 ? 3 : (event.button & 4 ? 2 : 0)));\r\n                                        event.flex.button   = event.button;\r\n                                    }\r\n                                    return event;\r\n                                };\r\n                                function unificationTouches(event) {\r\n                                    if (typeof event.touches === \"object\") {\r\n                                        if (event.touches.length === 1) {\r\n                                            event                   = getCoordinates(event, event.touches[0]);\r\n                                            event.flex.target       = event.touches[0].target;\r\n                                            event.flex.singleTouch  = true;\r\n                                        }\r\n                                        event.flex.touches = event.touches;\r\n                                    }\r\n                                    return event;\r\n                                };\r\n                                if (event.flex === void 0) {\r\n                                    event = addContainer            (event);\r\n                                    event = unificationStop         (event);\r\n                                    event = unificationTarget       (event);\r\n                                    event = unificationCoordinate   (event);\r\n                                    event = unificationButtons      (event);\r\n                                    event = unificationTouches      (event);\r\n                                }\r\n                                return event;\r\n                            }\r\n                        };\r\n                        touches = {\r\n                            events          : {\r\n                                click       : { touch: 'touchstart' },\r\n                                dblclick    : { touch: 'touchstart' },\r\n                                mousedown   : { touch: 'touchstart' },\r\n                                mouseenter  : { touch: 'touchenter' },\r\n                                mouseleave  : { touch: 'touchleave' },\r\n                                mousemove   : { touch: 'touchmove' },\r\n                                mouseover   : { touch: '' },\r\n                                mouseout    : { touch: '' },\r\n                                mouseup     : { touch: 'touchend' },\r\n                            },\r\n                            has             : function (type) {\r\n                                for (var key in touches.events) {\r\n                                    if (key === type || 'on' + key === type) {\r\n                                        return true;\r\n                                    }\r\n                                }\r\n                                return false;\r\n                            },\r\n                            getType         : function (type) {\r\n                                for (var key in touches.events) {\r\n                                    if (key === type || 'on' + key === type) {\r\n                                        return touches.events[key].touch;\r\n                                    }\r\n                                }\r\n                                return null;\r\n                            },\r\n                            getOriginalType : function (type) {\r\n                                type = type.toLowerCase();\r\n                                for (var key in touches.events) {\r\n                                    if (touches.events[key].touch === type) {\r\n                                        return key;\r\n                                    }\r\n                                }\r\n                                return null;\r\n                            }\r\n                        };\r\n                        privates = {\r\n                            _add    : add,\r\n                            _remove : remove,\r\n                            add     : function (element, type, handle, id, touch, safely) {\r\n                                return add({\r\n                                    element : element,\r\n                                    name    : type,\r\n                                    handle  : handle,\r\n                                    id      : id,\r\n                                    touch   : touch,\r\n                                    safely  : safely\r\n                                });\r\n                            },\r\n                            remove  : function (element, type, handle, id) {\r\n                                return remove({\r\n                                    element : element,\r\n                                    name    : type,\r\n                                    handle  : handle,\r\n                                    id      : id,\r\n                                });\r\n                            },\r\n                            call    : call,\r\n                            clear   : clear,\r\n                            unify   : tools.unificationEvent\r\n                        };\r\n                        return {\r\n                            add             : privates.add,\r\n                            remove          : privates.remove,\r\n                            clear           : privates.clear,\r\n                            call            : privates.call,\r\n                            unify           : privates.unify,\r\n                            extendedAdd     : privates._add,\r\n                            extendedRemove  : privates._remove,\r\n                        };\r\n                    }());\r\n                    instance            = new instance();\r\n                }\r\n                return instance;\r\n            };\r\n            callers     = {\r\n                init: function () {\r\n                    //_node\r\n                    flex.callers.define.node('events.add',      function (type, handle, id, touch) {\r\n                        return DOM().add(this.target, type, handle, id, touch);\r\n                    });\r\n                    flex.callers.define.node('events.remove',   function (type, handle, id) {\r\n                        return DOM().remove(this.target, type, handle, id);\r\n                    });\r\n                    flex.callers.define.node('events.call',     function (type) {\r\n                        return DOM().call(this.target, type);\r\n                    });\r\n                    //_nodes\r\n                    flex.callers.define.nodes('events.add',     function (type, handle, id, touch) {\r\n                        Array.prototype.forEach.call(this.target, function (target) {\r\n                            DOM().add(target, type, handle, id, touch);\r\n                        });\r\n                    });\r\n                    flex.callers.define.nodes('events.remove',  function (type, handle, id) {\r\n                        Array.prototype.forEach.call(this.target, function (target) {\r\n                            DOM().remove(target, type, handle, id);\r\n                        });\r\n                    });\r\n                    flex.callers.define.nodes('events.call',    function (type) {\r\n                        Array.prototype.forEach.call(this.target, function (target) {\r\n                            DOM().call(target, type);\r\n                        });\r\n                    });\r\n                }\r\n            };\r\n            //Initialization of callers\r\n            callers.init();\r\n            //Public part\r\n            privates    = {\r\n                DOMEvents: DOM,\r\n            };\r\n            return {\r\n                DOMEvents: privates.DOMEvents\r\n            };\r\n        };\r\n        flex.modules.attach({\r\n            name            : 'events',\r\n            protofunction   : protofunction,\r\n        });\r\n    }\r\n}());","/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\r\n* Copyright © 2015-2016 Dmitry Astafyev. All rights reserved.                                                      *\r\n* This file (core / module) is released under the Apache License (Version 2.0). See [LICENSE] file for details.    *\r\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\r\n\r\n\r\n/// <reference path='intellisense/flex.callers.node.intellisense.js' />\r\n/// <reference path='intellisense/flex.callers.nodes.intellisense.js' />\r\n/// <reference path='intellisense/flex.callers.object.intellisense.js' />\r\n/// <reference path=\"intellisense/flex.intellisense.js\" />\r\n/// <module>\r\n///     <summary>\r\n///         Basic events controller.\r\n///     </summary>\r\n/// </module>\r\n(function () {\r\n    \"use strict\";\r\n    if (flex !== void 0) {\r\n        var protofunction = function () { };\r\n        protofunction.prototype = function () {\r\n            var select      = null,\r\n                find        = null,\r\n                privates    = null,\r\n                sizes       = null,\r\n                scroll      = null,\r\n                builder     = null,\r\n                styles      = null,\r\n                position    = null,\r\n                units       = null,\r\n                helpers     = null,\r\n                callers     = null,\r\n                settings    = null;\r\n            settings    = {\r\n                storage : {\r\n                    GROUP           : 'flex.html',\r\n                    SCROLL          : 'scroll',\r\n                    CUSTOM_STYLES   : 'custom.styles'\r\n                },\r\n                classes : {\r\n                    scroll: {\r\n                        MINIMAL_WIDTH   : 15,\r\n                        MINIMAL_HEIGHT  : 15\r\n                    }\r\n                }\r\n            };\r\n            select      = {\r\n                bySelector  : function (){\r\n                    var protofunction       = function () { };\r\n                    protofunction.prototype = (function () {\r\n                        var cache       = null,\r\n                            privates    = null;\r\n                        cache = {\r\n                            data    : {},\r\n                            get     : function (selector) {\r\n                                var data = cache.data;\r\n                                return (data[selector] !== void 0 ? data[selector] : null);\r\n                            },\r\n                            add     : function (selector, nodes) {\r\n                                var data = cache.data;\r\n                                data[selector] = nodes;\r\n                                return nodes;\r\n                            },\r\n                            remove  : function (selector) {\r\n                                var data = cache.data;\r\n                                data[selector] = null;\r\n                                delete data[selector];\r\n                            },\r\n                            reset   : function () {\r\n                                cache.data = {};\r\n                            }\r\n                        };\r\n                        function first(selector, document_link) {\r\n                            if (typeof selector === 'string') {\r\n                                return (document_link || document).querySelector(selector);\r\n                            }\r\n                            return null;\r\n                        };\r\n                        function all(selector, document_link) {\r\n                            if (typeof selector === 'string') {\r\n                                return (document_link || document).querySelectorAll(selector);\r\n                            }\r\n                            return null;\r\n                        };\r\n                        function cachedFirst(selector, document_link) {\r\n                            var nodes = null;\r\n                            if (typeof selector === 'string') {\r\n                                nodes = cache.get(selector);\r\n                                if (nodes === null) {\r\n                                    nodes = cache.add((document_link || document).querySelector(selector));\r\n                                }\r\n                                return nodes;\r\n                            }\r\n                            return null;\r\n                        };\r\n                        function cachedAll(selector, document_link) {\r\n                            var nodes = null;\r\n                            if (typeof selector === 'string') {\r\n                                nodes = cache.get(selector);\r\n                                if (nodes === null) {\r\n                                    nodes = cache.add((document_link || document).querySelectorAll(selector));\r\n                                }\r\n                                return nodes;\r\n                            }\r\n                            return null;\r\n                        };\r\n                        privates = {\r\n                            first       : first,\r\n                            all         : all,\r\n                            cachedFirst : cachedFirst,\r\n                            cachedAll   : cachedAll,\r\n                            cacheReset  : cache.reset,\r\n                            cacheRemove : cache.remove\r\n                        };\r\n                        return {\r\n                            first       : privates.first,\r\n                            all         : privates.all,\r\n                            cachedFirst : privates.cachedFirst,\r\n                            cachedAll   : privates.cachedAll,\r\n                            cacheReset  : privates.cacheReset,\r\n                            cacheRemove : privates.cacheRemove\r\n                        };\r\n                    }());\r\n                    return new protofunction();\r\n                },\r\n                fromParent  : function () {\r\n                    var protofunction = function () {\r\n                        this.selector = select.bySelector();\r\n                    };\r\n                    protofunction.prototype = {\r\n                        selector    : null,\r\n                        select      : function (parent, selector, only_first) {\r\n                            var id      = flex.unique(),\r\n                                nodes   = null,\r\n                                id_attr = \"data-\" + id;\r\n                            if (typeof parent.nodeName === \"string\") {\r\n                                parent.setAttribute(id_attr, id);\r\n                                nodes = this.selector[(only_first === false ? 'all' : 'first')](parent.nodeName + '[' + id_attr + '=\"' + id + '\"] ' + selector);\r\n                                parent.removeAttribute(id_attr);\r\n                            }\r\n                            return nodes;\r\n                        },\r\n                        first       : function (parent, selector) {\r\n                            return this.select(parent, selector, true);\r\n                        },\r\n                        all         : function (parent, selector) {\r\n                            return this.select(parent, selector, false);\r\n                        }\r\n                    };\r\n                    return Object.freeze(new protofunction());\r\n                },\r\n            };\r\n            find        = function () { \r\n                var protofunction = function () { };\r\n                protofunction.prototype = {\r\n                    childByAttr : function (parent, nodeName, attribute) {\r\n                        var result_node = null,\r\n                            nodeName    = nodeName.toLowerCase(),\r\n                            self        = this;\r\n                        if (parent.childNodes !== void 0) {\r\n                            if (typeof parent.childNodes.length === \"number\") {\r\n                                Array.prototype.forEach.call(\r\n                                    parent.childNodes,\r\n                                    function (childNode) {\r\n                                        if (typeof childNode.nodeName === \"string\") {\r\n                                            if (childNode.nodeName.toLowerCase() === nodeName || nodeName === \"*\") {\r\n                                                if (typeof childNode.getAttribute === \"function\") {\r\n                                                    if (attribute.value !== null) {\r\n                                                        if (childNode.getAttribute(attribute.name) === attribute.value) {\r\n                                                            return childNode;\r\n                                                        }\r\n                                                    } else {\r\n                                                        if (childNode.hasAttribute(attribute.name) === true) {\r\n                                                            return childNode;\r\n                                                        }\r\n                                                    }\r\n                                                }\r\n                                            }\r\n                                        }\r\n                                        result_node = self.childByAttr(childNode, nodeName, attribute);\r\n                                        if (result_node !== null) {\r\n                                            return result_node;\r\n                                        }\r\n                                    }\r\n                                );\r\n                            }\r\n                        }\r\n                        return null;\r\n                    },\r\n                    childByType : function (parent, nodeName) {\r\n                        var result_node = null,\r\n                            nodeName    = nodeName.toLowerCase(),\r\n                            self        = this;\r\n                        if (parent.childNodes !== void 0) {\r\n                            if (typeof parent.childNodes.length === \"number\") {\r\n                                Array.prototype.forEach.call(\r\n                                    parent.childNodes,\r\n                                    function (childNode) {\r\n                                        if (typeof childNode.nodeName === \"string\") {\r\n                                            if (childNode.nodeName.toLowerCase() === nodeName) {\r\n                                                return childNode;\r\n                                            }\r\n                                        }\r\n                                    }\r\n                                );\r\n                                Array.prototype.forEach.call(\r\n                                    parent.childNodes,\r\n                                    function (childNode) {\r\n                                        result_node = self.childByType(childNode, nodeName);\r\n                                        if (result_node !== null) {\r\n                                            return result_node;\r\n                                        }\r\n                                    }\r\n                                );\r\n                            }\r\n                        }\r\n                        return null;\r\n                    },\r\n                    parentByAttr: function (child, attribute) {\r\n                        if (child !== void 0 && attribute !== void 0) {\r\n                            if (child.parentNode !== void 0) {\r\n                                if (child.parentNode !== null) {\r\n                                    if (typeof child.parentNode.getAttribute === 'function') {\r\n                                        if (attribute.value !== null) {\r\n                                            if (child.parentNode.getAttribute(attribute.name) === attribute.value) {\r\n                                                return child.parentNode;\r\n                                            } else {\r\n                                                return this.parentByAttr(child.parentNode, attribute);\r\n                                            }\r\n                                        } else {\r\n                                            if (child.parentNode.getAttribute(attribute.name) !== null) {\r\n                                                return child.parentNode;\r\n                                            } else {\r\n                                                return this.parentByAttr(child.parentNode, attribute);\r\n                                            }\r\n                                        }\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                        return null;\r\n                    }\r\n                };\r\n                return new protofunction();\r\n            };\r\n            sizes       = function () {\r\n                var protofunction       = function () { };\r\n                protofunction.prototype = {\r\n                    nodeByClientRectSize    : function (node){\r\n                        var height                  = 0,\r\n                            width                   = 0,\r\n                            bounding_client_rect    = null;\r\n                        if (node.getBoundingClientRect !== void 0) {\r\n                            bounding_client_rect    = node.getBoundingClientRect();\r\n                            height                  = bounding_client_rect.bottom - bounding_client_rect.top;\r\n                            width                   = bounding_client_rect.right - bounding_client_rect.left;\r\n                        }\r\n                        return { height: height, width: width }\r\n                    },\r\n                    nodeByOffset            : function (node) {\r\n                        var height  = 0,\r\n                            width   = 0;\r\n                        if (node.offsetHeight !== void 0) {\r\n                            height  = node.offsetHeight;\r\n                            width   = node.offsetWidth;\r\n                        }\r\n                        return { height: height, width: width }\r\n                    },\r\n                    nodeWithMargin          : function (node) {\r\n                        var height      = 0,\r\n                            width       = 0,\r\n                            selector    = null,\r\n                            size        = this.node(node),\r\n                            top, bottom, right, left,\r\n                            b_top, b_bottom, b_right, b_left;\r\n                        if (typeof node === 'string') {\r\n                            selector    = select.bySelector();\r\n                            node        = selector.first(node);\r\n                            selector    = null;\r\n                        }\r\n                        if (node !== null) {\r\n                            top         = parseInt(document.defaultView.getComputedStyle(node).marginTop,           10);\r\n                            bottom      = parseInt(document.defaultView.getComputedStyle(node).marginBottom,        10);\r\n                            right       = parseInt(document.defaultView.getComputedStyle(node).marginRight,         10);\r\n                            left        = parseInt(document.defaultView.getComputedStyle(node).marginLeft,          10);\r\n                            b_top       = parseInt(document.defaultView.getComputedStyle(node).borderTopWidth,      10);\r\n                            b_bottom    = parseInt(document.defaultView.getComputedStyle(node).borderBottomWidth,   10);\r\n                            b_right     = parseInt(document.defaultView.getComputedStyle(node).borderRightWidth,    10);\r\n                            b_left      = parseInt(document.defaultView.getComputedStyle(node).borderLeftWidth,     10);\r\n                            if (top         === null || top         === NaN) { top          = 0; }\r\n                            if (bottom      === null || bottom      === NaN) { bottom       = 0; } \r\n                            if (right       === null || right       === NaN) { right        = 0; }\r\n                            if (left        === null || left        === NaN) { left         = 0; }\r\n                            if (b_top       === null || b_top       === NaN) { b_top        = 0; }\r\n                            if (b_bottom    === null || b_bottom    === NaN) { b_bottom     = 0; }\r\n                            if (b_right     === null || b_right     === NaN) { b_right      = 0; }\r\n                            if (b_left      === null || b_left      === NaN) { b_left       = 0; }\r\n                        }\r\n                        return {\r\n                            height  : size.height + top + bottom + b_top + b_bottom,\r\n                            width   : size.width + right + left + b_right + b_left\r\n                        }\r\n                    },\r\n                    node                    : function (node) {\r\n                        var height      = 0,\r\n                            width       = 0,\r\n                            selector    = null,\r\n                            size        = { height : 0, width : 0 };\r\n                        if (typeof node === 'string') {\r\n                            selector    = select.bySelector();\r\n                            node        = selector.first(node);\r\n                            selector    = null;\r\n                        }\r\n                        if (node !== null) {\r\n                            size = this.nodeByClientRectSize(node);\r\n                            if (size.height === 0 && size.width === 0) {\r\n                                size = this.nodeByOffset(node);\r\n                            }\r\n                        }\r\n                        return size;\r\n                    },\r\n                    window                  : function () {\r\n                        if (self.innerHeight) {\r\n                            return {\r\n                                height  : self.innerHeight,\r\n                                width   : self.innerWidth\r\n                            };\r\n                        } else if (document.documentElement && document.documentElement.clientHeight) {\r\n                            return {\r\n                                height  : document.documentElement.clientHeight,\r\n                                width   : document.documentElement.clientWidth\r\n                            };\r\n                        }\r\n                        else if (document.body) {\r\n                            return {\r\n                                height  : document.body.clientHeight,\r\n                                width   : document.body.clientWidth\r\n                            };\r\n                        }\r\n                        return null;\r\n                    },\r\n                    image                   : function (image) {\r\n                        function generateSize(image) {\r\n                            var imageObj    = new Image(),\r\n                                size        = null;\r\n                            imageObj.src = image.src;\r\n                            size = {\r\n                                width   : imageObj.width,\r\n                                height  : imageObj.height\r\n                            };\r\n                            imageObj = null;\r\n                            return size;\r\n                        };\r\n                        if (image !== void 0) {\r\n                            if (typeof image.naturalWidth === 'number') {\r\n                                return {\r\n                                    width   : image.naturalWidth,\r\n                                    height  : image.naturalHeight\r\n                                }\r\n                            } else {\r\n                                return generateSize(image);\r\n                            }\r\n                        }\r\n                        return null;\r\n                    },\r\n                };\r\n                return new protofunction();\r\n            };\r\n            scroll      = function () {\r\n                var protofunction       = function () { };\r\n                protofunction.prototype = {\r\n                    window          : function () {\r\n                        var body = document.body,\r\n                            html = document.documentElement;\r\n                        return {\r\n                            top     : function () {\r\n                                return Math.max(\r\n                                    body.scrollTop      || 0,\r\n                                    html.scrollTop      || 0,\r\n                                    body.pageYOffset    || 0,\r\n                                    html.pageYOffset    || 0,\r\n                                    window.pageYOffset  || 0\r\n                                );\r\n                            },\r\n                            left    : function () {\r\n                                return Math.max(\r\n                                    body.scrollLeft     || 0,\r\n                                    html.scrollLeft     || 0,\r\n                                    body.pageXOffset    || 0,\r\n                                    html.pageXOffset    || 0,\r\n                                    window.pageXOffset  || 0\r\n                                );\r\n                            },\r\n                            height  : function () {\r\n                                return Math.max(\r\n                                    body.scrollHeight || 0,\r\n                                    body.offsetHeight || 0,\r\n                                    html.clientHeight || 0,\r\n                                    html.scrollHeight || 0,\r\n                                    html.offsetHeight || 0\r\n                                );\r\n                            },\r\n                            width   : function () {\r\n                                return Math.max(\r\n                                    body.scrollWidth || 0,\r\n                                    body.offsetWidth || 0,\r\n                                    html.clientWidth || 0,\r\n                                    html.scrollWidth || 0,\r\n                                    html.offsetWidth || 0\r\n                                );\r\n                            },\r\n                        };\r\n                    },\r\n                    get             : function (object) {\r\n                        if (object !== document.body && object !== document.documentElement) {\r\n                            return {\r\n                                top     : function () {\r\n                                    return Math.max(\r\n                                        object.scrollTop    || 0,\r\n                                        object.pageYOffset  || 0\r\n                                    );\r\n                                },\r\n                                left    : function () {\r\n                                    return Math.max(\r\n                                        object.scrollLeft   || 0,\r\n                                        object.pageXOffset  || 0\r\n                                    );\r\n                                },\r\n                                height  : function () {\r\n                                    return Math.max(\r\n                                        object.scrollHeight || 0,\r\n                                        object.clientHeight || 0,\r\n                                        object.offsetHeight || 0\r\n                                    );\r\n                                },\r\n                                width   : function () {\r\n                                    return Math.max(\r\n                                        object.scrollWidth || 0,\r\n                                        object.clientWidth || 0,\r\n                                        object.offsetWidth || 0\r\n                                    );\r\n                                }\r\n                            };\r\n                        } else {\r\n                            return this.window();\r\n                        }\r\n\r\n                    },\r\n                    scrollBarSize   : function () {\r\n                        function getSize() {\r\n                            var node    = document.createElement(\"DIV\"),\r\n                                css     = styles(),\r\n                                result  = null;\r\n                            css.apply(\r\n                                node,\r\n                                {\r\n                                    position    : 'absolute',\r\n                                    top         : '-1000px',\r\n                                    left        : '-1000px',\r\n                                    width       : '300px',\r\n                                    height      : '300px',\r\n                                    overflow    : 'scroll',\r\n                                    opacity     : '0.01',\r\n                                }\r\n                            );\r\n                            document.body.appendChild(node);\r\n                            result = {\r\n                                width   : node.offsetWidth  - node.clientWidth,\r\n                                height  : node.offsetHeight - node.clientHeight\r\n                            };\r\n                            result.probablyMobile   = (result.width     === 0 ? true : false);\r\n                            result.width            = (result.width     === 0 ? settings.classes.scroll.MINIMAL_WIDTH   : result.width  );\r\n                            result.height           = (result.height    === 0 ? settings.classes.scroll.MINIMAL_HEIGHT  : result.height );\r\n                            document.body.removeChild(node);\r\n                            return result;\r\n                            /*\r\n                            Здесь проблемное место. Дело в том, что на таблетках полоса проктутки накладывается на содержимое страницы.\r\n                            Это приводит к тому, что метод определения ширины полосы путем вычетания из общего размера области размера \r\n                            содержимого не дает результатов, так как полоса прокрутки над содержимым и не \"уменьшает\" его. Но а найти\r\n                            на момент написания этого комментрия сколь нибудь достойных решений по определению размера полосы прокрутки\r\n                            на таблетках - не удалось. Поэтому и берется фиксированный размер в 15 пк. \r\n                            23.01.2014\r\n                            */\r\n                        };\r\n                        var storaged = flex.overhead.globaly.get(settings.storage.GROUP, settings.storage.SCROLL, {});\r\n                        if (!storaged.value) {\r\n                            storaged.value = getSize();\r\n                        }\r\n                        return storaged.value;\r\n                    }\r\n                };\r\n                return new protofunction();\r\n            };\r\n            builder     = function () {\r\n                var protofunction = function () { };\r\n                protofunction.prototype = {\r\n                    build: function (attributes) {\r\n                        function settingup(attributes, nodes) {\r\n                            var parent = nodes[attributes.settingup.parent] || null;\r\n                            if (typeof attributes.settingup === \"object\" && nodes !== null && parent !== null) {\r\n                                Array.prototype.forEach.call(\r\n                                    attributes.settingup.childs,\r\n                                    function (child) {\r\n                                        if (nodes[child]) {\r\n                                            if (typeof attributes[child].settingup === \"object\") {\r\n                                                parent.appendChild(nodes[child][attributes[child].settingup.parent]);\r\n                                            } else {\r\n                                                parent.appendChild(nodes[child]);\r\n                                            }\r\n                                        }\r\n                                    }\r\n                                );\r\n                            }\r\n                        };\r\n                        function make(attribute) {\r\n                            var node = document.createElement(attribute.node);\r\n                            if (attribute.html !== null) {\r\n                                node.innerHTML = attribute.html;\r\n                            }\r\n                            Array.prototype.forEach.call(\r\n                                attribute.attrs,\r\n                                function (attr) {\r\n                                    if (flex.oop.objects.validate(attr, [   { name: \"name\",     type: \"string\" },\r\n                                                                            { name: \"value\",    type: \"string\" }]) === true) {\r\n                                        node.setAttribute(attr.name, attr.value);\r\n                                    }\r\n                                }\r\n                            );\r\n                            return node;\r\n                        };\r\n                        function validate(property) {\r\n                            return flex.oop.objects.validate(property, [{ name: \"node\",     type: \"string\"              },\r\n                                                                        { name: \"attrs\",    type: \"array\",  value: []   },\r\n                                                                        { name: \"html\",     type: \"string\", value: null }]);\r\n                        };\r\n                        var nodes = {};\r\n                        try {\r\n                            if (validate(attributes) === true) {\r\n                                return make(attributes);\r\n                            } else {\r\n                                for (var property in attributes) {\r\n                                    if (validate(attributes[property]) === true) {\r\n                                        nodes[property] = make(attributes[property]);\r\n                                    } else {\r\n                                        if (typeof attributes[property] === \"object\" && property !== \"settingup\") {\r\n                                            nodes[property] = this.build(attributes[property]);\r\n                                            if (nodes[property] === null) {\r\n                                                return null;\r\n                                            }\r\n                                        }\r\n                                    }\r\n                                }\r\n                                settingup(attributes, nodes);\r\n                            }\r\n                        } catch (e) {\r\n                            return null;\r\n                        }\r\n                        return nodes;\r\n                    }\r\n                };\r\n                return new protofunction();\r\n            };\r\n            styles      = function () {\r\n                var protofunction       = function () { };\r\n                protofunction.prototype = {\r\n                    apply           : function (node, styles) {\r\n                        if (node && typeof styles === 'object') {\r\n                            if (node.style) {\r\n                                for (var property in styles) {\r\n                                    node.style[property] = styles[property];\r\n                                }\r\n                                return true;\r\n                            }\r\n                        }\r\n                        return false;\r\n                    },\r\n                    redraw          : function (node){\r\n                        if (node){\r\n                            if (node.style !== void 0) {\r\n                                node.style.display = 'none';\r\n                                node.style.display = '';\r\n                                return true;\r\n                            }\r\n                        }\r\n                        return false;\r\n                    },\r\n                    getRuleFromSheet: function (sheet, selector) {\r\n                        /// <summary>\r\n                        /// Get rule from CSS for defined selector\r\n                        /// </summary>\r\n                        /// <param name=\"sheet\"     type=\"sheet\"    >CSS sheet</param>\r\n                        /// <param name=\"selector\"  type=\"string\"   >CSS selector</param>\r\n                        /// <returns type=\"array\">Rules for selector</returns>\r\n                        var sheets  = document.styleSheets,\r\n                            styles  = null,\r\n                            rules   = [];\r\n                        try {\r\n                            selector = selector.replace(/['\"]/gi, '|');\r\n                            Array.prototype.forEach.call(\r\n                                (sheet.cssRules || sheet.rules),\r\n                                function (rule, index) {\r\n                                    if (rule.selectorText) {\r\n                                        if (rule.selectorText.replace(/['\"]/gi, '|') === selector) {\r\n                                            rules.push({\r\n                                                rule    : rule,\r\n                                                style   : rule.style || null,\r\n                                                index   : index,\r\n                                                cssText : (rule.cssText || '')\r\n                                            });\r\n                                        }\r\n                                    } else if (typeof rule.cssText === 'string') {\r\n                                        if (rule.cssText.indexOf(selector.toLowerCase()) === 0) {\r\n                                            rules.push({\r\n                                                rule    : rule,\r\n                                                style   : rule.style || null,\r\n                                                index   : index,\r\n                                                cssText : (rule.cssText || '')\r\n                                            });\r\n                                        }\r\n                                    }\r\n                                }\r\n                            );\r\n                        } catch (e) {\r\n                        } finally {\r\n                            return rules.length > 0 ? rules : null;\r\n                        }\r\n                    },\r\n                    getRule         : function (selector) {\r\n                        /// <summary>\r\n                        /// Get rule from CSS for defined selector\r\n                        /// </summary>\r\n                        /// <param name=\"selector\"  type=\"string\"   >CSS selector</param>\r\n                        /// <returns type=\"array\">Rules for selector</returns>\r\n                        var sheets  = document.styleSheets,\r\n                            styles  = null,\r\n                            rules   = [],\r\n                            self    = this;\r\n                        try {\r\n                            selector = selector.replace(/['\"]/gi, '|');\r\n                            Array.prototype.forEach.call(\r\n                                document.styleSheets,\r\n                                function (sheet) {\r\n                                    var result = self.getRuleFromSheet(sheet, selector);\r\n                                    if (result !== null) {\r\n                                        rules = rules.concat(result);\r\n                                    }\r\n                                }\r\n                            );\r\n                        } catch (e) {\r\n                        } finally {\r\n                            return rules.length > 0 ? rules : null;\r\n                        }\r\n                    },\r\n                    setRule         : function (selector, cssText) {\r\n                        var sheet = flex.overhead.globaly.get(settings.storage.GROUP, settings.storage.CUSTOM_STYLES);\r\n                        if (typeof cssText === 'string') {\r\n                            if (sheet === null) {\r\n                                sheet       = document.createElement(\"style\");\r\n                                sheet.type  = \"text/css\";\r\n                                document.head.appendChild(sheet);\r\n                                sheet       = sheet.styleSheet || sheet.sheet;\r\n                                flex.overhead.globaly.set(settings.storage.GROUP, settings.storage.CUSTOM_STYLES, sheet);\r\n                            }\r\n                            if (sheet.insertRule) {\r\n                                sheet.insertRule(selector + ' {' + cssText + '}', sheet.cssRules.length);\r\n                                return {\r\n                                    rule    : sheet.cssRules[sheet.cssRules.length - 1],\r\n                                    index   : sheet.cssRules.length - 1,\r\n                                    sheet   : sheet\r\n                                };\r\n                            } else if (sheet.addRule) {\r\n                                sheet.addRule(selector + ' {' + cssText + '}', -1);\r\n                                return {\r\n                                    rule    : sheet.cssRules[sheet.cssRules.length - 1],\r\n                                    index   : sheet.cssRules.length - 1,\r\n                                    sheet   : sheet\r\n                                };\r\n                            }\r\n                        }\r\n                        return null;\r\n                    },\r\n                    updateRule      : function (sheet, rule, cssText) {\r\n                        var selector = rule.selectorText;\r\n                        this.deleteRule(sheet, rule);\r\n                        return this.setRule(selector, cssText);\r\n                    },\r\n                    deleteRule      : function (sheet, target, deep) {\r\n                        function getIndex(self, target, sheet, deep) {\r\n                            var result = null;\r\n                            if (target !== void 0) {\r\n                                if (typeof target === 'string') {\r\n                                    //selector\r\n                                    if (deep === false && sheet !== null) {\r\n                                        result = self.getRuleFromSheet(sheet, target);\r\n                                    } else {\r\n                                        result = self.getRule(target);\r\n                                    }\r\n                                    if (result !== null) {\r\n                                        if (result.length === 1) {\r\n                                            return result[0].index;\r\n                                        }\r\n                                    }\r\n                                } else if (typeof target === 'number') {\r\n                                    //index\r\n                                    return target;\r\n                                } else if (typeof target === 'object') {\r\n                                    //rule object\r\n                                    if (sheet !== null) {\r\n                                        return self.getRuleIndex(sheet, target);\r\n                                    }\r\n                                }\r\n                            }\r\n                            return -1;\r\n                        };\r\n                        var sheet   = sheet || flex.overhead.globaly.get(settings.storage.GROUP, settings.storage.CUSTOM_STYLES),\r\n                            deep    = typeof deep === 'boolean' ? deep : true,\r\n                            index   = getIndex(this, target, sheet, deep);\r\n                        if (index !== -1 && sheet !== null) {\r\n                            if (sheet.deleteRule) {\r\n                                sheet.deleteRule(index);\r\n                                return true;\r\n                            } else if (sheet.removeRule) {\r\n                                sheet.removeRule(index);\r\n                                return true;\r\n                            }\r\n                        }\r\n                        return null\r\n                    },\r\n                    getRuleIndex    : function (sheet, rule){\r\n                        var index = -1;\r\n                        try{\r\n                            Array.prototype.forEach.call(\r\n                                sheet.cssRules,\r\n                                function(_rule, rule_index){\r\n                                    if (_rule === rule){\r\n                                        index = rule_index;\r\n                                        throw 'found';\r\n                                    }\r\n                                }\r\n                            );\r\n                        }catch(e){\r\n                            if (e === 'found'){\r\n                                return index;\r\n                            }\r\n                        }\r\n                        return -1;\r\n                    },\r\n                    addClass        : function (node, name) {\r\n                        if (node.className !== void 0) {\r\n                            if (node.className.search(name) === -1) {\r\n                                node.className += name;\r\n                            }\r\n                        }\r\n                    },\r\n                    removeClass     : function (node, name) {\r\n                        if (node.className !== void 0) {\r\n                            if (node.className.search(name) !== -1) {\r\n                                node.className = node.className.replace(name, '');\r\n                            }\r\n                        }\r\n                    },\r\n                };\r\n                return new protofunction();\r\n            };\r\n            position    = function () {\r\n                var protofunction = function () { };\r\n                protofunction.prototype = (function () {\r\n                    var tools       = null,\r\n                        byPage      = null,\r\n                        byWindow    = null,\r\n                        privates    = null;\r\n                    position = {\r\n                        old     : function (node) {\r\n                            var top     = 0,\r\n                                left    = 0;\r\n                            while (node) {\r\n                                if (node.offsetTop !== void 0 && node.offsetLeft !== void 0) {\r\n                                    top     += parseFloat(node.offsetTop    );\r\n                                    left    += parseFloat(node.offsetLeft   );\r\n                                }\r\n                                node = node.offsetParent;\r\n                            }\r\n                            return {\r\n                                top : top,\r\n                                left: left\r\n                            };\r\n                        },\r\n                        modern  : function (node) {\r\n                            var box                 = null,\r\n                                objBody             = null,\r\n                                objDocumentElement  = null,\r\n                                scrollTop           = null,\r\n                                scrollLeft          = null,\r\n                                clientTop           = null,\r\n                                clientLeft          = null;\r\n                            box                 = node.getBoundingClientRect();\r\n                            objBody             = document.body;\r\n                            objDocumentElement  = document.documentElement;\r\n                            scrollTop           = window.pageYOffset || objDocumentElement.scrollTop || objBody.scrollTop;\r\n                            scrollLeft          = window.pageXOffset || objDocumentElement.scrollLeft || objBody.scrollLeft;\r\n                            clientTop           = objDocumentElement.clientTop || objBody.clientTop || 0;\r\n                            clientLeft          = objDocumentElement.clientLeft || objBody.clientLeft || 0;\r\n                            return {\r\n                                top : box.top + scrollTop - clientTop,\r\n                                left: box.left + scrollLeft - clientLeft\r\n                            };\r\n                        }\r\n                    };\r\n                    byPage      = function (node) {\r\n                        var top             = null,\r\n                            left            = null,\r\n                            box             = null,\r\n                            offset          = null,\r\n                            scrollTop       = null,\r\n                            scrollLeft      = null;\r\n                        try {\r\n                            box     = node.getBoundingClientRect();\r\n                            top     = box.top;\r\n                            left    = box.left;\r\n                        } catch (e) {\r\n                            offset          = position.old(node);\r\n                            scrollTop       = window.pageYOffset || objDocumentElement.scrollTop || objBody.scrollTop;\r\n                            scrollLeft      = window.pageXOffset || objDocumentElement.scrollLeft || objBody.scrollLeft;\r\n                            top             = offset.top - scrollTop;\r\n                            left            = offset.left - scrollLeft;\r\n                        } finally {\r\n                            return {\r\n                                top : top,\r\n                                left: left\r\n                            };\r\n                        }\r\n                    };\r\n                    byWindow    = function (node) {\r\n                        var result = null;\r\n                        try {\r\n                            result = position.modern(node);\r\n                        } catch (e) {\r\n                            result = position.old(node);\r\n                        } finally {\r\n                            return result;\r\n                        }\r\n                    };\r\n                    privates    = {\r\n                        byPage      : byPage,\r\n                        byWindow    : byWindow\r\n                    };\r\n                    return {\r\n                        byPage  : privates.byPage,\r\n                        byWindow: privates.byWindow,\r\n                    }\r\n                }());\r\n                return new protofunction();\r\n            };\r\n            units       = function () { \r\n                var protofunction       = function () { };\r\n                protofunction.prototype = {\r\n                    em  : function (context) {\r\n                        context = context || document.documentElement;\r\n                        context = context.parentNode ? context : document.documentElement;\r\n                        return parseFloat(getComputedStyle(context).fontSize);\r\n                    },\r\n                    rem : function () {\r\n                        this.em(document.documentElement);\r\n                    },\r\n                };\r\n                return new protofunction();\r\n            };\r\n            helpers     = {\r\n                validateNode: function (node) {\r\n                    var selector = null;\r\n                    if (node) {\r\n                        if (typeof node === 'string') {\r\n                            selector    = select.bySelector();\r\n                            node        = selector.first(node);\r\n                        }\r\n                        if (node !== null) {\r\n                            if (node.parentNode !== void 0) {\r\n                                return node;\r\n                            }\r\n                        }\r\n                    }\r\n                    return null;\r\n                },\r\n                appendChilds: function (parent, childs) {\r\n                    for (var index = childs.length - 1; index >= 0; index -= 1) {\r\n                        parent.appendChild(childs[0]);\r\n                    }\r\n                }\r\n            };\r\n            callers     = {\r\n                init: function () {\r\n                    function SizeClass      () { if (_size      === null) { _size       = sizes             (); } };\r\n                    function PositionClass  () { if (_position  === null) { _position   = position          (); } };\r\n                    function StylesClass    () { if (_styles    === null) { _styles     = styles            (); } };\r\n                    function ScrollClass    () { if (_scroll    === null) { _scroll     = scroll            (); } };\r\n                    function FindClass      () { if (_find      === null) { _find       = find              (); } };\r\n                    function SelectorClass  () { if (_selector  === null) { _selector   = select.fromParent (); } };\r\n                    var _size       = null,\r\n                        _position   = null,\r\n                        _styles     = null,\r\n                        _scroll     = null,\r\n                        _find       = null,\r\n                        _selector   = null;\r\n                    //_node\r\n                    flex.callers.define.node('html.size.get',                   function () {\r\n                        SizeClass();\r\n                        return _size.node(this.target);\r\n                    });\r\n                    flex.callers.define.node('html.size.getWithMargin',         function () {\r\n                        SizeClass();\r\n                        return _size.nodeWithMargin(this.target);\r\n                    });\r\n                    flex.callers.define.node('html.size.getByClientRectSize',   function () {\r\n                        SizeClass();\r\n                        return _size.nodeByClientRectSize(this.target);\r\n                    });\r\n                    flex.callers.define.node('html.size.getByOffset',           function () {\r\n                        SizeClass();\r\n                        return _size.nodeByOffset(this.target);\r\n                    });\r\n                    flex.callers.define.node('html.position.byPage',            function () {\r\n                        PositionClass();\r\n                        return _position.byPage(this.target);\r\n                    });\r\n                    flex.callers.define.node('html.position.byWindow',          function () {\r\n                        PositionClass();\r\n                        return _position.byWindow(this.target);\r\n                    });\r\n                    flex.callers.define.node('html.styles.apply',               function (styles) {\r\n                        StylesClass();\r\n                        return _styles.apply(this.target, styles);\r\n                    });\r\n                    flex.callers.define.node('html.styles.redraw',              function () {\r\n                        StylesClass();\r\n                        return _styles.redraw(this.target);\r\n                    });\r\n                    flex.callers.define.node('html.styles.addClass',            function (class_name) {\r\n                        StylesClass();\r\n                        return _styles.addClass(this.target, class_name);\r\n                    });\r\n                    flex.callers.define.node('html.styles.removeClass',         function (class_name) {\r\n                        StylesClass();\r\n                        return _styles.removeClass(this.target, class_name);\r\n                    });\r\n                    flex.callers.define.node('html.scroll.position',            function () {\r\n                        ScrollClass();\r\n                        return _scroll.get(this.target);\r\n                    });\r\n                    flex.callers.define.node('html.find.childByAttr',           function (node_name, attribute) {\r\n                        FindClass();\r\n                        return _find.childByAttr(this.target, node_name, attribute);\r\n                    });\r\n                    flex.callers.define.node('html.find.childByType',           function (node_name) {\r\n                        FindClass();\r\n                        return _find.childByType(this.target, node_name);\r\n                    });\r\n                    flex.callers.define.node('html.find.parentByAttr',          function (attribute) {\r\n                        FindClass();\r\n                        return _find.parentByAttr(this.target, attribute);\r\n                    });\r\n                    flex.callers.define.node('html.find.node',                  function (selector) {\r\n                        SelectorClass();\r\n                        return _selector.first(this.target, selector);\r\n                    });\r\n                    flex.callers.define.node('html.find.nodes',                 function (selector) {\r\n                        SelectorClass();\r\n                        return _selector.all(this.target, selector);\r\n                    });\r\n                    //_nodes\r\n                    flex.callers.define.nodes('html.size.get',                   function () {\r\n                        var result = [];\r\n                        SizeClass();\r\n                        Array.prototype.forEach.call(this.target, function (target) {\r\n                            result.push(_size.node(target));\r\n                        });\r\n                        return result;\r\n                    });\r\n                    flex.callers.define.nodes('html.size.getWithMargin',         function () {\r\n                        var result = [];\r\n                        SizeClass();\r\n                        Array.prototype.forEach.call(this.target, function (target) {\r\n                            result.push(_size.nodeWithMargin(target));\r\n                        });\r\n                        return result;\r\n                    });\r\n                    flex.callers.define.nodes('html.size.getByClientRectSize',   function () {\r\n                        var result = [];\r\n                        SizeClass();\r\n                        Array.prototype.forEach.call(this.target, function (target) {\r\n                            result.push(_size.nodeByClientRectSize(target));\r\n                        });\r\n                        return result;\r\n                    });\r\n                    flex.callers.define.nodes('html.size.getByOffset',           function () {\r\n                        var result = [];\r\n                        SizeClass();\r\n                        Array.prototype.forEach.call(this.target, function (target) {\r\n                            result.push(_size.nodeByOffset(target));\r\n                        });\r\n                        return result;\r\n                    });\r\n                    flex.callers.define.nodes('html.position.byPage',            function () {\r\n                        var result = [];\r\n                        PositionClass();\r\n                        Array.prototype.forEach.call(this.target, function (target) {\r\n                            result.push(_position.byPage(target));\r\n                        });\r\n                        return result;\r\n                    });\r\n                    flex.callers.define.nodes('html.position.byWindow',          function () {\r\n                        var result = [];\r\n                        PositionClass();\r\n                        Array.prototype.forEach.call(this.target, function (target) {\r\n                            result.push(_position.byWindow(target));\r\n                        });\r\n                        return result;\r\n                    });\r\n                    flex.callers.define.nodes('html.styles.apply',               function (styles) {\r\n                        var result = [];\r\n                        StylesClass();\r\n                        Array.prototype.forEach.call(this.target, function (target) {\r\n                            result.push(_styles.apply(target, styles));\r\n                        });\r\n                        return result;\r\n                    });\r\n                    flex.callers.define.nodes('html.styles.redraw',              function () {\r\n                        var result = [];\r\n                        StylesClass();\r\n                        Array.prototype.forEach.call(this.target, function (target) {\r\n                            result.push(_styles.redraw(target));\r\n                        });\r\n                        return result;\r\n                    });\r\n                    flex.callers.define.nodes('html.styles.addClass',            function (class_name) {\r\n                        var result = [];\r\n                        StylesClass();\r\n                        Array.prototype.forEach.call(this.target, function (target) {\r\n                            result.push(_styles.addClass(target, class_name));\r\n                        });\r\n                        return result;\r\n                    });\r\n                    flex.callers.define.nodes('html.styles.removeClass',         function (class_name) {\r\n                        var result = [];\r\n                        StylesClass();\r\n                        Array.prototype.forEach.call(this.target, function (target) {\r\n                            result.push(_styles.removeClass(target, class_name));\r\n                        });\r\n                        return result;\r\n                    });\r\n                    flex.callers.define.nodes('html.scroll.position',            function () {\r\n                        var result = [];\r\n                        ScrollClass();\r\n                        Array.prototype.forEach.call(this.target, function (target) {\r\n                            result.push(_scroll.get(target));\r\n                        });\r\n                        return result;\r\n                    });\r\n                    flex.callers.define.nodes('html.find.childByAttr',           function (node_name, attribute) {\r\n                        var result = [];\r\n                        FindClass();\r\n                        Array.prototype.forEach.call(this.target, function (target) {\r\n                            result.push(_find.childByAttr(target, node_name, attribute));\r\n                        });\r\n                        return result;\r\n                    });\r\n                    flex.callers.define.nodes('html.find.childByType',           function (node_name) {\r\n                        var result = [];\r\n                        FindClass();\r\n                        Array.prototype.forEach.call(this.target, function (target) {\r\n                            result.push(_find.childByType(target, node_name));\r\n                        });\r\n                        return result;\r\n                    });\r\n                    flex.callers.define.nodes('html.find.parentByAttr',          function (attribute) {\r\n                        var result = [];\r\n                        FindClass();\r\n                        Array.prototype.forEach.call(this.target, function (target) {\r\n                            result.push(_find.parentByAttr(target, attribute));\r\n                        });\r\n                        return result;\r\n                    });\r\n                    flex.callers.define.nodes('html.find.node',                  function (selector) {\r\n                        var result = [];\r\n                        SelectorClass();\r\n                        Array.prototype.forEach.call(this.target, function (target) {\r\n                            result.push(selector.first(target, selector));\r\n                        });\r\n                        return result;\r\n                    });\r\n                    flex.callers.define.nodes('html.find.nodes',                 function (selector) {\r\n                        var result = [];\r\n                        SelectorClass();\r\n                        Array.prototype.forEach.call(this.target, function (target) {\r\n                            result.push(selector.all(target, selector));\r\n                        });\r\n                        return result;\r\n                    });\r\n                }\r\n            };\r\n            //Initialization of callers\r\n            callers.init();\r\n            //Public part\r\n            privates    = {\r\n                select  : {\r\n                    bySelector  : select.bySelector,\r\n                    fromParent  : select.fromParent\r\n                },\r\n                find    : find,\r\n                size    : sizes,\r\n                scroll  : scroll,\r\n                builder : builder,\r\n                styles  : styles,\r\n                position: position,\r\n                units   : units,\r\n                helpers : helpers\r\n            };\r\n            return {\r\n                select      : {\r\n                    bySelector: privates.select.bySelector,\r\n                    fromParent: privates.select.fromParent\r\n                },\r\n                find        : privates.find,\r\n                size        : privates.size,\r\n                scroll      : privates.scroll,\r\n                builder     : privates.builder,\r\n                styles      : styles,\r\n                position    : privates.position,\r\n                units       : units,\r\n                helpers     : privates.helpers\r\n            };\r\n        };\r\n        flex.modules.attach({\r\n            name            : 'html',\r\n            protofunction   : protofunction,\r\n        });\r\n    }\r\n}());","/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\r\n* Copyright � 2015-2016 Dmitry Astafyev. All rights reserved.                                                      *\r\n* This file (core / module) is released under the Apache License (Version 2.0). See [LICENSE] file for details.    *\r\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\r\n\r\n\r\n/// <reference path='intellisense/flex.callers.node.intellisense.js' />\r\n/// <reference path='intellisense/flex.callers.nodes.intellisense.js' />\r\n/// <reference path='intellisense/flex.callers.object.intellisense.js' />\r\n/// <reference path=\"intellisense/flex.intellisense.js\" />\r\n/// <module>\r\n///     <summary>\r\n///         Module define class Array with binding features.\r\n///     </summary>\r\n/// </module>\r\n(function () {\r\n    \"use strict\";\r\n    if (flex !== void 0) {\r\n        var protofunction = function () { };\r\n        protofunction.prototype = function () {\r\n            var privates        = null,\r\n                ExArray         = null;\r\n            ExArray     = function (defaults) {\r\n                var self        = this,\r\n                    original    = [],\r\n                    handles     = {\r\n                        'set'       : {},\r\n                        'add'       : {},\r\n                        'remove'    : {}\r\n                    },\r\n                    aliases     = {\r\n                        'set'   : ['update'],\r\n                        'add'   : ['add', 'new', 'push', 'unshift'],\r\n                        'remove': ['remove', 'del', 'delete', 'shift', 'pop'],\r\n                    },\r\n                    errors      = {\r\n                        WRONG_EVENT_NAME        : '0000: WRONG_EVENT_NAME',\r\n                        HANDLE_ISNOT_FUNCTION   : '0001: HANDLE_ISNOT_FUNCTION',\r\n                        SAME_ID_OF_HANDLE       : '0002: SAME_ID_OF_HANDLE',\r\n                        HANDLE_OR_ID_SHOULD_BE  : '0003: HANDLE_OR_ID_SHOULD_BE',\r\n                        INVALID_LENGTH          : '0004: INVALID_LENGTH'\r\n                    };\r\n                function getEventName(type) {\r\n                    var result = handles[type] !== void 0 ? type : null;\r\n                    if (result === null) {\r\n                        for (var key in aliases) {\r\n                            if (aliases[key].indexOf(type) !== -1) {\r\n                                result = key;\r\n                                break;\r\n                            }\r\n                        }\r\n                    }\r\n                    return result;\r\n                }\r\n                function executeHandles(event) {\r\n                    _object(handles[event.type]).forEach(function (id, handle) {\r\n                        handle.call(self, event);\r\n                    });\r\n                }\r\n                function setIndex(index) {\r\n                    if (self[index] === void 0) {\r\n                        Object.defineProperty(self, index, {\r\n                            configurable: true,\r\n                            enumerable  : true,\r\n                            get         : function () {\r\n                                return original[index];\r\n                            },\r\n                            set         : function (value) {\r\n                                original[index] = value;\r\n                                executeHandles({\r\n                                    type    : 'set',\r\n                                    index   : index,\r\n                                    item    : value\r\n                                });\r\n                            }\r\n                        });\r\n                    }\r\n                }\r\n                function delIndex(index) {\r\n                    if (self[index] === void 0) {\r\n                        delete self[index];\r\n                    }\r\n                }\r\n                Object.defineProperty(self, \"getOriginal\", {\r\n                    configurable: false,\r\n                    enumerable  : false,\r\n                    writable    : false,\r\n                    value       : function () {\r\n                        return original;\r\n                    }\r\n                });\r\n                Object.defineProperty(self, \"bind\", {\r\n                    configurable: false,\r\n                    enumerable  : false,\r\n                    writable    : false,\r\n                    value       : function (type, handle, id) {\r\n                        type = getEventName(type);\r\n                        if (type !== null) {\r\n                            if (typeof handle === 'function') {\r\n                                id = typeof id === 'string' ? id : flex.unique();\r\n                                if (handles[type][id] === void 0) {\r\n                                    handles[type][id] = handle;\r\n                                } else {\r\n                                    throw new Error(errors.SAME_ID_OF_HANDLE);\r\n                                }\r\n                            } else {\r\n                                throw new Error(errors.HANDLE_ISNOT_FUNCTION);\r\n                            }\r\n                        } else {\r\n                            throw new Error(errors.WRONG_EVENT_NAME);\r\n                        }\r\n                    }\r\n                });\r\n                Object.defineProperty(self, \"unbind\", {\r\n                    configurable: false,\r\n                    enumerable  : false,\r\n                    writable    : false,\r\n                    value       : function (type, handle_or_id) {\r\n                        type = getEventName(type);\r\n                        if (type !== null) {\r\n                            if (typeof handle_or_id === 'function') {\r\n                                for (var id in handles[type]) {\r\n                                    if (handles[type][id] === handle_or_id) {\r\n                                        delete handles[type][id];\r\n                                        return true;\r\n                                    }\r\n                                }\r\n                                return false;\r\n                            } else if (typeof handle_or_id === 'string') {\r\n                                if (handles[type][handle_or_id] !== void 0) {\r\n                                    delete handles[type][handle_or_id];\r\n                                    return true;\r\n                                }\r\n                                return false;\r\n                            } else {\r\n                                throw new Error(errors.HANDLE_OR_ID_SHOULD_BE);\r\n                            }\r\n                        } else {\r\n                            throw new Error(errors.WRONG_EVENT_NAME);\r\n                        }\r\n                    }\r\n                });\r\n                Object.defineProperty(self, \"pop\", {\r\n                    configurable    : false,\r\n                    enumerable      : false,\r\n                    writable        : false,\r\n                    value           : function () {\r\n                        if (original.length > -1) {\r\n                            var item = original.pop();\r\n                            delIndex(original.length);\r\n                            executeHandles({\r\n                                type    : \"remove\",\r\n                                index   : original.length,\r\n                                item    : item,\r\n                                count   : 1\r\n                            });\r\n                            return item;\r\n                        }\r\n                    }\r\n                });\r\n                Object.defineProperty(self, \"push\", {\r\n                    configurable: false,\r\n                    enumerable  : false,\r\n                    writable    : false,\r\n                    value       : function () {\r\n                        var added = Array.prototype.filter.call(arguments, function () { return true; }),\r\n                            start = original.length;\r\n                        if (added.length > 0) {\r\n                            added.forEach(function (item) {\r\n                                original.push(item);\r\n                                setIndex(original.length - 1);\r\n                            });\r\n                            executeHandles({\r\n                                type    : \"add\",\r\n                                index   : start,\r\n                                item    : added,\r\n                                count   : added.length\r\n                            });\r\n                        }\r\n                        return original.length;\r\n                    }\r\n                });\r\n                Object.defineProperty(self, \"unshift\", {\r\n                    configurable: false,\r\n                    enumerable  : false,\r\n                    writable    : false,\r\n                    value       : function () {\r\n                        var added = Array.prototype.filter.call(arguments, function () { return true; });\r\n                        if (added.length > 0) {\r\n                            added.forEach(function (item, index) {\r\n                                original.splice(index, 0, item);\r\n                                setIndex(index);\r\n                            });\r\n                            executeHandles({\r\n                                type    : \"add\",\r\n                                index   : 0,\r\n                                item    : added,\r\n                                count   : added.length\r\n                            });\r\n                        }\r\n                        return original.length;\r\n                    }\r\n                });\r\n                Object.defineProperty(self, \"shift\", {\r\n                    configurable: false,\r\n                    enumerable  : false,\r\n                    writable    : false,\r\n                    value       : function () {\r\n                        var item = null;\r\n                        if (original.length > 0) {\r\n                            item = original.shift();\r\n                            delIndex(original.length);\r\n                            executeHandles({\r\n                                type    : \"remove\",\r\n                                index   : 0,\r\n                                item    : item,\r\n                                count   : 1\r\n                            });\r\n                            return item;\r\n                        }\r\n                    }\r\n                });\r\n                Object.defineProperty(self, \"splice\", {\r\n                    configurable    : false,\r\n                    enumerable      : false,\r\n                    writable        : false,\r\n                    value           : function (start, count /*, item_0, item_1, ... item_n */) {\r\n                        var added   = [],\r\n                            removed = [],\r\n                            item    = null;\r\n                        start   = start !== void 0 ? (start > original.length - 1 ? original.length : start) : 0;\r\n                        start   = start < 0 ? original.length + start : start;\r\n                        count   = count !== void 0 ? count : original.length - start;\r\n                        removed = original.splice(start, count);\r\n                        if (removed.length > 0) {\r\n                            executeHandles({\r\n                                type    : \"remove\",\r\n                                index   : start,\r\n                                item    : removed,\r\n                                count   : removed.length\r\n                            });\r\n                            for (var i = removed.length - 1; i >= 0; i -= 1) {\r\n                                delIndex(original.length + i);\r\n                            }\r\n                        }\r\n                        added = Array.prototype.slice.call(arguments, 2, arguments.length);\r\n                        if (added.length > 0) {\r\n                            added.forEach(function (item, index) {\r\n                                original.splice(start + index, 0, item);\r\n                                setIndex(original.length - 1);\r\n                            });\r\n                            executeHandles({\r\n                                type    : \"add\",\r\n                                index   : start,\r\n                                item    : added,\r\n                                count   : added.length\r\n                            });\r\n                        }\r\n                        return removed;\r\n                    }\r\n                });\r\n                Object.defineProperty(self, \"fill\", {\r\n                    configurable    : false,\r\n                    enumerable      : false,\r\n                    writable        : false,\r\n                    value           : function (value, start, end) {\r\n                        var O               = Object(original),\r\n                            start           = start === void 0 ? 0 : start,\r\n                            end             = end === void 0 ? original.length : end,\r\n                            len             = O.length >>> 0,\r\n                            relativeStart   = start >> 0,\r\n                            k               = relativeStart < 0 ? Math.max(len + relativeStart, 0) : Math.min(relativeStart, len),\r\n                            relativeEnd     = end === undefined ? len : end >> 0,\r\n                            final           = relativeEnd < 0 ? Math.max(len + relativeEnd, 0) : Math.min(relativeEnd, len);\r\n                        while (k < final) {\r\n                            O[k] = value;\r\n                            executeHandles({\r\n                                type    : \"set\",\r\n                                index   : k,\r\n                                item    : value\r\n                            });\r\n                            k++;\r\n                        }\r\n                        return O;\r\n                    }\r\n                });\r\n                Object.defineProperty(self, \"length\", {\r\n                    configurable: false,\r\n                    enumerable  : false,\r\n                    get         : function () {\r\n                        return original.length;\r\n                    },\r\n                    set         : function (value) {\r\n                        var n = Number(value);\r\n                        if (n % 1 === 0 && n >= 0) {\r\n                            if (n < original.length) {\r\n                                self.splice(n);\r\n                            } else if (n > original.length) {\r\n                                self.push.apply(self, new Array(n - original.length));\r\n                            }\r\n                        } else {\r\n                            throw new RangeError(errors.INVALID_LENGTH);\r\n                        }\r\n                        return value;\r\n                    }\r\n                });\r\n                Object.defineProperty(self, \"concat\", {\r\n                    configurable    : false,\r\n                    enumerable      : false,\r\n                    writable        : false,\r\n                    value           : function (/*, item_0, item_1, ... item_n */) {\r\n                        var res = [].concat(original);\r\n                        for (var i = 0, ln = arguments.length; i < ln; i++) {\r\n                            if (arguments[i] instanceof Array) {\r\n                                res = res.concat(arguments[i]);\r\n                            } else if (arguments[i] instanceof ExArray) {\r\n                                res = res.concat(arguments[i].getOriginal());\r\n                            } else {\r\n                                res.push(arguments[i]);\r\n                            }\r\n                        }\r\n                        return new ExArray(res);\r\n                        //return res;\r\n                    }\r\n                });\r\n                Object.getOwnPropertyNames(Array.prototype).forEach(function (name) {\r\n                    if (self[name] === void 0) {\r\n                        Object.defineProperty(self, name, {\r\n                            configurable: false,\r\n                            enumerable  : false,\r\n                            writable    : false,\r\n                            value       : Array.prototype[name]\r\n                        });\r\n                    }\r\n                });\r\n                if (defaults instanceof Array) {\r\n                    self.push.apply(self, defaults);\r\n                }\r\n            };\r\n            privates    = {\r\n                ExArray: ExArray\r\n            };\r\n            return {\r\n                ExArray: privates.ExArray\r\n            };\r\n        };\r\n        flex.modules.attach({\r\n            name            : 'types.array',\r\n            protofunction   : protofunction\r\n        });\r\n    }\r\n}());\r\n","/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\r\n* Copyright � 2015-2016 Dmitry Astafyev. All rights reserved.                                                      *\r\n* This file (core / module) is released under the Apache License (Version 2.0). See [LICENSE] file for details.    *\r\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\r\n\r\n\r\n/// <reference path='intellisense/flex.callers.node.intellisense.js' />\r\n/// <reference path='intellisense/flex.callers.nodes.intellisense.js' />\r\n/// <reference path='intellisense/flex.callers.object.intellisense.js' />\r\n/// <reference path=\"intellisense/flex.intellisense.js\" />\r\n/// <module>\r\n///     <summary>\r\n///         Module control movement of some node on screen. Works only with position: absolute.\r\n///     </summary>\r\n/// </module>\r\n(function () {\r\n    \"use strict\";\r\n    if (flex !== void 0) {\r\n        var protofunction = function () { };\r\n        protofunction.prototype = function () {\r\n            /* Description\r\n            * data-flex-ui-window-move-container=\"id\"\r\n            * data-flex-ui-window-move-hook=\"id\"\r\n            * */\r\n            var //Variables\r\n                privates        = null,\r\n                render          = null,\r\n                coreEvents      = null,\r\n                patterns        = null,\r\n                settings        = null;\r\n            settings = {\r\n                CONTAINER           : 'data-flex-ui-window-move-container',\r\n                HOOK                : 'data-flex-ui-window-move-hook',\r\n                INITED              : 'data-flex-window-move-inited',\r\n                GLOBAL_GROUP        : 'flex-window-move',\r\n                GLOBAL_EVENT_FLAG   : 'flex-window-move-global-event',\r\n                GLOBAL_CURRENT      : 'flex-window-move-global-current',\r\n                GLOBAL_EVENT_ID     : 'flex-window-move-global-event-id',\r\n                STATE_STORAGE       : 'flex-window-move-instance-state',\r\n            };\r\n            function init(id) {\r\n                var id          = id || null,\r\n                    containers  = _nodes('*[' + settings.CONTAINER + (id !== null ? '=\"' + id + '\"' : '') + ']:not([' + settings.INITED + '])').target;\r\n                if (containers !== null) {\r\n                    Array.prototype.forEach.call(\r\n                        containers,\r\n                        function (container) {\r\n                            var id      = container.getAttribute(settings.CONTAINER),\r\n                                hooks   = null;\r\n                            if (id !== '' && id !== null) {\r\n                                hooks = _nodes('*[' + settings.HOOK + '=\"' + id + '\"]').target;\r\n                                if (hooks !== null) {\r\n                                    render.attach(container, hooks, id);\r\n                                    coreEvents.attach(container, id);\r\n                                }\r\n                            }\r\n                            container.setAttribute(settings.INITED, true);\r\n                        }\r\n                    );\r\n                }\r\n            };\r\n            render      = {\r\n                attach  : function (container, hooks, id) {\r\n                    Array.prototype.forEach.call(\r\n                        hooks,\r\n                        function (hook) {\r\n                            _node(hook).events().add(\r\n                                'mousedown',\r\n                                function (event) {\r\n                                    render.start(event, container, hook, id);\r\n                                },\r\n                                id\r\n                            );\r\n                        }\r\n                    );\r\n                },\r\n                start   : function (event, container, hook, id) {\r\n                    function getPosition(node) {\r\n                        if (node.currentStyle) {\r\n                            if (node.currentStyle.position) {\r\n                                return node.currentStyle.position;\r\n                            }\r\n                        }\r\n                        if (window.getComputedStyle) {\r\n                            return window.getComputedStyle(node).position;\r\n                        }\r\n                        return null;\r\n                    }\r\n                    var pos         = null,\r\n                        scrl        = null,\r\n                        isFixed     = null;\r\n                    if (flex.overhead.objecty.get(container, settings.STATE_STORAGE, false, false) === false) {\r\n                        pos         = _node(container).html().position().byPage();\r\n                        scrl        = _node(container.parentNode).html().scroll().position();\r\n                        isFixed     = getPosition(container) !== 'fixed' ? false : true;\r\n                        flex.overhead.globaly.set(\r\n                            settings.GLOBAL_GROUP,\r\n                            settings.GLOBAL_CURRENT,\r\n                            {\r\n                                clientX     : event.flex.clientX,\r\n                                clientY     : event.flex.clientY,\r\n                                offsetX     : event.flex.offsetX,\r\n                                offsetY     : event.flex.offsetY,\r\n                                pageX       : event.flex.pageX,\r\n                                pageY       : event.flex.pageY,\r\n                                hook        : hook,\r\n                                container   : container,\r\n                                id          : id,\r\n                                oldX        : event.flex.pageX,\r\n                                oldY        : event.flex.pageY,\r\n                                posX        : pos.left + (isFixed === false ? scrl.left() : 0),\r\n                                posY        : pos.top + (isFixed === false ? scrl.top() : 0),\r\n                            }\r\n                        );\r\n                        return event.flex.stop();\r\n                    } else {\r\n                        return true;\r\n                    }\r\n                },\r\n                move    : function(event){\r\n                    var instance    = flex.overhead.globaly.get(settings.GLOBAL_GROUP, settings.GLOBAL_CURRENT),\r\n                        container   = null;\r\n                    if (instance !== null) {\r\n                        container               = instance.container;\r\n                        instance.posX           = (instance.posX - (instance.oldX - event.flex.pageX));\r\n                        instance.posY           = (instance.posY - (instance.oldY - event.flex.pageY));\r\n                        container.style.left    = instance.posX + 'px';\r\n                        container.style.top     = instance.posY + 'px';\r\n                        instance.oldX           = event.flex.pageX;\r\n                        instance.oldY           = event.flex.pageY;\r\n                    }\r\n                    return event.flex.stop();\r\n                },\r\n                stop    : function(event) {\r\n                    flex.overhead.globaly.del(settings.GLOBAL_GROUP, settings.GLOBAL_CURRENT);\r\n                },\r\n                global: {\r\n                    attach: function () {\r\n                        var isAttached  = flex.overhead.globaly.get(settings.GLOBAL_GROUP, settings.GLOBAL_EVENT_FLAG);\r\n                        if (isAttached !== true) {\r\n                            flex.overhead.globaly.set(settings.GLOBAL_GROUP, settings.GLOBAL_EVENT_FLAG, true);\r\n                            _node(window).events().add(\r\n                                'mousemove',\r\n                                function (event) {\r\n                                    render.move(event);\r\n                                },\r\n                                settings.GLOBAL_EVENT_ID\r\n                            );\r\n                            _node(window).events().add(\r\n                                'mouseup',\r\n                                function (event) {\r\n                                    render.stop(event);\r\n                                },\r\n                                settings.GLOBAL_EVENT_ID\r\n                            );\r\n                        }\r\n                    }\r\n                }\r\n            };\r\n            coreEvents  = {\r\n                attach: function (container, id) {\r\n                    flex.events.core.listen(\r\n                        flex.registry.events.ui.window.maximize.GROUP,\r\n                        flex.registry.events.ui.window.maximize.MAXIMIZED,\r\n                        function (params) {\r\n                            return coreEvents.onRefreshByParent(params.container, container, flex.registry.events.ui.window.maximize.MAXIMIZED);\r\n                        },\r\n                        settings.STATE_STORAGE + id,\r\n                        false\r\n                    );\r\n                    flex.events.core.listen(\r\n                        flex.registry.events.ui.window.maximize.GROUP,\r\n                        flex.registry.events.ui.window.maximize.RESTORED,\r\n                        function (params) {\r\n                            return coreEvents.onRefreshByParent(params.container, container, flex.registry.events.ui.window.maximize.RESTORED);\r\n                        },\r\n                        settings.STATE_STORAGE + id,\r\n                        false\r\n                    );\r\n                },\r\n                onRefreshByParent: function (parent, container, state) {\r\n                    if (parent === container) {\r\n                        switch (state) {\r\n                            case flex.registry.events.ui.window.maximize.MAXIMIZED:\r\n                                flex.overhead.objecty.set(container, settings.STATE_STORAGE, true, true);\r\n                                break;\r\n                            case flex.registry.events.ui.window.maximize.RESTORED:\r\n                                flex.overhead.objecty.set(container, settings.STATE_STORAGE, false, true);\r\n                                break;\r\n                        }\r\n                    }\r\n                    return false;\r\n                }\r\n            };\r\n            patterns    = {\r\n                attach: function () {\r\n                    if (flex.oop.namespace.get('flex.registry.events.ui.patterns.GROUP') !== null) {\r\n                        flex.events.core.listen(flex.registry.events.ui.patterns.GROUP, flex.registry.events.ui.patterns.MOUNTED, function (nodes) {\r\n                            var context = nodes.length !== void 0 ? (nodes.length > 0 ? nodes : null) : null;\r\n                            if (context !== null) {\r\n                                context.forEach(function (context) {\r\n                                    if (_node('*[' + settings.CONTAINER + ']:not([' + settings.INITED + '])', false, context).target !== null) {\r\n                                        init();\r\n                                    }\r\n                                });\r\n                            }\r\n                        });\r\n                    }\r\n                }\r\n            };\r\n            privates = {\r\n                init : init\r\n            };\r\n            render.global.attach();\r\n            patterns.attach();\r\n            //Init modules\r\n            if (flex.libraries !== void 0) {\r\n                if (flex.libraries.events !== void 0 && flex.libraries.html !== void 0) {\r\n                    flex.libraries.events.create();\r\n                    flex.libraries.html.create();\r\n                }\r\n            }\r\n            return {\r\n                init : privates.init\r\n            };\r\n        };\r\n        flex.modules.attach({\r\n            name            : 'ui.window.move',\r\n            protofunction   : protofunction,\r\n            reference       : ['flex.events', 'flex.html']\r\n        });\r\n    }\r\n}());","/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\r\n* Copyright � 2015-2016 Dmitry Astafyev. All rights reserved.                                                      *\r\n* This file (core / module) is released under the Apache License (Version 2.0). See [LICENSE] file for details.    *\r\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\r\n\r\n \r\n/// <reference path='intellisense/flex.callers.node.intellisense.js' />\r\n/// <reference path='intellisense/flex.callers.nodes.intellisense.js' />\r\n/// <reference path='intellisense/flex.callers.object.intellisense.js' />\r\n/// <reference path=\"intellisense/flex.intellisense.js\" />\r\n/// <module>\r\n///     <summary>\r\n///         Module control resizing of some node on screen. Works only with position: absolute.\r\n///     </summary>\r\n/// </module>\r\n(function () {\r\n    \"use strict\";\r\n    if (flex !== void 0) {\r\n        var protofunction = function () { };\r\n        protofunction.prototype = function () {\r\n            /* Description\r\n                * data-flex-ui-window-resize-container=\"id\"\r\n                *\r\n                * Next field isn't necessary and can be skipped. You should define it for situation, when container get his position form parent.\r\n                * For example container has top:50% from parent. In this case you should define such parent by next mark\r\n                * data-flex-ui-window-resize-position-parent=\"id\"\r\n                * */\r\n            var //Variables\r\n                privates        = null,\r\n                render          = null,\r\n                patterns        = null,\r\n                coreEvents      = null,\r\n                settings        = null;\r\n            settings = {\r\n                CONTAINER           : 'data-flex-ui-window-resize-container',\r\n                INITED              : 'data-flex-window-resize-inited',\r\n                HOOK                : 'data-flex-window-resize-hook',\r\n                HOOKS               : ['top', 'left', 'right', 'bottom', 'corner'],\r\n                HOOKS_STYLE         : {\r\n                    top     : { node: 'div', style: { position: 'absolute', zIndex: 1, height: '6px', width: '100%', top: '0px', left: '0px', cursor: 'n-resize' } },\r\n                    bottom  : { node: 'div', style: { position: 'absolute', zIndex: 1, height: '6px', width: '100%', bottom: '0px', left: '0px', cursor: 'n-resize' } },\r\n                    left    : { node: 'div', style: { position: 'absolute', zIndex: 1, height: '100%', width: '6px', top: '0px', left: '0px', cursor: 'e-resize' } },\r\n                    right   : { node: 'div', style: { position: 'absolute', zIndex: 1, height: '100%', width: '6px', top: '0px', right: '0px', cursor: 'e-resize'} },\r\n                    corner  : { node: 'div', style: { position: 'absolute', zIndex: 1, height: '10px',    width: '10px',   bottom: '0px',  right: '0px', cursor: 'nw-resize' } }\r\n                },\r\n                POSITION_PARENT     : 'data-flex-ui-window-resize-position-parent',\r\n                GLOBAL_GROUP        : 'flex-window-resize',\r\n                GLOBAL_EVENT_FLAG   : 'flex-window-resize-global-event',\r\n                GLOBAL_CURRENT      : 'flex-window-resize-global-current',\r\n                GLOBAL_EVENT_ID     : 'flex-window-resize-global-event-id',\r\n                STATE_STORAGE       : 'flex-window-resize-instance-state',\r\n            };\r\n            function init(id) {\r\n                var id          = id || null,\r\n                    containers  = _nodes('*[' + settings.CONTAINER + (id !== null ? '=\"' + id + '\"' : '') + ']:not([' + settings.INITED + '])').target;\r\n                if (containers !== null) {\r\n                    Array.prototype.forEach.call(\r\n                        containers,\r\n                        function (container) {\r\n                            var id = container.getAttribute(settings.CONTAINER);\r\n                            if (id !== null && id !== '') {\r\n                                Array.prototype.forEach.call(\r\n                                    settings.HOOKS,\r\n                                    function (hook) {\r\n                                        var hooks = render.hooks.get(id, container, hook);\r\n                                        render.attach(container, hooks, hook, id);\r\n                                        coreEvents.attach(container, id);\r\n                                    }\r\n                                );\r\n                            }\r\n                            container.setAttribute(settings.INITED, true);\r\n                        }\r\n                    );\r\n                }\r\n            };\r\n            render          = {\r\n                position    : {\r\n                    getParent   : function (id) {\r\n                        var parent = _node('*[' + settings.POSITION_PARENT + '=\"' + id + '\"' + ']');\r\n                        return parent !== null ? parent.target : null;\r\n                    }\r\n                },\r\n                hooks       : {\r\n                    make    : function (container, hook) {\r\n                        var node = document.createElement(settings.HOOKS_STYLE[hook].node);\r\n                        for (var property in settings.HOOKS_STYLE[hook].style) {\r\n                            node.style[property] = settings.HOOKS_STYLE[hook].style[property];\r\n                        }\r\n                        container.appendChild(node);\r\n                        return node;\r\n                    },\r\n                    get     : function (id, container, hook) {\r\n                        var hooks = _nodes('*[' + settings.CONTAINER + '=\"' + id + '\"' + '][' + settings.HOOK + '=\"' + hook + '\"' + ']:not([' + settings.INITED + '])').target;\r\n                        if (hooks.length === 0) {\r\n                            hooks = [];\r\n                            hooks.push(render.hooks.make(container, hook));\r\n                        }\r\n                        return hooks;\r\n                    }\r\n                },\r\n                attach  : function (container, hooks, direction, id) {\r\n                    var position_parent = render.position.getParent(id);\r\n                    Array.prototype.forEach.call(\r\n                        hooks,\r\n                        function (hook) {\r\n                            _node(hook).events().add(\r\n                                'mousedown',\r\n                                function (event) {\r\n                                    render.start(event, container, hook, direction, position_parent, id);\r\n                                },\r\n                                id\r\n                            );\r\n                        }\r\n                    );\r\n                },\r\n                start: function (event, container, hook, direction, position_parent, id) {\r\n                    function getPosition(node) {\r\n                        if (node.currentStyle) {\r\n                            if (node.currentStyle.position) {\r\n                                return node.currentStyle.position;\r\n                            }\r\n                        }\r\n                        if (window.getComputedStyle) {\r\n                            return window.getComputedStyle(node).position;\r\n                        }\r\n                        return null;\r\n                    }\r\n                    var size        = null,\r\n                        pos         = null,\r\n                        scrl        = null,\r\n                        isFixed     = null;\r\n                    if (flex.overhead.objecty.get(container, settings.STATE_STORAGE, false, false) === false) {\r\n                        size        = _node(container).html().size().get();\r\n                        pos         = _node(position_parent !== null ? position_parent : container).html().position().byPage();\r\n                        scrl        = _node(container.parentNode).html().scroll().position();\r\n                        isFixed     = getPosition(container) !== 'fixed' ? false : true;\r\n                        flex.overhead.globaly.set(\r\n                            settings.GLOBAL_GROUP,\r\n                            settings.GLOBAL_CURRENT,\r\n                            {\r\n                                clientX         : event.flex.clientX,\r\n                                clientY         : event.flex.clientY,\r\n                                offsetX         : event.flex.offsetX,\r\n                                offsetY         : event.flex.offsetY,\r\n                                pageX           : event.flex.pageX,\r\n                                pageY           : event.flex.pageY,\r\n                                hook            : hook,\r\n                                direction       : direction,\r\n                                container       : container,\r\n                                position_parent : position_parent,\r\n                                id              : id,\r\n                                oldX            : event.flex.pageX,\r\n                                oldY            : event.flex.pageY,\r\n                                posX            : pos.left + (isFixed === false ? scrl.left() : 0),\r\n                                posY            : pos.top + (isFixed === false ? scrl.top() : 0),\r\n                                width           : size.width,\r\n                                height          : size.height\r\n                            }\r\n                        );\r\n                        return event.flex.stop();\r\n                    } else {\r\n                        return true;\r\n                    }\r\n                },\r\n                move    : function(event){\r\n                    var instance            = flex.overhead.globaly.get(settings.GLOBAL_GROUP, settings.GLOBAL_CURRENT),\r\n                        container           = null,\r\n                        position_container  = null;\r\n                    if (instance !== null) {\r\n                        container           = instance.container;\r\n                        position_container  = instance.position_parent !== null ? instance.position_parent : container;\r\n                        switch (instance.direction) {\r\n                            case 'top':\r\n                                instance.posY                   = (instance.posY - (instance.oldY - event.flex.pageY));\r\n                                instance.height                 = (instance.height + (instance.oldY - event.flex.pageY));\r\n                                container.style.height          = instance.height + 'px';\r\n                                position_container.style.top    = instance.posY + 'px';\r\n                                break;\r\n                            case 'left':\r\n                                instance.posX                   = (instance.posX - (instance.oldX - event.flex.pageX));\r\n                                instance.width                  = (instance.width + (instance.oldX - event.flex.pageX));\r\n                                container.style.width           = instance.width + 'px';\r\n                                position_container.style.left   = instance.posX + 'px';\r\n                                break;\r\n                            case 'bottom':\r\n                                instance.height                 = (instance.height - (instance.oldY - event.flex.pageY));\r\n                                container.style.height          = instance.height + 'px';\r\n                                break;\r\n                            case 'right':\r\n                                instance.width                  = (instance.width - (instance.oldX - event.flex.pageX));\r\n                                container.style.width           = instance.width + 'px';\r\n                                break;\r\n                            case 'corner':\r\n                                instance.height                 = (instance.height - (instance.oldY - event.flex.pageY));\r\n                                container.style.height          = instance.height + 'px';\r\n                                instance.width                  = (instance.width - (instance.oldX - event.flex.pageX));\r\n                                container.style.width           = instance.width + 'px';\r\n                                break;\r\n                        }\r\n                        instance.oldX = event.flex.pageX;\r\n                        instance.oldY = event.flex.pageY;\r\n                        //Run external events in background\r\n                        setTimeout(\r\n                            function () {\r\n                                flex.events.core.fire(\r\n                                    flex.registry.events.ui.window.resize.GROUP,\r\n                                    flex.registry.events.ui.window.resize.REFRESH,\r\n                                    { container: instance.container, id: instance.id }\r\n                                );\r\n                            },\r\n                            10\r\n                        );\r\n                    }\r\n                    return event.flex.stop();\r\n                },\r\n                stop    : function(event) {\r\n                    var instance = flex.overhead.globaly.get(settings.GLOBAL_GROUP, settings.GLOBAL_CURRENT);\r\n                    if (instance !== null) {\r\n                        flex.events.core.fire(\r\n                            flex.registry.events.ui.window.resize.GROUP,\r\n                            flex.registry.events.ui.window.resize.FINISH,\r\n                            { container: instance.container, id: instance.id }\r\n                        );\r\n                    }\r\n                    flex.overhead.globaly.del(settings.GLOBAL_GROUP, settings.GLOBAL_CURRENT);\r\n                },\r\n                global: {\r\n                    attach: function () {\r\n                        var isAttached  = flex.overhead.globaly.get(settings.GLOBAL_GROUP, settings.GLOBAL_EVENT_FLAG);\r\n                        if (isAttached !== true) {\r\n                            flex.overhead.globaly.set(settings.GLOBAL_GROUP, settings.GLOBAL_EVENT_FLAG, true);\r\n                            _node(window).events().add(\r\n                                'mousemove',\r\n                                function (event) {\r\n                                    render.move(event);\r\n                                },\r\n                                settings.GLOBAL_EVENT_ID\r\n                            );\r\n                            _node(window).events().add(\r\n                                'mouseup',\r\n                                function (event) {\r\n                                    render.stop(event);\r\n                                },\r\n                                settings.GLOBAL_EVENT_ID\r\n                            );\r\n                        }\r\n                    }\r\n                }\r\n            };\r\n            coreEvents      = {\r\n                attach: function (container, id) {\r\n                    flex.events.core.listen(\r\n                        flex.registry.events.ui.window.maximize.GROUP,\r\n                        flex.registry.events.ui.window.maximize.MAXIMIZED,\r\n                        function (params) {\r\n                            return coreEvents.onRefreshByParent(params.container, container, flex.registry.events.ui.window.maximize.MAXIMIZED);\r\n                        },\r\n                        settings.STATE_STORAGE + id,\r\n                        false\r\n                    );\r\n                    flex.events.core.listen(\r\n                        flex.registry.events.ui.window.maximize.GROUP,\r\n                        flex.registry.events.ui.window.maximize.RESTORED,\r\n                        function (params) {\r\n                            return coreEvents.onRefreshByParent(params.container, container, flex.registry.events.ui.window.maximize.RESTORED);\r\n                        },\r\n                        settings.STATE_STORAGE + id,\r\n                        false\r\n                    );\r\n                },\r\n                onRefreshByParent: function (parent, container, state) {\r\n                    if (parent === container) {\r\n                        switch (state) {\r\n                            case flex.registry.events.ui.window.maximize.MAXIMIZED:\r\n                                flex.overhead.objecty.set(container, settings.STATE_STORAGE, true, true);\r\n                                break;\r\n                            case flex.registry.events.ui.window.maximize.RESTORED:\r\n                                flex.overhead.objecty.set(container, settings.STATE_STORAGE, false, true);\r\n                                break;\r\n                        }\r\n                    }\r\n                    return false;\r\n                }\r\n            };\r\n            patterns        = {\r\n                attach: function () {\r\n                    if (flex.oop.namespace.get('flex.registry.events.ui.patterns.GROUP') !== null) {\r\n                        flex.events.core.listen(flex.registry.events.ui.patterns.GROUP, flex.registry.events.ui.patterns.MOUNTED, function (nodes) {\r\n                            var context = nodes.length !== void 0 ? (nodes.length > 0 ? nodes : null) : null;\r\n                            if (context !== null) {\r\n                                context.forEach(function (context) {\r\n                                    if (_node('*[' + settings.CONTAINER + ']:not([' + settings.INITED + '])', false, context).target !== null) {\r\n                                        init();\r\n                                    }\r\n                                });\r\n                            }\r\n                        });\r\n                    }\r\n                }\r\n            };\r\n            privates = {\r\n                init : init\r\n            };\r\n            (function () {\r\n                flex.registry.events.ui                 === void 0 && (flex.registry.events.ui = {});\r\n                flex.registry.events.ui.window          === void 0 && (flex.registry.events.ui.window = {});\r\n                flex.registry.events.ui.window.resize   === void 0 && (flex.registry.events.ui.window.resize = {\r\n                    GROUP   : 'flex.ui.window.resize',\r\n                    REFRESH : 'refresh',\r\n                    FINISH  : 'finish',\r\n                });\r\n            }());\r\n            render.global.attach();\r\n            patterns.attach();\r\n            //Init modules\r\n            if (flex.libraries !== void 0) {\r\n                if (flex.libraries.events !== void 0 && flex.libraries.html !== void 0) {\r\n                    flex.libraries.events.create();\r\n                    flex.libraries.html.create();\r\n                }\r\n            }\r\n            return {\r\n                init : privates.init\r\n            };\r\n        };\r\n        flex.modules.attach({\r\n            name            : 'ui.window.resize',\r\n            protofunction   : protofunction,\r\n            reference       : ['flex.events', 'flex.html']\r\n        });\r\n    }\r\n}());","/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\r\n* Copyright � 2015-2016 Dmitry Astafyev. All rights reserved.                                                      *\r\n* This file (core / module) is released under the Apache License (Version 2.0). See [LICENSE] file for details.    *\r\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\r\n\r\n\r\n/// <reference path='intellisense/flex.callers.node.intellisense.js' />\r\n/// <reference path='intellisense/flex.callers.nodes.intellisense.js' />\r\n/// <reference path='intellisense/flex.callers.object.intellisense.js' />\r\n/// <reference path=\"intellisense/flex.intellisense.js\" />\r\n/// <module>\r\n///     <summary>\r\n///         Module control movement of some node on screen. Works only with position: absolute.\r\n///     </summary>\r\n/// </module>\r\n(function () {\r\n    \"use strict\";\r\n    if (flex !== void 0) {\r\n        var protofunction = function () { };\r\n        protofunction.prototype = function () {\r\n            /* Description\r\n            * data-flex-ui-window-focus\r\n            * data-flex-ui-window-move-hook\r\n            * */\r\n            var //Variables\r\n                privates        = null,\r\n                global          = null,\r\n                processing      = null,\r\n                settings        = null,\r\n                patterns        = null;\r\n            settings = {\r\n                CONTAINER           : 'data-flex-ui-window-focus',\r\n                INITED              : 'data-flex-window-focus-inited',\r\n                GLOBAL_GROUP        : 'flex-window-focus-global-group',\r\n                GLOBAL_EVENT_FLAG   : 'flex-window-focus-global-event',\r\n                GLOBAL_CURRENT      : 'flex-window-focus-global-current',\r\n                GLOBAL_EVENT_ID     : 'flex-window-focus-global-event-id',\r\n                FOCUSED_ZINDEX      : 1000\r\n            };\r\n            function init(id) {\r\n                var id          = id || null,\r\n                    containers  = _nodes('*[' + settings.CONTAINER + (id !== null ? '=\"' + id + '\"' : '') + ']:not([' + settings.INITED + '])').target;\r\n                if (containers !== null) {\r\n                    Array.prototype.forEach.call(\r\n                        containers,\r\n                        function (container) {\r\n                            var id = container.getAttribute(settings.CONTAINER);\r\n                            if (id === '' || id === null) {\r\n                                container.setAttribute(settings.CONTAINER, flex.unique());\r\n                            }\r\n                            container.setAttribute(settings.INITED, true);\r\n                        }\r\n                    );\r\n                }\r\n            };\r\n            global      = {\r\n                attach: function () {\r\n                    var isAttached  = flex.overhead.globaly.get(settings.GLOBAL_GROUP, settings.GLOBAL_EVENT_FLAG);\r\n                    if (isAttached !== true) {\r\n                        flex.overhead.globaly.set(settings.GLOBAL_GROUP, settings.GLOBAL_EVENT_FLAG, true);\r\n                        _node(window).events().add(\r\n                            'click',\r\n                            function (event) {\r\n                                processing.onClick(event);\r\n                                return true;\r\n                            },\r\n                            settings.GLOBAL_EVENT_ID\r\n                        );\r\n                    }\r\n                },\r\n            };\r\n            processing  = {\r\n                getContainer    : function(node){\r\n                    var id          = null,\r\n                        container   = null;\r\n                    if (typeof node.getAttribute === 'function') {\r\n                        id = node.getAttribute(settings.CONTAINER);\r\n                        if (id !== '' && id !== null) {\r\n                            return {\r\n                                container   : node,\r\n                                id          : id\r\n                            };\r\n                        }\r\n                    }\r\n                    container = _node(node).html().find().parentByAttr({ name: settings.CONTAINER, value: null });\r\n                    if (container !== null) {\r\n                        return {\r\n                            container   : container,\r\n                            id          : container.getAttribute(settings.CONTAINER)\r\n                        };\r\n                    }\r\n                    return null;\r\n                },\r\n                history         : {\r\n                    is      : function (id) {\r\n                        return (flex.overhead.globaly.get(settings.GLOBAL_GROUP, settings.GLOBAL_CURRENT) !== id ? false : true);\r\n                    },\r\n                    set     : function (id) {\r\n                        flex.overhead.globaly.set(settings.GLOBAL_GROUP, settings.GLOBAL_CURRENT, id);\r\n                    },\r\n                    get     : function () {\r\n                        return flex.overhead.globaly.get(settings.GLOBAL_GROUP, settings.GLOBAL_CURRENT);\r\n                    },\r\n                    del     : function () {\r\n                        flex.overhead.globaly.del(settings.GLOBAL_GROUP, settings.GLOBAL_CURRENT);\r\n                    }\r\n                },\r\n                onClick         : function (event) {\r\n                    var container   = processing.getContainer(event.flex.target),\r\n                        previous    = processing.history.get();\r\n                    if (previous !== null) {\r\n                        processing.focus.unset(previous);\r\n                    }\r\n                    if (container !== null) {\r\n                        if (processing.history.is(container.id) === false) {\r\n                            processing.focus.set(container.id);\r\n                        }\r\n                    }\r\n                },\r\n                focus           : {\r\n                    zIndex  : function(id, value){\r\n                        var container   = _node('*[' + settings.CONTAINER + '=\"' + id + '\"' + ']').target;\r\n                        if (container !== null) {\r\n                            container.style.zIndex = value;\r\n                        }\r\n                    },\r\n                    set     : function(id){\r\n                        processing.focus.zIndex(id, settings.FOCUSED_ZINDEX);\r\n                        processing.history.set(id);\r\n                    },\r\n                    unset   : function(id){\r\n                        processing.focus.zIndex(id, '');\r\n                        processing.history.del(id);\r\n                    },\r\n                },\r\n            };\r\n            patterns    = {\r\n                attach: function () {\r\n                    if (flex.oop.namespace.get('flex.registry.events.ui.patterns.GROUP') !== null) {\r\n                        flex.events.core.listen(flex.registry.events.ui.patterns.GROUP, flex.registry.events.ui.patterns.MOUNTED, function (nodes) {\r\n                            var context = nodes.length !== void 0 ? (nodes.length > 0 ? nodes : null) : null;\r\n                            if (context !== null) {\r\n                                context.forEach(function (context) {\r\n                                    if (_node('*[' + settings.CONTAINER + ']:not([' + settings.INITED + '])', false, context).target !== null) {\r\n                                        init();\r\n                                    }\r\n                                });\r\n                            }\r\n                        });\r\n                    }\r\n                }\r\n            };\r\n            privates    = {\r\n                init : init\r\n            };\r\n            global.attach();\r\n            patterns.attach();\r\n            //Init modules\r\n            if (flex.libraries !== void 0) {\r\n                if (flex.libraries.events !== void 0 && flex.libraries.html !== void 0) {\r\n                    flex.libraries.events.create();\r\n                    flex.libraries.html.create();\r\n                }\r\n            }\r\n            return {\r\n                init : privates.init\r\n            };\r\n        };\r\n        flex.modules.attach({\r\n            name            : 'ui.window.focus',\r\n            protofunction   : protofunction,\r\n            reference       : ['flex.events', 'flex.html']\r\n        });\r\n    }\r\n}());","/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\r\n* Copyright � 2015-2016 Dmitry Astafyev. All rights reserved.                                                      *\r\n* This file (core / module) is released under the Apache License (Version 2.0). See [LICENSE] file for details.    *\r\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\r\n\r\n\r\n/// <reference path='intellisense/flex.callers.node.intellisense.js' />\r\n/// <reference path='intellisense/flex.callers.nodes.intellisense.js' />\r\n/// <reference path='intellisense/flex.callers.object.intellisense.js' />\r\n/// <reference path=\"intellisense/flex.intellisense.js\" />\r\n/// <module>\r\n///     <summary>\r\n///         Module control movement of some node on screen. Works only with position: absolute.\r\n///     </summary>\r\n/// </module>\r\n(function () {\r\n    \"use strict\";\r\n    if (flex !== void 0) {\r\n        var protofunction = function () { };\r\n        protofunction.prototype = function () {\r\n            /* Description\r\n            * data-flex-ui-window-maximize\r\n            * data-flex-window-maximize-hook\r\n            * */\r\n            var //Variables\r\n                privates        = null,\r\n                global          = null,\r\n                patterns        = null,\r\n                processing      = null,\r\n                settings        = null;\r\n            settings = {\r\n                CONTAINER           : 'data-flex-ui-window-maximize',\r\n                HOOK                : 'data-flex-window-maximize-hook',\r\n                INITED              : 'data-flex-window-maximize-inited',\r\n                STATE               : 'data-flex-window-is-maximized',\r\n                STORAGE             : 'flex-window-maximize-storage',\r\n            };\r\n            function init(id) {\r\n                var id          = id || null,\r\n                    containers  = _nodes('*[' + settings.CONTAINER + (id !== null ? '=\"' + id + '\"' : '') + ']:not([' + settings.INITED + '])').target;\r\n                if (containers !== null) {\r\n                    Array.prototype.forEach.call(\r\n                        containers,\r\n                        function (container) {\r\n                            var id      = container.getAttribute(settings.CONTAINER),\r\n                                hooks   = null;\r\n                            if (id !== '' && id !== null) {\r\n                                hooks = _nodes('*[' + settings.HOOK + '=\"' + id + '\"]').target;\r\n                                if (hooks !== null) {\r\n                                    processing.attach(container, hooks, id);\r\n                                }\r\n                            }\r\n                            container.setAttribute(settings.INITED, true    );\r\n                            container.setAttribute(settings.STATE, 'false'  );\r\n                            flex.overhead.objecty.set(container, settings.STORAGE, { maximazed: false }, true);\r\n                        }\r\n                    );\r\n                }\r\n            };\r\n            processing = {\r\n                attach  : function (container, hooks, id) {\r\n                    Array.prototype.forEach.call(\r\n                        hooks,\r\n                        function (hook, index) {\r\n                            _node(hook).events().add(\r\n                                'click',\r\n                                function (event) {\r\n                                    processing.onClick(event, container, id);\r\n                                    return true;\r\n                                },\r\n                                id + '_' + index\r\n                            );\r\n                        }\r\n                    );\r\n                },\r\n                onClick : function (event, container, id) {\r\n                    var storage = flex.overhead.objecty.get(container, settings.STORAGE, false);\r\n                    if (storage !== null) {\r\n                        if (storage.maximazed === false) {\r\n                            processing.actions.maximaze(container, storage, id);\r\n                        } else {\r\n                            processing.actions.restore(container, storage, id);\r\n                        }\r\n                        //Run external events in background\r\n                        setTimeout(\r\n                            function () {\r\n                                flex.events.core.fire(\r\n                                    flex.registry.events.ui.window.maximize.GROUP,\r\n                                    flex.registry.events.ui.window.maximize.CHANGE,\r\n                                    { container: container, id: id }\r\n                                );\r\n                            },\r\n                            10\r\n                        );\r\n                    }\r\n                },\r\n                actions: {\r\n                    maximaze: function (container, storage, id) {\r\n                        storage.maximazed   = true;\r\n                        storage.size        = {\r\n                            position: container.style.position  !== '' ? container.style.position   : false,\r\n                            width   : container.style.width     !== '' ? container.style.width      : false,\r\n                            height  : container.style.height    !== '' ? container.style.height     : false,\r\n                            left    : container.style.left      !== '' ? container.style.left       : false,\r\n                            top     : container.style.top       !== '' ? container.style.top        : false,\r\n                        };\r\n                        container.style.position    = 'fixed';\r\n                        container.style.width       = '100%';\r\n                        container.style.height      = '100%';\r\n                        container.style.left        = '0px';\r\n                        container.style.top         = '0px';\r\n                        container.setAttribute(settings.STATE, 'true');\r\n                        //Run external events in background\r\n                        setTimeout(\r\n                            function () {\r\n                                flex.events.core.fire(\r\n                                    flex.registry.events.ui.window.maximize.GROUP,\r\n                                    flex.registry.events.ui.window.maximize.MAXIMIZED,\r\n                                    { container: container, id: id }\r\n                                );\r\n                            },\r\n                            10\r\n                        );\r\n                    },\r\n                    restore : function (container, storage, id) {\r\n                        storage.maximazed           = false;\r\n                        container.style.position    = storage.size.position !== false ? storage.size.position   : '';\r\n                        container.style.width       = storage.size.width    !== false ? storage.size.width      : '';\r\n                        container.style.height      = storage.size.height   !== false ? storage.size.height     : '';\r\n                        container.style.left        = storage.size.left     !== false ? storage.size.left       : '';\r\n                        container.style.top         = storage.size.top      !== false ? storage.size.top        : '';\r\n                        container.setAttribute(settings.STATE, 'false');\r\n                        //Run external events in background\r\n                        setTimeout(\r\n                            function () {\r\n                                flex.events.core.fire(\r\n                                    flex.registry.events.ui.window.maximize.GROUP,\r\n                                    flex.registry.events.ui.window.maximize.RESTORED,\r\n                                    { container: container, id: id }\r\n                                );\r\n                            },\r\n                            10\r\n                        );\r\n                    },\r\n                    byID : {\r\n                        findByID: function (id) {\r\n                            var id          = id || null,\r\n                                containers  = null,\r\n                                result      = [];\r\n                            if (id !== null) {\r\n                                containers = _nodes('*[' + settings.CONTAINER + (id !== null ? '=\"' + id + '\"' : '') + ']').target;\r\n                                if (containers !== null) {\r\n                                    if (containers.length > 0) {\r\n                                        Array.prototype.forEach.call(containers, function (container) {\r\n                                            var storage = flex.overhead.objecty.get(container, settings.STORAGE, false);\r\n                                            if (storage !== null) {\r\n                                                result.push({\r\n                                                    container   : container,\r\n                                                    storage     : storage\r\n                                                });\r\n                                            }\r\n                                        });\r\n                                        return result.length > 0 ? result : null;\r\n                                    }\r\n                                }\r\n                            }\r\n                            return null;\r\n                        },\r\n                        maximaze: function (id) {\r\n                            var data = processing.actions.byID.findByID(id);\r\n                            if (data !== null) {\r\n                                data.forEach(function (data) {\r\n                                    processing.actions.maximaze(data.container, data.storage, id);\r\n                                });\r\n                            }\r\n                        },\r\n                        restore : function (id) {\r\n                            var data = processing.actions.byID.findByID(id);\r\n                            if (data !== null) {\r\n                                data.forEach(function (data) {\r\n                                    processing.actions.restore(data.container, data.storage, id);\r\n                                });\r\n                            }\r\n                        },\r\n                    }\r\n                }\r\n            };\r\n            patterns = {\r\n                attach: function () {\r\n                    if (flex.oop.namespace.get('flex.registry.events.ui.patterns.GROUP') !== null) {\r\n                        flex.events.core.listen(flex.registry.events.ui.patterns.GROUP, flex.registry.events.ui.patterns.MOUNTED, function (nodes) {\r\n                            var context = nodes.length !== void 0 ? (nodes.length > 0 ? nodes : null) : null;\r\n                            if (context !== null) {\r\n                                context.forEach(function (context) {\r\n                                    if (_node('*[' + settings.CONTAINER + ']:not([' + settings.INITED + '])', false, context).target !== null) {\r\n                                        init();\r\n                                    }\r\n                                });\r\n                            }\r\n                        });\r\n                    }\r\n                }\r\n            };\r\n            //Init modules\r\n            if (flex.libraries !== void 0) {\r\n                if (flex.libraries.events !== void 0) {\r\n                    flex.libraries.events.create();\r\n                }\r\n            }\r\n            (function () {\r\n                flex.registry.events.ui                 === void 0 && (flex.registry.events.ui = {});\r\n                flex.registry.events.ui.window          === void 0 && (flex.registry.events.ui.window = {});\r\n                flex.registry.events.ui.window.maximize === void 0 && (flex.registry.events.ui.window.maximize = {\r\n                    GROUP       : 'flex.ui.window.maximize',\r\n                    MAXIMIZED   : 'maximized',\r\n                    RESTORED    : 'restored',\r\n                    CHANGE      : 'change',\r\n                });\r\n            }());\r\n            patterns.attach();\r\n            privates = {\r\n                init    : init,\r\n                maximaze: processing.actions.byID.maximaze,\r\n                restore : processing.actions.byID.restore,\r\n            };\r\n            return {\r\n                init        : privates.init,\r\n                maximaze    : privates.maximaze,\r\n                restore     : privates.restore,\r\n            };\r\n        };\r\n        flex.modules.attach({\r\n            name            : 'ui.window.maximize',\r\n            protofunction   : protofunction,\r\n            reference       : ['flex.events']\r\n        });\r\n    }\r\n}());","/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\r\n* Copyright � 2015-2016 Dmitry Astafyev. All rights reserved.                                                      *\r\n* This file (core / module) is released under the Apache License (Version 2.0). See [LICENSE] file for details.    *\r\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\r\n\r\n\r\n/// <reference path='intellisense/flex.callers.node.intellisense.js' />\r\n/// <reference path='intellisense/flex.callers.nodes.intellisense.js' />\r\n/// <reference path='intellisense/flex.callers.object.intellisense.js' />\r\n/// <reference path=\"intellisense/flex.intellisense.js\" />\r\n/// <module>\r\n///     <summary>\r\n///         Basic events controller.\r\n///     </summary>\r\n/// </module>\r\n(function () {\r\n    \"use strict\";\r\n    if (flex !== void 0) {\r\n        var protofunction = function () { };\r\n        protofunction.prototype = function () {\r\n            var config          = null,\r\n                settings        = null,\r\n                //Classes\r\n                Source          = null,\r\n                Pattern         = null,\r\n                instance        = null,\r\n                result          = null,\r\n                Caller          = null,\r\n                addition        = null,\r\n                //Methods\r\n                layout          = null,\r\n                privates        = null,\r\n                controllers     = null,\r\n                storage         = null,\r\n                logs            = null,\r\n                measuring       = null,\r\n                helpers         = null,\r\n                conditions      = null,\r\n                callers         = null,\r\n                defaultshooks   = null,\r\n                defaultsmap     = null,\r\n                ExArray         = flex.libraries.types.array.create().ExArray;\r\n            //Config\r\n            config          = {\r\n                values      : {\r\n                    USE_STORAGE_CSS     : true,\r\n                    USE_STORAGE_JS      : true,\r\n                    USE_STORAGE_HTML    : true,\r\n                    USE_LOCALSTORAGE    : true,\r\n                    PATTERN_NODE        : 'pattern',\r\n                    PATTERN_SRC         : 'data-pattern',\r\n                    HOOK_PREFIX         : 'h_',\r\n                    HOOKS_SET           : 'data-hooks',\r\n                    HOOKS_SRC           : 'data-hooks-src',\r\n                    ACCESSORS           : true,\r\n                    CACHE_PATTERNS      : false,\r\n                    onLayoutBuildFinish : null\r\n                },\r\n                validator   : {\r\n                    USE_STORAGE_CSS     : function (value) { return typeof value === 'boolean';},\r\n                    USE_STORAGE_JS      : function (value) { return typeof value === 'boolean';},\r\n                    USE_STORAGE_HTML    : function (value) { return typeof value === 'boolean';},\r\n                    USE_LOCALSTORAGE    : function (value) { return typeof value === 'boolean'; },\r\n                    PATTERN_SRC         : function (value) { return typeof value === 'string'; },\r\n                    PATTERN_NODE        : function (value) { return typeof value === 'string'   ? (value.length > 0 ? (value.replace(/\\w/gi, '').length === 0 ? true : false) : false) : false; },\r\n                    PATTERN_SRC         : function (value) { return typeof value === 'string'; },\r\n                    HOOK_PREFIX         : function (value) { return typeof value === 'string'; },\r\n                    HOOKS_SET           : function (value) { return typeof value === 'string'; },\r\n                    HOOKS_SRC           : function (value) { return typeof value === 'string'; },\r\n                    ACCESSORS           : function (value) { return typeof value === 'boolean'; },\r\n                    CACHE_PATTERNS      : function (value) { return typeof value === 'boolean'; },\r\n                    onLayoutBuildFinish : function (value) { return typeof value === 'function'; },\r\n                },\r\n                setup       : function (_config) {\r\n                    if (_config !== null && typeof _config === 'object') {\r\n                        _object(_config).forEach(function (key, value) {\r\n                            if (config.values[key] !== void 0 && config.validator[key] !== void 0) {\r\n                                config.values[key] = config.validator[key](value) ? value : config.values[key];\r\n                            }\r\n                        });\r\n                    }\r\n                },\r\n                get         : function () {\r\n                    return config.values;\r\n                },\r\n                debug       : function (){\r\n                    config.values.USE_STORAGE_CSS   = false;\r\n                    config.values.USE_STORAGE_JS    = false;\r\n                    config.values.USE_STORAGE_HTML  = false;\r\n                    config.values.USE_LOCALSTORAGE  = false;\r\n                    config.values.CACHE_PATTERNS    = false;\r\n                    flex.config.set({\r\n                        logs: { SHOW: ['CRITICAL', 'LOGICAL', 'WARNING', 'NOTIFICATION', 'LOGS', 'KERNEL_LOGS'] }\r\n                    });\r\n                }\r\n            };\r\n            //Settings\r\n            settings        = {\r\n                measuring       : {\r\n                    MEASURE : true,\r\n                },\r\n                classes         : {\r\n                    SOURCE  : function(){},\r\n                    PATTERN : function(){},\r\n                    CALLER  : function(){},\r\n                    URL     : function(){},\r\n                },\r\n                regs            : {\r\n                    BODY                    : /<\\s*body[^>]*>(\\n|\\r|\\s|.)*?<\\s*\\/body\\s*>/gi,\r\n                    BODY_TAG                : /<\\s*body[^>]*>|<\\s*\\/\\s*body\\s*>/gi,\r\n                    BODY_CLEAR              : /^[\\n\\r\\s]*|[\\n\\r\\s]*$/gi,\r\n                    FIRST_TAG               : /^\\s*<\\s*\\w{1,}/gi,\r\n                    TAG_BORDERS             : /<|>/gi,\r\n                    CSS                     : /<link\\s+.*?\\/>|<link\\s+.*?\\>/gi,\r\n                    CSS_HREF                : /href\\s*\\=\\s*\"(.*?)\"|href\\s*\\=\\s*'(.*?)'/gi,\r\n                    CSS_REL                 : /rel\\s*=\\s*\"stylesheet\"|rel\\s*=\\s*'stylesheet'/gi,\r\n                    CSS_TYPE                : /type\\s*=\\s*\"text\\/css\"|type\\s*=\\s*'text\\/css'/gi,\r\n                    JS                      : /<script\\s+.*?>/gi,\r\n                    JS_SRC                  : /src\\s*\\=\\s*\"(.*?)\"|src\\s*\\=\\s*'(.*?)'/gi,\r\n                    JS_TYPE                 : /type\\s*=\\s*\"text\\/javascript\"|type\\s*=\\s*'text\\/javascript'/gi,\r\n                    STRING                  : /\"(.*?)\"|'(.*?)'/gi,\r\n                    STRING_BORDERS          : /\"|'/gi,\r\n                    DOM                     : /\\{\\{\\$[\\w\\.\\,]*?\\}\\}/gi,\r\n                    DOM_OPEN_STR            : '{{$',\r\n                    DOM_CLOSE_STR           : '}}',\r\n                    HOOK                    : /\\{\\{[\\w\\d_\\.]*?\\}\\}/gi,\r\n                    MODEL                   : /\\{\\{\\:\\:[\\w\\d_\\.]*?\\}\\}/gi,\r\n                    MODEL_BORDERS           : /\\{\\{\\:\\:|\\}\\}/gi,\r\n                    HOOK_OPEN               : '\\\\{\\\\{',\r\n                    HOOK_CLOSE              : '\\\\}\\\\}',\r\n                    HOOK_BORDERS            : /\\{\\{|\\}\\}/gi,\r\n                    CONDITIONS              : /<!--[\\w_]*=.{1,}?-->/gi,\r\n                    CONDITION_CONTENT       : '<!--[open]-->.*?<!--[close]-->',\r\n                    CONDITION_CONTENT_ANY   : '<!--[open]=.{1,}?-->.*?<!--[close]-->',\r\n                    STRING_CON              : /\".*?\"/gi,\r\n                    STRING_CON_STRICT       : '\".*?\"',\r\n                    STRING_BORDER_CON       : /\"/gi,\r\n                    CON_CLOSE_STR           : '<!--[name]-->',\r\n                    OPEN_TAG                : /<[\\s]*[\\w]{1,}/gi,\r\n                    COMMENT_BORDERS         : /<!--|-->/gi,\r\n                    FIRST_WORD              : /^\\w+/gi,\r\n                    //New regs\r\n                    TAGS                    : /<\\s*\\w[^>\\/]*.*?>/gi,\r\n                    ATTRS                   : /([\\w-]{1,}\\s*=\\s*\".{1,}?\")|([\\w-]{1,}\\s*=\\s*'.{1,}?')/gi,\r\n                    DOM_BORDERS             : /\\{\\{\\$|\\}\\}/gi,\r\n                    MODEL_OPEN_STR          : '{{::',\r\n                    MODEL_CLOSE_STR         : '}}',\r\n                    HOOK_OPEN_STR           : '{{',\r\n                    HOOK_CLOSE_STR          : '}}',\r\n                    ALL                     : /\\{\\{.*?\\}\\}/gi,\r\n                    INSIDE_TAG              : />(.*?)</gi,\r\n                    EVENT_ATTR              : /[\\w]{1,}(\\s{1,})?=(\\s{1,})?[\"']\\{\\{\\@[\\w\\d_\\.]*?\\}\\}[\"']/gi,\r\n                    EVENT_BORDERS           : /\\{\\{\\@|\\}\\}/gi,\r\n                    LINES                   : /\\n|\\r|\\n\\r/gi,\r\n                    COLLECTION_HOOK_TAG     : /<[^>]*?\\{\\{\\[[\\w\\d_\\.]*?\\]\\}\\}/i,    //Should not be global\r\n                    COLLECTION_HOOK_NAME    : /{\\{\\[[\\w\\d_\\.]*?\\]\\}\\}/i,            //Should not be global\r\n                    COLLECTION_BORDERS      : /{\\{\\[|\\]\\}\\}/gi,\r\n                },\r\n                storage         : {\r\n                    VIRTUAL_STORAGE_GROUP   : 'FLEX_UI_PATTERNS_GROUP',\r\n                    VIRTUAL_STORAGE_ID      : 'FLEX_UI_PATTERNS_STORAGE',\r\n                    CSS_ATTACHED_JOURNAL    : 'FLEX_UI_PATTERNS_CSS_JOURNAL',\r\n                    JS_ATTACHED_JOURNAL     : 'JS_ATTACHED_JOURNAL',\r\n                    PRELOAD_TRACKER         : 'FLEX_UI_PATTERNS_PRELOAD_TRACKER',\r\n                    CONTROLLERS_LINKS       : 'FLEX_PATTERNS_CONTROLLERS_LINKS',\r\n                    CONTROLLERS_STORAGE     : 'FLEX_PATTERNS_CONTROLLERS_STORAGE',\r\n                    CONDITIONS_STORAGE      : 'FLEX_PATTERNS_CONDITIONS_STORAGE',\r\n                    HOOKS_STORAGE           : 'FLEX_PATTERNS_HOOKS_STORAGE',\r\n                    MAPS_STORAGE            : 'FLEX_PATTERNS_MAPS_STORAGE',\r\n                    PATTERN_SOURCES         : 'FLEX_PATTERNS_PATTERN_SOURCES',\r\n                    PATTERN_SOURCES_HTML    : 'FLEX_PATTERNS_PATTERN_SOURCES_HTML',\r\n                    GLOBAL_EVENTS           : 'FLEX_PATTERNS_GLOBAL_EVENTS',\r\n                    PATTERN_CACHE           : 'FLEX_PATTERNS_CACHE_STORAGE'\r\n                },\r\n                compatibility   : {\r\n                    PARENT_TO_CHILD : {\r\n                        table   : 'tbody',\r\n                        tbody   : 'tr',\r\n                        thead   : 'tr',\r\n                        tfoot   : 'tr',\r\n                        tr      : 'td',\r\n                        colgroup: 'col',\r\n                    },\r\n                    CHILD_TO_PARENT : {\r\n                        tr      : 'tbody',\r\n                        th      : 'tbody',\r\n                        td      : 'tr',\r\n                        col     : 'colgroup',\r\n                        tbody   : 'table',\r\n                        thead   : 'table',\r\n                        tfoot   : 'table',\r\n                    },\r\n                    BASE            : 'div'\r\n                },\r\n                css             : {\r\n                    classes     : {\r\n                        MODEL_NODE  : 'data-flex-model-node',\r\n                    },\r\n                    attrs       : {\r\n                        MODEL       : 'data-flex-model-data',\r\n                        DOM         : 'data-flex-pattern-dom',\r\n                        CONDITION   : 'data-flex-pattern-condition',\r\n                        PARENT      : 'data-flex-pattern-parrent'\r\n                    },\r\n                    selectors   : {\r\n                        HOOK_WRAPPERS: '.flex_patterns_hook_wrapper'\r\n                    },\r\n                },\r\n                events          : {\r\n                    ONREADY     : 'onReady',\r\n                    ONUPDATE    : 'onUpdate',\r\n                    ONCHANGE    : 'onChange',\r\n                    SETINSTNCE  : 'setInstance'\r\n                },\r\n                other           : {\r\n                    SUBLEVEL_BEGIN          : '_',\r\n                    SUBLEVEL_END            : '_',\r\n                    BIND_PREFIX             : '$$',\r\n                    DOM_PREFIX              : '$',\r\n                    ACCESSOR_PREFIX         : '__',\r\n                    HOOK_COM_BEGIN          : '^^^',\r\n                    HOOK_COM_END            : '###',\r\n                    PARENT_MARK_HTML        : '##parent##',\r\n                    ANCHOR                  : 'ANCHOR::',\r\n                    EVENTS_HANDLE_ID        : 'flex_patterns_listener_handle_id',\r\n                    CACHE_PATTERNS_PREFIX   : 'PATTERNS_CACHE:',\r\n                    HOOK_ACCESSOR_FUNC_NAME : 'setHookValue'\r\n                }\r\n            };\r\n            logs            = {\r\n                SIGNATURE   : '[flex.ui.patterns]', \r\n                source      : {\r\n                    TEMPLATE_WAS_LOADED                     : '0001:TEMPLATE_WAS_LOADED',\r\n                    FAIL_TO_LOAD_TEMPLATE                   : '0002:FAIL_TO_LOAD_TEMPLATE',\r\n                    FAIL_TO_PARSE_TEMPLATE                  : '0003:FAIL_TO_PARSE_TEMPLATE',\r\n                    FAIL_TO_LOAD_JS_RESOURCE                : '0004:FAIL_TO_LOAD_JS_RESOURCE',\r\n                    ONLY_ONE_MODEL_REF_CAN_BE_IN_ATTR       : '0005: ONLY_ONE_MODEL_REF_CAN_BE_IN_ATTR',\r\n                    BAD_FORMAT_OF_STYLE_IN_ATTRIBUTE        : '0006: BAD_FORMAT_OF_STYLE_IN_ATTRIBUTE',\r\n                    ONLY_ONE_MODEL_REF_CAN_BE_IN_STYLE_PROP : '0007: ONLY_ONE_MODEL_REF_CAN_BE_IN_STYLE_PROP',\r\n                    FAIL_TO_LOAD_PATTERN_IN_COMPONENT       : '0008: FAIL_TO_LOAD_PATTERN_IN_COMPONENT',\r\n                    COLLECTION_HOOK_IS_WRONG                : '0009: COLLECTION_HOOK_IS_WRONG',\r\n                },\r\n                pattern     : {\r\n                    CANNOT_FIND_SOURCE_OF_TEMPLATE          : '1000:CANNOT_FIND_SOURCE_OF_TEMPLATE',\r\n                    CANNOT_DETECT_HOOK_VALUE                : '1001:CANNOT_DETECT_HOOK_VALUE',\r\n                    CANNOT_DETECT_HOOK_ANCHOR               : '1002:CANNOT_DETECT_HOOK_ANCHOR',\r\n                    TEXT_HOOK_VALUE_CANBE_ONLY_TEXT         : '1003:TEXT_HOOK_VALUE_CANBE_ONLY_TEXT',\r\n                    CANNOT_DETECT_HTML                      : '1004:CANNOT_DETECT_HTML',\r\n                    CANNOT_DETECT_BEGIN_OR_END_HOOK_ANC     : '1005:CANNOT_DETECT_BEGIN_OR_END_HOOK_ANC',\r\n                },\r\n                caller      : {\r\n                    CANNOT_INIT_PATTERN                     : '3000:CANNOT_INIT_PATTERN',\r\n                },\r\n                controller  : {\r\n                    CONTROLLER_DEFINED_MORE_THAN_ONCE       : '4000:CONTROLLER_DEFINED_MORE_THAN_ONCE',\r\n                },\r\n                layout      : {\r\n                    PATTERN_SRC_DEFINED_TWICE_OR_MORE       : '5000:PATTERN_SRC_DEFINED_TWICE_OR_MORE',\r\n                    PATTERN_SRC_OR_NAME_IS_TOO_SHORT        : '5001:PATTERN_SRC_OR_NAME_IS_TOO_SHORT',\r\n                    HOOK_SRC_DEFINED_TWICE_OR_MORE          : '5002:HOOK_SRC_DEFINED_TWICE_OR_MORE',\r\n                    HOOK_SRC_OR_NAME_IS_TOO_SHORT           : '5003:HOOK_SRC_OR_NAME_IS_TOO_SHORT',\r\n                    HOOK_CANNOT_BE_DEFINED_WITH_OTHER_TAGS  : '5004:HOOK_CANNOT_BE_DEFINED_WITH_OTHER_TAGS',\r\n                },\r\n                url         : {\r\n                    URL_SHOULD_BE_DEFINED_AS_STRING         : '6000:URL_SHOULD_BE_DEFINED_AS_STRING',\r\n                }\r\n            };\r\n            //Classes implementations\r\n            //BEGIN: source class ===============================================\r\n            Source          = {\r\n                proto       : function (privates) {\r\n                    var self        = this,\r\n                        load        = null,\r\n                        parse       = null,\r\n                        process     = null,\r\n                        resources   = null,\r\n                        html        = null,\r\n                        get         = null,\r\n                        processing  = null,\r\n                        component   = null,\r\n                        callback    = null,\r\n                        signature   = null,\r\n                        returning   = null;\r\n                    load        = function (success, fail) {\r\n                        var perf_id     = null,\r\n                            ajax        = null,\r\n                            storaged    = null;\r\n                        if (privates.html === null) {\r\n                            storaged = storage.get(self.url);\r\n                            if (storaged !== null && config.get().USE_STORAGE_HTML === true) {\r\n                                process(storaged, success, fail);\r\n                            } else {\r\n                                perf_id = measuring.measure();\r\n                                ajax    = flex.ajax.send(\r\n                                    self.url,\r\n                                    flex.ajax.methods.GET,\r\n                                    null,\r\n                                    {\r\n                                        success : function (response, request) {\r\n                                            measuring.measure(perf_id, 'loading sources for (' + self.url + ')');\r\n                                            process(response.original, success, fail);\r\n                                        },\r\n                                        fail    : function (response, request) {\r\n                                            measuring.measure(perf_id, 'loading sources for (' + self.url + ')');\r\n                                            flex.logs.log(signature() + logs.source.FAIL_TO_LOAD_TEMPLATE, flex.logs.types.CRITICAL);\r\n                                            callback(fail);\r\n                                            throw logs.source.FAIL_TO_LOAD_TEMPLATE;\r\n                                        },\r\n                                    }\r\n                                );\r\n                                ajax.send();\r\n                            }\r\n                        } else {\r\n                            process(!privates.html.search(settings.regs.BODY) ? privates.html : (privates.html = '<body>' + privates.html + '</body>'), success, fail);\r\n                            //flex.logs.log(signature() + logs.source.TEMPLATE_WAS_LOADED, flex.logs.types.NOTIFICATION);\r\n                        }\r\n                        return true;\r\n                    };\r\n                    parse       = {\r\n                        URLs: function (hrefs) {\r\n                            var baseURL = flex.system.url.restore(self.url);\r\n                            if (baseURL !== null) {\r\n                                hrefs = hrefs.map(function (href) {\r\n                                    var url = flex.system.url.parse(href, baseURL);\r\n                                    return (url !== null ? url.url : false);\r\n                                });\r\n                                hrefs = hrefs.filter(function (href) {\r\n                                    return (href !== false ? true : false);\r\n                                });\r\n                            }\r\n                            return hrefs;\r\n                        },\r\n                        html: function (html, success, fail) {\r\n                            var regs = settings.regs,\r\n                                body = html.match(regs.BODY);\r\n                            if (body !== null) {\r\n                                if (body.length === 1) {\r\n                                    privates.html       = body[0].replace(regs.BODY_TAG, '').replace(regs.BODY_CLEAR, '');\r\n                                    privates.original   = html;\r\n                                    if (!component.getSRCs()) {\r\n                                        processing.procced();\r\n                                        success();\r\n                                    } else {\r\n                                        component.load(success);\r\n                                    }\r\n                                    return true;\r\n                                }\r\n                            }\r\n                            privates.html = null;\r\n                            fail();\r\n                            return false;\r\n                        },\r\n                        css : function () {\r\n                            var regs    = settings.regs,\r\n                                links   = privates.original !== null ? privates.original.match(regs.CSS) : null,\r\n                                hrefs   = [];\r\n                            if (links !== null) {\r\n                                Array.prototype.forEach.call(\r\n                                    links,\r\n                                    function (link) {\r\n                                        function validate(link) {\r\n                                            var rel     = link.search(regs.CSS_REL),\r\n                                                type    = link.search(regs.CSS_TYPE);\r\n                                            if (rel > 0 && type > 0) {\r\n                                                return true;\r\n                                            }\r\n                                            return false;\r\n                                        };\r\n                                        var href    = link.match(regs.CSS_HREF),\r\n                                            str     = null;\r\n                                        if (validate(link) !== false && href !== null) {\r\n                                            if (href.length === 1) {\r\n                                                str = href[0].match(regs.STRING);\r\n                                                if (str !== null) {\r\n                                                    if (str.length === 1) {\r\n                                                        hrefs.push(str[0].replace(regs.STRING_BORDERS, ''));\r\n                                                    }\r\n                                                }\r\n                                            }\r\n                                        }\r\n                                    }\r\n                                );\r\n                            }\r\n                            privates.css = parse.URLs(hrefs);\r\n                        },\r\n                        js  : function () {\r\n                            var regs    = settings.regs,\r\n                                links   = privates.original !== null ? privates.original.match(regs.JS) : null,\r\n                                hrefs   = [];\r\n                            if (links !== null) {\r\n                                Array.prototype.forEach.call(\r\n                                    links,\r\n                                    function (link) {\r\n                                        function validate(link) {\r\n                                            var type = link.search(regs.JS_TYPE);\r\n                                            if (type > 0) {\r\n                                                return true;\r\n                                            }\r\n                                            return false;\r\n                                        };\r\n                                        var src = link.match(regs.JS_SRC),\r\n                                            str = null;\r\n                                        if (validate(link) !== false && src !== null) {\r\n                                            if (src.length === 1) {\r\n                                                str = src[0].match(regs.STRING);\r\n                                                if (str !== null) {\r\n                                                    if (str.length === 1) {\r\n                                                        hrefs.push(str[0].replace(regs.STRING_BORDERS, ''));\r\n                                                    }\r\n                                                }\r\n                                            }\r\n                                        }\r\n                                    }\r\n                                );\r\n                            }\r\n                            privates.js = parse.URLs(hrefs);\r\n                        },\r\n                    };\r\n                    process     = function (response, success, fail) {\r\n                        function load(storaged) {\r\n                            resources.css.load(function () {\r\n                                resources.js.load(\r\n                                    function () {\r\n                                        if (!storaged) {\r\n                                            storage.add(self.url, {\r\n                                                original: privates.original,\r\n                                                html    : privates.html,\r\n                                                js      : privates.js,\r\n                                                css     : privates.css,\r\n                                                map     : privates.map,\r\n                                                flags   : privates.flags\r\n                                            });\r\n                                        }\r\n                                        //component\r\n                                        callback(success);\r\n                                    },\r\n                                    function () {\r\n                                        callback(fail);\r\n                                    }\r\n                                );\r\n                            });\r\n                        };\r\n                        if (typeof response === 'string') {\r\n                            parse.html(\r\n                                response,\r\n                                function () {\r\n                                    parse.js();\r\n                                    parse.css();\r\n                                    load(false);\r\n                                },\r\n                                function () {\r\n                                    flex.logs.log(signature() + logs.source.FAIL_TO_PARSE_TEMPLATE, flex.logs.types.NOTIFICATION);\r\n                                    callback(fail);\r\n                                }\r\n                             );\r\n                        } else if (typeof response === 'object') {\r\n                            privates.original   = response.original;\r\n                            privates.html       = response.html;\r\n                            privates.js         = response.js;\r\n                            privates.css        = response.css;\r\n                            privates.map        = response.map;\r\n                            privates.flags      = response.flags;\r\n                            load(true);\r\n                        }\r\n                    };\r\n                    resources   = {\r\n                        css : {\r\n                            load: function (success) {\r\n                                var journal     = flex.overhead.globaly.get(settings.storage.VIRTUAL_STORAGE_GROUP, settings.storage.CSS_ATTACHED_JOURNAL, {}),\r\n                                    register_id = flex.unique();\r\n                                if (privates.css !== null && privates.css.length > 0) {\r\n                                    flex.overhead.register.open(register_id, privates.css, success);\r\n                                    Array.prototype.forEach.call(\r\n                                        privates.css,\r\n                                        function (url) {\r\n                                            var storaged    = null,\r\n                                                perf_id     = null;\r\n                                            if (!journal[url]) {\r\n                                                journal[url]    = true;\r\n                                                storaged        = storage.get(url);\r\n                                                if (storaged === null || config.get().USE_STORAGE_CSS === false) {\r\n                                                    perf_id = measuring.measure();\r\n                                                    flex.resources.attach.css.connect(\r\n                                                        url,\r\n                                                        function (url) {\r\n                                                            var cssText = flex.resources.parse.css.stringify(url);\r\n                                                            if (cssText !== null) {\r\n                                                                storage.add(url, cssText);\r\n                                                            }\r\n                                                            if (register_id !== null) {\r\n                                                                flex.overhead.register.done(register_id, url);\r\n                                                            }\r\n                                                            measuring.measure(perf_id, 'loading resources for (' + self.url + '):: ' + url);\r\n                                                        }\r\n                                                    );\r\n                                                } else {\r\n                                                    flex.resources.attach.css.adoption(storaged, null, url);\r\n                                                    flex.overhead.register.done(register_id, url);\r\n                                                    storage.add(url, storaged);\r\n                                                }\r\n                                            } else {\r\n                                                flex.overhead.register.done(register_id, url);\r\n                                            }\r\n                                        }\r\n                                    );\r\n                                } else {\r\n                                    callback(success);\r\n                                }\r\n                            },\r\n                        },\r\n                        js  : {\r\n                            load    : function (success, fail) {\r\n                                var journal     = flex.overhead.globaly.get(settings.storage.VIRTUAL_STORAGE_GROUP, settings.storage.JS_ATTACHED_JOURNAL, {}),\r\n                                    register_id = flex.unique();\r\n                                if (privates.js !== null && privates.js.length > 0) {\r\n                                    flex.overhead.register.open(register_id, privates.js, success);\r\n                                    Array.prototype.forEach.call(\r\n                                        privates.js,\r\n                                        function (url) {\r\n                                            var storaged    = null,\r\n                                                perf_id     = null,\r\n                                                _success    = function _success() {\r\n                                                    flex.overhead.register.done(register_id, url);\r\n                                                    var request = flex.ajax.send(\r\n                                                        url,\r\n                                                        flex.ajax.methods.GET,\r\n                                                        null,\r\n                                                        {\r\n                                                            success: function (response, request) {\r\n                                                                storage.add(url, response.original);\r\n                                                            },\r\n                                                        }\r\n                                                    );\r\n                                                    request.send();\r\n                                                    measuring.measure(perf_id, 'loading resources for (' + self.url + '):: ' + url);\r\n                                                },\r\n                                                _fail       = function _fail() {\r\n                                                    flex.logs.log(signature() + logs.source.FAIL_TO_LOAD_JS_RESOURCE, flex.logs.types.CRITICAL);\r\n                                                    measuring.measure(perf_id, 'loading resources for (' + self.url + '):: ' + url);\r\n                                                    callback(fail);\r\n                                                    throw logs.source.FAIL_TO_LOAD_JS_RESOURCE;\r\n                                                };\r\n                                            if (journal[url] === void 0) {\r\n                                                controllers.references.assign(url, self.url);\r\n                                                journal[url]    = true;\r\n                                                storaged        = storage.get(url);\r\n                                                if (storaged === null || config.get().USE_STORAGE_JS === false) {\r\n                                                    perf_id = measuring.measure();\r\n                                                    if (Source.resource.isIn(url)) {\r\n                                                        if (Source.resource.isDone(url)) {\r\n                                                            flex.overhead.register.done(register_id, url);\r\n                                                        } else {\r\n                                                            Source.resource.add(url, function () {\r\n                                                                flex.overhead.register.done(register_id, url);\r\n                                                            });\r\n                                                        }\r\n                                                    } else {\r\n                                                        Source.resource.add(url, _success);\r\n                                                        flex.resources.attach.js.connect(url, function () {\r\n                                                            Source.resource.done(url);\r\n                                                        }, _fail);\r\n                                                    }\r\n                                                } else {\r\n                                                    controllers.current.set(url);\r\n                                                    flex.resources.attach.js.adoption(storaged, function () {\r\n                                                        flex.overhead.register.done(register_id, url);\r\n                                                        controllers.current.reset(url);\r\n                                                    });\r\n                                                    storage.add(url, storaged);\r\n                                                }\r\n                                            } else {\r\n                                                if (Source.resource.isDone(url)) {\r\n                                                    flex.overhead.register.done(register_id, url);\r\n                                                } else {\r\n                                                    Source.resource.add(url, function () {\r\n                                                        flex.overhead.register.done(register_id, url);\r\n                                                    });\r\n                                                }\r\n                                            }\r\n                                        }\r\n                                    );\r\n                                } else {\r\n                                    callback(success);\r\n                                }\r\n                            },\r\n                        }\r\n                    };\r\n                    callback    = function (callback) {\r\n                        if (typeof callback === 'function') {\r\n                            callback.call(privates.__instance, self.url, self.original_url, privates.__instance);\r\n                        }\r\n                    };\r\n                    component   = {\r\n                        getSRCs     : function () {\r\n                            function find(nodes, hooks) {\r\n                                Array.prototype.forEach.call(nodes, function (node) {\r\n                                    var src         = node.getAttribute(config.get().PATTERN_SRC),\r\n                                        nodeName    = null;\r\n                                    if (src !== null && src !== '') {\r\n                                        !~privates.srcs.indexOf(src) && privates.srcs.push(src);\r\n                                        nodeName = node.nodeName.toLowerCase();\r\n                                        if (nodeName === config.get().PATTERN_NODE) {\r\n                                            hooks.src   = src;\r\n                                            hooks.hooks = {};\r\n                                            node.children !== void 0 && find(node.children, hooks.hooks);\r\n                                        } else {\r\n                                            hooks[nodeName] = {\r\n                                                src     : src,\r\n                                                hooks   : {}\r\n                                            };\r\n                                            node.children !== void 0 && find(node.children, hooks[nodeName].hooks);\r\n                                        }\r\n                                    }\r\n                                });\r\n                            };\r\n                            var node = document.createElement('DIV');\r\n                            node.innerHTML          = privates.html;\r\n                            privates.srcs           = [];\r\n                            privates.map.component  = {};\r\n                            find(node.children, privates.map.component);\r\n                            privates.srcs.length === 0 && (privates.map.component   = null);\r\n                            privates.srcs.length === 0 && (privates.srcs            = null);\r\n                            return privates.srcs !== null;\r\n                        },\r\n                        load        : function (success) {\r\n                            Source.init(privates.srcs, success, component.onFail);\r\n                        },\r\n                        onFail      : function () {\r\n                            var SourceError = function () {\r\n                                    this.urls       = privates.srcs;\r\n                                    this.code       = logs.source.FAIL_TO_LOAD_PATTERN_IN_COMPONENT;\r\n                                    this.message    = signature() + logs.source.FAIL_TO_LOAD_PATTERN_IN_COMPONENT + ':: URLs = ' + JSON.stringify(privates.srcs);\r\n                                },\r\n                                error = new SourceError();\r\n                            flex.logs.log(error.message, flex.logs.types.CRITICAL);\r\n                            throw error;\r\n                        },\r\n                    },\r\n                    processing  = {\r\n                        map         : {\r\n                            getting : function (match, clear, dest, indexes) {\r\n                                var refs    = privates.html.match(match),\r\n                                    map     = {};\r\n                                if (refs instanceof Array) {\r\n                                    refs.forEach(function (ref) {\r\n                                        ref = ref.replace(clear, '');\r\n                                        ref = ref.split(',');\r\n                                        if (ref instanceof Array) {\r\n                                            ref.forEach(function (ref) {\r\n                                                map[ref] = indexes ? (map[ref] === void 0 ? 1 : map[ref] += 1) : true;\r\n                                            });\r\n                                        }\r\n                                    });\r\n                                }\r\n                                privates.map[dest] = map;\r\n                            },\r\n                            model   : function () {\r\n                                processing.map.getting(settings.regs.MODEL, settings.regs.MODEL_BORDERS, 'model', false);\r\n                            },\r\n                            dom     : function () {\r\n                                processing.map.getting(settings.regs.DOM, settings.regs.DOM_BORDERS, 'dom', true);\r\n                            }\r\n                        },\r\n                        binding     : {\r\n                            model: function () {\r\n                                function processing(map){\r\n                                    var binds = {};\r\n                                    _object(map).forEach(function (prop, value) {\r\n                                        var _prop = settings.other.BIND_PREFIX + prop;\r\n                                        if (typeof value === 'object') {\r\n                                            binds[prop] = processing(value);\r\n                                        } else if (value === true) {\r\n                                            Object.defineProperty(binds, prop, {\r\n                                                get         : function(){\r\n                                                    return this[_prop].val;\r\n                                                },\r\n                                                set         : function (val) {\r\n                                                    var prev = this[_prop].val;\r\n                                                    this[_prop].val = val;\r\n                                                    this[_prop].handle(val, prev);\r\n                                                },\r\n                                                configurable: true,\r\n                                                enumerable  : true\r\n                                            });\r\n                                            binds[_prop] = {\r\n                                                val     : '',\r\n                                                handles : {},\r\n                                                bind    : function (handle) {\r\n                                                    var id = null;\r\n                                                    if (typeof handle === 'function') {\r\n                                                        id = flex.unique();\r\n                                                        this.handles[id] = handle;\r\n                                                    }\r\n                                                    return id;\r\n                                                },\r\n                                                unbind  : function (id) {\r\n                                                    if (this.handles[id] !== void 0) {\r\n                                                        delete this.handles[id];\r\n                                                        return true;\r\n                                                    }\r\n                                                    return false;\r\n                                                },\r\n                                                handle  : function (current, previous) {\r\n                                                    _object(this.handles).forEach(function (id, handle) {\r\n                                                        handle(current, previous);\r\n                                                    });\r\n                                                }\r\n                                            };\r\n                                        }\r\n                                    });\r\n                                    return binds;\r\n                                };\r\n                                var model               = privates.binding.model === null ? (privates.map.model !== null ? processing(privates.map.model) : null) : privates.binding.model;\r\n                                privates.binding.model  = model;\r\n                                return model;\r\n                            }\r\n                        },\r\n                        attrs       : {\r\n                            parse       : function (str) {\r\n                                var parts = str.split('=');\r\n                                return {\r\n                                    name    : parts[0].replace(/\\s/gi, ''),\r\n                                    value   : (parts[1].replace(/^\\s*|\\s*$/gi, '')).replace(/(^\"|\"$)|(^'|'$)/gi, '')\r\n                                };\r\n                            },\r\n                            parseStyle  : function (value) {\r\n                                var props   = value.split(';'),\r\n                                    res     = [];\r\n                                props.forEach(function (prop) {\r\n                                    var id      = flex.unique(),\r\n                                        prop    = prop.replace(/::/gi, id),\r\n                                        parts   = prop.split(':');\r\n                                    if (prop !== '') {\r\n                                        if (parts.length === 2) {\r\n                                            res.push({\r\n                                                name : parts[0].replace(/\\s/, ''),\r\n                                                value: parts[1].replace(/^\\s*|\\s*$/, '').replace(new RegExp(id, 'gi'), '::')\r\n                                            });\r\n                                        } else {\r\n                                            flex.logs.log(signature() + logs.source.BAD_FORMAT_OF_STYLE_IN_ATTRIBUTE + '. Style value in attr: (' + value + ')', flex.logs.types.WARNING);\r\n                                        }\r\n                                    }\r\n                                });\r\n                                return res;\r\n                            }\r\n                        },\r\n                        prepare     : function(){\r\n                            privates.html = privates.html.replace(settings.regs.LINES, '');\r\n                        },\r\n                        fix         : function(){\r\n                            var all = privates.html.match(settings.regs.ALL);\r\n                            if (all instanceof Array) {\r\n                                all.forEach(function (elem) {\r\n                                    privates.html = privates.html.replace(elem, elem.replace(/\\s|\\t|\\r|\\n/gi, ''));\r\n                                });\r\n                            }\r\n                        },\r\n                        collections : {\r\n                            find    : function () {\r\n                                var fragment    = null,\r\n                                    hook        = null,\r\n                                    _hook       = null;\r\n                                do{\r\n                                    fragment = privates.html.search(settings.regs.COLLECTION_HOOK_TAG);\r\n                                    fragment = ~fragment ? helpers.getFirstTagWithContect(privates.html.substring(fragment, privates.html.length)) : fragment;\r\n                                    if (typeof fragment === 'string') {\r\n                                        hook            = fragment.match(settings.regs.COLLECTION_HOOK_NAME)[0];\r\n                                        _hook           = hook.replace(settings.regs.COLLECTION_BORDERS, '');\r\n                                        privates.html   = privates.html.replace(fragment, settings.regs.HOOK_OPEN_STR + _hook + settings.regs.HOOK_CLOSE_STR);\r\n                                        fragment        = fragment.replace(hook, '');\r\n                                        privates.map.collections[_hook] = {\r\n                                            html    : fragment,\r\n                                            hook    : _hook,\r\n                                            parent  : self.url,\r\n                                            id      : self.url + '[' + _hook + ']'\r\n                                        };\r\n                                        //Save data\r\n                                        Source.storage.html.add(privates.map.collections[_hook].id, fragment);\r\n                                    } else if (fragment === null) {\r\n                                        flex.logs.log(signature() + logs.source.COLLECTION_HOOK_IS_WRONG, flex.logs.types.CRITICAL);\r\n                                        throw logs.source.COLLECTION_HOOK_IS_WRONG;\r\n                                    }\r\n                                } while (fragment !== -1);\r\n                            }\r\n                        },\r\n                        tags        : {\r\n                            get     : function () {\r\n                                var result = null;\r\n                                if (self.tags === void 0) {\r\n                                    result      = privates.html.match(settings.regs.TAGS);\r\n                                    result      = result instanceof Array ? result : [];\r\n                                    self.tags   = [];\r\n                                    result.forEach(function (tag) {\r\n                                        self.tags.push({\r\n                                            org: tag,\r\n                                            mod: tag\r\n                                        });\r\n                                    });\r\n                                }\r\n                                return self.tags;\r\n                            },\r\n                            accept  : function () {\r\n                                if (self.tags instanceof Array) {\r\n                                    self.tags.forEach(function (tag) {\r\n                                        privates.html = privates.html.replace(tag.org, tag.mod);\r\n                                    });\r\n                                }\r\n                            }\r\n                        },\r\n                        hooks       : {\r\n                            inAttrs : function (){\r\n                                var tags = processing.tags.get(),\r\n                                    regs = settings.regs;\r\n                                tags.forEach(function (tag, index) {\r\n                                    var hooks = null;\r\n                                    if (helpers.testReg(regs.HOOK, tag.mod)) {\r\n                                        hooks = tag.mod.match(regs.HOOK);\r\n                                        if (hooks instanceof Array) {\r\n                                            hooks.forEach(function (hook) {\r\n                                                var _hook   = hook.replace(regs.HOOK_BORDERS, '');\r\n                                                tag.mod     = tag.mod.replace(hook, regs.HOOK_OPEN_STR + settings.other.PARENT_MARK_HTML + _hook + regs.HOOK_CLOSE_STR);\r\n                                            });\r\n                                        }\r\n                                    }\r\n                                });\r\n                            },\r\n                            inNodes : function () {\r\n                                var regs            = settings.regs,\r\n                                    contents        = privates.html.match(regs.INSIDE_TAG);\r\n                                if (contents instanceof Array) {\r\n                                    contents.forEach(function (content) {\r\n                                        var hooks       = privates.html.match(regs.HOOK),\r\n                                            _content    = content;\r\n                                        if (hooks instanceof Array) {\r\n                                            hooks.forEach(function (hook) {\r\n                                                var _hook       = hook.replace(regs.HOOK_BORDERS, ''),\r\n                                                    com_open    = '<!--' + settings.other.HOOK_COM_BEGIN + settings.other.PARENT_MARK_HTML + _hook + '-->',\r\n                                                    com_close   = '<!--' + settings.other.HOOK_COM_END + settings.other.PARENT_MARK_HTML + _hook + '-->';\r\n                                                _content = _content.replace(hook, com_open + regs.HOOK_OPEN_STR + settings.other.PARENT_MARK_HTML + _hook + regs.HOOK_CLOSE_STR + com_close);\r\n                                            });\r\n                                            privates.html = privates.html.replace(content, _content);\r\n                                        }\r\n                                    });\r\n                                }\r\n                            },\r\n                            find    : function () {\r\n                                var regs    = settings.regs,\r\n                                    hooks   = privates.html.match(regs.HOOK);\r\n                                if (hooks instanceof Array) {\r\n                                    hooks.forEach(function (hook) {\r\n                                        var _hook = hook.replace(regs.HOOK_BORDERS, '');\r\n                                        privates.html = privates.html.replace(hook, regs.HOOK_OPEN_STR + settings.other.PARENT_MARK_HTML + _hook + regs.HOOK_CLOSE_STR);\r\n                                    });\r\n                                }\r\n                            }\r\n                        },\r\n                        dom         : {\r\n                            find: function () {\r\n                                var tags = processing.tags.get(),\r\n                                    regs = settings.regs;\r\n                                tags.forEach(function (tag, index) {\r\n                                    var dom     = tag.mod.match(regs.DOM),\r\n                                        marks   = [];\r\n                                    if (dom instanceof Array) {\r\n                                        dom.forEach(function (_dom) {\r\n                                            var mark = _dom.replace(regs.DOM_BORDERS, '').split(',');\r\n                                            marks = marks.concat(mark.filter(function (val) { return val !== '' ? true : false }));\r\n                                        });\r\n                                        (function () {\r\n                                            var history = [];\r\n                                            marks = marks.filter(function (val) {\r\n                                                if (history.indexOf(val) === -1) {\r\n                                                    history.push(val);\r\n                                                    return true;\r\n                                                } else {\r\n                                                    return false;\r\n                                                }\r\n                                            });\r\n                                        }());\r\n                                        marks = marks.map(function (val) {\r\n                                            return settings.other.PARENT_MARK_HTML + val;\r\n                                        });\r\n                                        if (tag.tag === void 0) {\r\n                                            tag.tag = tag.mod.match(regs.OPEN_TAG)[0];\r\n                                        }\r\n                                        tag.mod = tag.mod.replace(regs.DOM, '');\r\n                                        tag.mod = tag.mod.replace(tag.tag, tag.tag + ' ' + settings.css.attrs.DOM + '=\"' + marks.join(',') + '\" ');\r\n                                    }\r\n                                });\r\n                            }\r\n                        },\r\n                        model       : {\r\n                            inAttrs: function (){\r\n                                var tags = processing.tags.get(),\r\n                                    regs = settings.regs;\r\n                                tags.forEach(function (tag, index) {\r\n                                    var scheme  = {},\r\n                                        attrs   = null;\r\n                                    if (helpers.testReg(regs.MODEL, tag.mod)) {\r\n                                        attrs = tag.mod.match(regs.ATTRS);\r\n                                        if (attrs instanceof Array) {\r\n                                            attrs.forEach(function (attr) {\r\n                                                var _attr   = null,\r\n                                                    models  = null,\r\n                                                    styles  = null;\r\n                                                if (helpers.testReg(regs.MODEL, attr)) {\r\n                                                    _attr   = processing.attrs.parse(attr);\r\n                                                    if (_attr.name === 'style') {\r\n                                                        styles = processing.attrs.parseStyle(_attr.value);\r\n                                                        styles.forEach(function (pair) {\r\n                                                            models = pair.value.match(regs.MODEL);\r\n                                                            if (models instanceof Array) {\r\n                                                                if (models.length > 1) {\r\n                                                                    flex.logs.log(signature() + logs.source.ONLY_ONE_MODEL_REF_CAN_BE_IN_STYLE_PROP + '. HTML fragment: (' + tag.mod + '), Style prop: (' + pair.value + ')', flex.logs.types.WARNING);\r\n                                                                }\r\n                                                                models                          = models[0];\r\n                                                                scheme['style.' + pair.name]    = settings.other.PARENT_MARK_HTML + models.replace(regs.MODEL_BORDERS, '');\r\n                                                            }\r\n                                                        });\r\n                                                    } else {\r\n                                                        models = _attr.value.match(regs.MODEL);\r\n                                                        if (models instanceof Array) {\r\n                                                            if (models.length > 1) {\r\n                                                                flex.logs.log(signature() + logs.source.ONLY_ONE_MODEL_REF_CAN_BE_IN_ATTR + '. HTML fragment: (' + tag.mod + '), Attr: (' + _attr.name + ')', flex.logs.types.WARNING);\r\n                                                            }\r\n                                                            models              = models[0];\r\n                                                            scheme[_attr.name]  = settings.other.PARENT_MARK_HTML + models.replace(regs.MODEL_BORDERS, '');\r\n                                                        }\r\n                                                    }\r\n                                                    tag.mod = tag.mod.replace(attr, '');\r\n                                                }\r\n                                            });\r\n                                        }\r\n                                        if (Object.keys(scheme).length > 0) {\r\n                                            if (tag.tag === void 0) {\r\n                                                tag.tag = tag.mod.match(regs.OPEN_TAG)[0];\r\n                                            }\r\n                                            tag.mod                     = tag.mod.replace(tag.tag, tag.tag + ' ' + settings.css.attrs.MODEL + \"='\" + JSON.stringify(scheme) + \"' \");\r\n                                            privates.flags.has_model    = true;\r\n                                        }\r\n                                    }\r\n                                });\r\n                            },\r\n                            inNodes: function () {\r\n                                var regs        = settings.regs,\r\n                                    contents    = privates.html.match(regs.INSIDE_TAG);\r\n                                if (contents instanceof Array) {\r\n                                    contents.forEach(function (content) {\r\n                                        var elems       = null,\r\n                                            _content    = content;\r\n                                        if (helpers.testReg(regs.MODEL, content)) {\r\n                                            elems = _content.match(regs.MODEL);\r\n                                            elems.forEach(function (elem) {\r\n                                                var _elem = elem.replace(regs.MODEL_BORDERS, '');\r\n                                                _elem = regs.MODEL_OPEN_STR + settings.other.PARENT_MARK_HTML + _elem + regs.MODEL_CLOSE_STR;\r\n                                                _content = _content.replace(elem, '<span class=\"' + settings.css.classes.MODEL_NODE + '\" style=\"display:none;\">' + _elem + '</span>');\r\n                                            });\r\n                                            privates.html = privates.html.replace(content, _content);\r\n                                            if (elems.length > 0) {\r\n                                                privates.flags.has_model = true;\r\n                                            }\r\n                                        }\r\n                                    });\r\n                                }\r\n                            }\r\n                        },\r\n                        conditions  : {\r\n                            find    : function () {\r\n                                var conditions  = privates.html.match(settings.regs.CONDITIONS),\r\n                                    names       = [],\r\n                                    html        = privates.html,\r\n                                    attrs       = null,\r\n                                    con_strict  = null;\r\n                                if (conditions instanceof Array) {\r\n                                    privates.map.conditions = {};\r\n                                    conditions = conditions.map(function (condition) {\r\n                                        var value   = condition.replace(settings.regs.COMMENT_BORDERS, ''),\r\n                                            name    = value.split('=')[0];\r\n                                        if (names.indexOf(name) === -1) { names.push(name); }\r\n                                        privates.map.conditions[value] = privates.map.conditions[value] === void 0 ? 1 : privates.map.conditions[value] + 1;\r\n                                        return {\r\n                                            value       : value,\r\n                                            name        : name,\r\n                                            content     : '',\r\n                                            corrected   : ''\r\n                                        };\r\n                                    });\r\n                                    conditions.forEach(function (condition) {\r\n                                        var content = html.match(\r\n                                                new RegExp(settings.regs.CONDITION_CONTENT.\r\n                                                    replace('[open]', condition.value).\r\n                                                    replace('[close]', condition.name), 'gi')\r\n                                            );\r\n                                        if (content instanceof Array) {\r\n                                            condition.content   = content;\r\n                                            condition.corrected = content;\r\n                                            content.forEach(function (content, index) {\r\n                                                var tags = content.match(settings.regs.OPEN_TAG);\r\n                                                if (tags instanceof Array) {\r\n                                                    tags = (function (tags) {\r\n                                                        var history = {};\r\n                                                        return tags.filter(function (tag) {\r\n                                                            if (history[tag] === void 0) {\r\n                                                                history[tag] = true;\r\n                                                                return true;\r\n                                                            } else {\r\n                                                                return false;\r\n                                                            }\r\n                                                        });\r\n                                                    }(tags));\r\n                                                    tags.forEach(function (tag) {\r\n                                                        condition.corrected[index] = condition.corrected[index].replace(new RegExp(tag, 'gi'), tag + ' ' + settings.css.attrs.CONDITION + '=\"' + settings.other.PARENT_MARK_HTML + condition.value + '\"');\r\n                                                    });\r\n                                                    html = html.replace(content, condition.corrected[index]);\r\n                                                }\r\n                                            });\r\n                                        }\r\n                                    });\r\n                                    attrs = html.match(new RegExp('(' + settings.css.attrs.CONDITION + '=' + settings.regs.STRING_CON_STRICT + '\\\\s?){1,}', 'gi'));\r\n                                    if (attrs instanceof Array) {\r\n                                        con_strict = new RegExp(settings.css.attrs.CONDITION + '=' + settings.regs.STRING_CON_STRICT, 'gi');\r\n                                        attrs.forEach(function (attr) {\r\n                                            var valid   = attr.match(con_strict),\r\n                                                _attr   = valid.join(' '),\r\n                                                values  = _attr.match(settings.regs.STRING_CON),\r\n                                                value   = '';\r\n                                            if (values instanceof Array && values.length > 1) {\r\n                                                values.reverse().forEach(function (val, index) {\r\n                                                    value += val.replace(settings.regs.STRING_BORDER_CON, '') + (index < values.length - 1 ? ',' : '');\r\n                                                });\r\n                                                html = html.replace(_attr, settings.css.attrs.CONDITION + '=\"' + value + '\"');\r\n                                            }\r\n                                        });\r\n                                    }\r\n                                    conditions.forEach(function (condition) {\r\n                                        var reg = new RegExp('<\\\\!--' + condition.name, 'gi');\r\n                                        html = html.replace(reg, '<!--' + settings.other.PARENT_MARK_HTML + condition.name);\r\n                                    });\r\n                                    if (conditions.length > 0) {\r\n                                        privates.flags.has_conditions = true;\r\n                                    }\r\n                                    /*\r\n                                    html = html.replace(settings.regs.CONDITIONS, '');\r\n                                    names.forEach(function (name) {\r\n                                        html = html.replace(new RegExp(settings.regs.CON_CLOSE_STR.replace('[name]', name), 'gi'), '');\r\n                                    });\r\n                                    */\r\n                                    privates.html = html;\r\n                                }\r\n                            },\r\n                        },\r\n                        events      : {\r\n                            find: function () {\r\n                                var tags        = processing.tags.get(),\r\n                                    regs        = settings.regs,\r\n                                    all         = [],\r\n                                    hash        = helpers.getHash(self.url).replace('-', '0'),\r\n                                    ID_index    = 0;\r\n                                tags.forEach(function (tag, index) {\r\n                                    var attrs   = tag.mod.match(regs.EVENT_ATTR),\r\n                                        events  = [];\r\n                                    if (attrs instanceof Array) {\r\n                                        attrs.forEach(function (attr) {\r\n                                            var content = attr.replace(regs.EVENT_BORDERS, '').replace(/[\"']/gi, '').split('=');\r\n                                            content.length === 2 && events.push({\r\n                                                event   : content[0].replace(/^on/i, ''),\r\n                                                handle  : content[1],\r\n                                                id      : hash + ID_index++,\r\n                                                attr    : attr\r\n                                            });\r\n                                        });\r\n                                        (function () {\r\n                                            var history = [];\r\n                                            events = events.filter(function (val) {\r\n                                                if (history.indexOf(val.event) === -1) {\r\n                                                    history.push(val.event);\r\n                                                    return true;\r\n                                                } else {\r\n                                                    return false;\r\n                                                }\r\n                                            });\r\n                                        }());\r\n                                        events.forEach(function (event) {\r\n                                            tag.mod = tag.mod.replace(event.attr, regs.DOM_OPEN_STR + event.id + regs.DOM_CLOSE_STR);\r\n                                        });\r\n                                        privates.html   = privates.html.replace(tag.org, tag.mod);\r\n                                        tag.org         = tag.mod;\r\n                                        all             = all.concat(events);\r\n                                    }\r\n                                });\r\n                                privates.map.events = all;\r\n                            }\r\n                        },\r\n                        procced     : function (){\r\n                            processing.prepare();\r\n                            processing.fix();\r\n                            processing.collections.find();\r\n                            processing.hooks.inAttrs();\r\n                            processing.hooks.inNodes();\r\n                            processing.events.find();\r\n                            processing.map.model();\r\n                            processing.map.dom();\r\n                            processing.conditions.find();\r\n                            processing.model.inNodes();\r\n                            processing.model.inAttrs();\r\n                            processing.dom.find();\r\n                            processing.tags.accept();\r\n                        },\r\n                    };\r\n                    html        = {\r\n                        get             : function (parent) {\r\n                            var _html       = privates.html,\r\n                                parent      = typeof parent === 'string' ? parent : false,\r\n                                no_parent   = '__no_parent__';\r\n                            if (parent !== false) {\r\n                                if (privates.cache.html[parent] === void 0) {\r\n                                    _html                       = _html.replace(new RegExp(settings.other.PARENT_MARK_HTML, 'gi'), parent + '.');\r\n                                    privates.cache.html[parent] = _html;\r\n                                } else {\r\n                                    _html = privates.cache.html[parent];\r\n                                }\r\n                            } else {\r\n                                if (privates.cache.html[no_parent] === void 0) {\r\n                                    _html = _html.replace(new RegExp(settings.other.PARENT_MARK_HTML, 'gi'), '');\r\n                                    privates.cache.html[no_parent] = _html;\r\n                                } else {\r\n                                    _html = privates.cache.html[no_parent];\r\n                                }\r\n                            }\r\n                            return _html;\r\n                        }\r\n                    };\r\n                    signature   = function () {\r\n                        return logs.SIGNATURE + ':: pattern (' + self.url + ')';\r\n                    };\r\n                    returning   = {\r\n                        load        : load,\r\n                        html        : html.get,\r\n                        map         : function () { return privates.map;                },\r\n                        flags       : function () { return privates.flags;              },\r\n                        collections : function () { return privates.map.collections;    },\r\n                    };\r\n                    return {\r\n                        load        : returning.load,\r\n                        html        : returning.html,\r\n                        map         : returning.map,\r\n                        binding     : {\r\n                            model : processing.binding.model\r\n                        },\r\n                        flags       : returning.flags,\r\n                        collections : returning.collections\r\n                    };\r\n                },\r\n                instance    : function (parameters) {\r\n                    if (flex.oop.objects.validate(parameters, [ { name: 'url',  type: 'string'              },\r\n                                                                { name: 'html', type: 'string', value: null },\r\n                                                                { name: 'css',  type: 'array',  value: null },\r\n                                                                { name: 'js',   type: 'array',  value: null }]) !== false) {\r\n                        parameters.html === null && (parameters.html = Source.storage.html.get(parameters.url));\r\n                        return _object({\r\n                            parent          : settings.classes.SOURCE,\r\n                            constr          : function () {\r\n                                this.url            = flex.system.url.restore(parameters.url);\r\n                                this.original_url   = parameters.url;\r\n                            },\r\n                            privates        : {\r\n                                original: null,\r\n                                html    : parameters.html,\r\n                                css     : parameters.css,\r\n                                js      : parameters.js,\r\n                                map     : {\r\n                                    model       : null,\r\n                                    dom         : null,\r\n                                    conditions  : null,\r\n                                    events      : null,\r\n                                    component   : null,\r\n                                    collections : {}\r\n                                },\r\n                                binding : {\r\n                                    model   : null\r\n                                },\r\n                                cache   : {\r\n                                    html    : {},\r\n                                    regs    : {}\r\n                                },\r\n                                flags   : {\r\n                                    has_model       : false,\r\n                                    has_conditions  : false\r\n                                }\r\n                            },\r\n                            prototype       : Source.proto\r\n                        }).createInstanceClass();\r\n                    } else {\r\n                        return null;\r\n                    }\r\n                },\r\n                storage     : {\r\n                    add: function (url, instance) {\r\n                        var storage = flex.overhead.globaly.get(settings.storage.VIRTUAL_STORAGE_GROUP, settings.storage.PATTERN_SOURCES, {});\r\n                        if (storage[url] === void 0) {\r\n                            storage[url] = instance;\r\n                        }\r\n                    },\r\n                    get: function (url) {\r\n                        var storage = flex.overhead.globaly.get(settings.storage.VIRTUAL_STORAGE_GROUP, settings.storage.PATTERN_SOURCES, {});\r\n                        return storage[url] !== void 0 ? storage[url] : null;\r\n                    },\r\n                    html: {\r\n                        add: function (url, html) {\r\n                            var storage = flex.overhead.globaly.get(settings.storage.VIRTUAL_STORAGE_GROUP, settings.storage.PATTERN_SOURCES_HTML, {});\r\n                            if (storage[url] === void 0) {\r\n                                storage[url] = html;\r\n                            }\r\n                        },\r\n                        get: function (url) {\r\n                            var storage = flex.overhead.globaly.get(settings.storage.VIRTUAL_STORAGE_GROUP, settings.storage.PATTERN_SOURCES_HTML, {});\r\n                            return storage[url] !== void 0 ? storage[url] : null;\r\n                        },\r\n                    }\r\n                },\r\n                resource    : {\r\n                    add : function (url, callback) {\r\n                        Source.resource.data === void 0 && (Source.resource.data = {});\r\n                        if (Source.resource.data[url] === void 0) {\r\n                            Source.resource.data[url] = { handles : [], status: false };\r\n                        }\r\n                        Source.resource.data[url].handles.push(callback);\r\n                    },\r\n                    done: function (url) {\r\n                        Source.resource.data        === void 0 && (Source.resource.data             = {});\r\n                        Source.resource.data[url]   !== void 0 && (Source.resource.data[url].status = true);\r\n                        _object(Source.resource.data).forEach(function (url, source) {\r\n                            if (source.status) {\r\n                                source.handles.forEach(function (callback) {\r\n                                    callback();\r\n                                });\r\n                                source.handles  = [];\r\n                            }\r\n                        });\r\n                    },\r\n                    isDone: function (url) {\r\n                        Source.resource.data === void 0 && (Source.resource.data = {});\r\n                        return Source.resource.data[url] !== void 0 ? Source.resource.data[url].status : false;\r\n                    },\r\n                    isIn: function (url) {\r\n                        Source.resource.data === void 0 && (Source.resource.data = {});\r\n                        return Source.resource.data[url] !== void 0;\r\n                    }\r\n                },\r\n                init        : function (url, success, fail) {\r\n                    var urls        = url instanceof Array ? url : [url],\r\n                        journal     = flex.overhead.globaly.get(settings.storage.VIRTUAL_STORAGE_GROUP, settings.storage.PRELOAD_TRACKER, {}),\r\n                        register_id = flex.unique(),\r\n                        sources     = [],\r\n                        is_failed   = false;\r\n                    flex.overhead.register.open(register_id, urls, function () {\r\n                        if (typeof success === 'function' && !is_failed) {\r\n                            success(sources);\r\n                        } else {\r\n                            flex.system.handle(fail);\r\n                        }\r\n                    });\r\n                    urls.forEach(function (url) {\r\n                        var instance = Source.storage.get(url);\r\n                        if (instance !== null) {\r\n                            sources.push(instance);\r\n                            flex.overhead.register.done(register_id, url);\r\n                        } else {\r\n                            instance = Source.instance({ url: url });\r\n                            instance.load(\r\n                                function (_url, _original_url, _instance) {\r\n                                    sources.push                (_instance);\r\n                                    Source.storage.add          (_original_url, _instance);\r\n                                    flex.overhead.register.done (register_id, _original_url);\r\n                                },\r\n                                function (_url, _original_url, _instance) {\r\n                                    is_failed = true;\r\n                                    flex.overhead.register.done(register_id, _original_url);\r\n                                }\r\n                            );\r\n                        }\r\n                    });\r\n                }\r\n            };\r\n            //END: source class ===============================================\r\n            Pattern         = {\r\n                proto   : function (privates) {\r\n                    var self        = this,\r\n                        html        = null,\r\n                        model       = null,\r\n                        dom         = null,\r\n                        mapping     = null,\r\n                        hooks       = null,\r\n                        condition   = null,\r\n                        controller  = null,\r\n                        build       = null,\r\n                        cache       = null,\r\n                        methods     = null,\r\n                        signature   = null,\r\n                        returning   = null,\r\n                        hash        = null,\r\n                        consts      = {\r\n                            maps: {\r\n                                MODEL   : 'model',\r\n                                DOM     : 'dom',\r\n                            }\r\n                        };\r\n                    mapping     = {\r\n                        get     : function(type){\r\n                            function getMap(url, hooks) {\r\n                                function proccess(_hooks, dest) {\r\n                                    _object(_hooks).forEach(function (name, inst) {\r\n                                        if (inst instanceof settings.classes.CALLER) {\r\n                                            dest[settings.other.SUBLEVEL_BEGIN + name + settings.other.SUBLEVEL_END] = getMap(inst.url, inst.hooks);\r\n                                        } else if (typeof inst === 'object' && inst !== null) {\r\n                                            dest[name] = {};\r\n                                            proccess(inst, dest[name]);\r\n                                        }\r\n                                    });\r\n                                };\r\n                                var defmap  = cache[url] === void 0 ? Source.storage.get(url).map()[type] : cache[url],\r\n                                    map     = [];\r\n                                cache[url] = defmap;\r\n                                if (hooks !== null) {\r\n                                    hooks.forEach(function (_hooks) {\r\n                                        var _map = _object(defmap).copy();\r\n                                        proccess(_hooks, _map);\r\n                                        map.push(_map);\r\n                                    });\r\n                                } else {\r\n                                    map.push(_object(defmap).copy());\r\n                                }\r\n                                return map;\r\n                            };\r\n                            var cache = {};\r\n                            return getMap(self.url, privates.hooks);\r\n                        },\r\n                        refs    : function () {\r\n                            function setValue(obj, path, val, caller) {\r\n                                var parts = path.split('.');\r\n                                parts.forEach(function (part, index) {\r\n                                    var src = null;\r\n                                    if (index < parts.length - 1) {\r\n                                        obj[part] === void 0 && (obj[part] = { url: '', hooks: {}});\r\n                                        obj = obj[part].hooks;\r\n                                    } else {\r\n                                        src         = Source.storage.get(val);\r\n                                        obj[part]   = { \r\n                                            url         : val,\r\n                                            hooks       : {},\r\n                                            events      : src !== null ? src.map().events : null,\r\n                                            controller  : controller.convert(caller.controller, val),\r\n                                            path        : path\r\n                                        };\r\n                                    }\r\n                                });\r\n                            };\r\n                            function process(hooks, path) {\r\n                                if (helpers.isArray(hooks)) {\r\n                                    hooks.forEach(function (hooks) {\r\n                                        process(hooks, path);\r\n                                    });\r\n                                } else if (hooks instanceof settings.classes.CALLER) {\r\n                                    if (cache[path] === void 0) {\r\n                                        cache[path] = true;\r\n                                        setValue(map, path, hooks.url, hooks);\r\n                                    }\r\n                                    process(hooks.hooks, path);\r\n                                } else if (typeof hooks === 'object') {\r\n                                    _object(hooks).forEach(function (prop, val) {\r\n                                        process(val, (path !== '' ? (path + '.') : '') + prop);\r\n                                    });\r\n                                }\r\n                            };\r\n                            var map     = privates.caller.map,\r\n                                cache   = {};\r\n                            if (Object.keys(map).length === 0) {\r\n                                map = defaultsmap.storage.get(self.url);\r\n                                map === null && (map = {});\r\n                            }\r\n                            if (Object.keys(map).length === 0) {\r\n                                process(privates.hooks, '');\r\n                            }\r\n                            privates.map.refs = {\r\n                                url         : self.url,\r\n                                hooks       : map,\r\n                                events      : self.source.map().events,\r\n                                controller  : privates.controller,\r\n                                path        : ''\r\n                            };\r\n                        }\r\n                    };\r\n                    model       = {\r\n                        nodes       : function (){\r\n                            var nodes       = _nodes('.' + settings.css.classes.MODEL_NODE, false, privates.wrapper).target,\r\n                                res         = {},\r\n                                cache       = {};\r\n                            if (nodes !== null && nodes.length > 0) {\r\n                                Array.prototype.forEach.call(nodes, function (node) {\r\n                                    var ref     = node.innerHTML,\r\n                                        _ref    = cache[ref] !== void 0 ? cache[ref] : ref.replace(settings.regs.MODEL_BORDERS, ''),\r\n                                        _node   = document.createTextNode('');\r\n                                    cache[ref]  = _ref;\r\n                                    res[_ref]   = res[_ref] === void 0 ? [] : res[_ref];\r\n                                    node.parentNode.insertBefore(_node, node);\r\n                                    node.parentNode.removeChild(node);\r\n                                    res[_ref].push(_node);\r\n                                });\r\n                            }\r\n                            return res;\r\n                        },\r\n                        attrs       : function (){\r\n                            var nodes       = _nodes('*[' + settings.css.attrs.MODEL + ']', false, privates.wrapper).target,\r\n                                res         = {},\r\n                                cache       = {};\r\n                            if (nodes !== null && nodes.length > 0) {\r\n                                Array.prototype.forEach.call(nodes, function (node) {\r\n                                    var attr    = node.getAttribute(settings.css.attrs.MODEL),\r\n                                        scheme  = cache[attr] !== void 0 ? cache[attr] : JSON.parse(attr);\r\n                                    cache[attr] = scheme;\r\n                                    _object(scheme).forEach(function (attr, ref) {\r\n                                        res[ref] = res[ref] === void 0 ? [] : res[ref];\r\n                                        res[ref].push({\r\n                                            node    : node,\r\n                                            attr    : attr\r\n                                        });\r\n                                    });\r\n                                    node.removeAttribute(settings.css.attrs.MODEL);\r\n                                });\r\n                            }\r\n                            return res;\r\n                        },\r\n                        bind        : function (){\r\n                            function isSubPattern(path) {\r\n                                var refs    = privates.map.refs,\r\n                                    parts   = path.split('.'),\r\n                                    res     = true;\r\n                                parts.forEach(function (part) {\r\n                                    if (refs !== null && refs.hooks[part] !== void 0) {\r\n                                        refs = refs.hooks[part];\r\n                                    } else {\r\n                                        res = false;\r\n                                    }\r\n                                });\r\n                                return res;\r\n                            };\r\n                            function getMap(url, hooks, path) {\r\n                                function proccess(_hooks, dest, path) {\r\n                                    _object(_hooks).forEach(function (name, inst) {\r\n                                        var ref = name;\r\n                                        if (inst instanceof settings.classes.CALLER) {\r\n                                            ref         = settings.other.SUBLEVEL_BEGIN + ref + settings.other.SUBLEVEL_END;\r\n                                            dest[ref]   = getMap(inst.url, inst.hooks, path + (path === '' ? '' : '.') + ref);\r\n                                        } else if (typeof inst === 'object' && inst !== null) {\r\n                                            dest[ref]   = {};\r\n                                            proccess(inst, dest[ref], path + (path === '' ? '' : '.') + ref);\r\n                                        } else if (inst === null || inst === void 0) {\r\n                                            if (isSubPattern((path !== '' ? path + '.' : '') + name)) {\r\n                                                ref         = settings.other.SUBLEVEL_BEGIN + ref + settings.other.SUBLEVEL_END;\r\n                                                dest[ref] = new ExArray();\r\n                                            }\r\n                                        }\r\n                                    });\r\n                                };\r\n                                var defmap      = cache[url] === void 0 ? Source.storage.get(url).binding.model() : cache[url],\r\n                                    map         = new ExArray(),\r\n                                    bind_parent = privates.wrapper.children.length === 1 ? privates.wrapper.children[0] : null;\r\n                                cache[url]  = defmap;\r\n                                if (hooks !== null) {\r\n                                    hooks.forEach(function (_hooks) {\r\n                                        var _map = Object.create(defmap);\r\n                                        flex.oop.objects.copy(defmap, _map);\r\n                                        _object(_map).forEach(function (prop, val) {\r\n                                            var _prop       = path + (path === '' ? '' : '.') + prop,\r\n                                                attr        = null,\r\n                                                default_val = null;\r\n                                            if (nodes[_prop] !== void 0 && nodes[_prop].length > 0) {\r\n                                                (function (node) {\r\n                                                    _map[settings.other.BIND_PREFIX + prop].bind(function (current, previous) {\r\n                                                        node.nodeValue = current;\r\n                                                    });\r\n                                                }(nodes[_prop][0]));\r\n                                                nodes[_prop].splice(0, 1);\r\n                                            }\r\n                                            if (attrs[_prop] !== void 0 && attrs[_prop].length > 0) {\r\n                                                attr = attrs[_prop][0].attr;\r\n                                                (function (node) {\r\n                                                    if (helpers.binds.isPossible(node, attr)) {\r\n                                                        helpers.binds.assing(node, attr, function (event, getter, setter) {\r\n                                                            var val = getter();\r\n                                                            if (_map[prop] !== val) {\r\n                                                                _map[prop] = val;\r\n                                                            }\r\n                                                        });\r\n                                                    }\r\n                                                    _map[settings.other.BIND_PREFIX + prop].bind(function (current, previous) {\r\n                                                        var parts   = attr.split('.'),\r\n                                                            dest    = node;\r\n                                                        if (parts.length === 1) {\r\n                                                            if (node.getAttribute(attr) !== current) {\r\n                                                                node.setAttribute(attr, current);\r\n                                                            }\r\n                                                        } else if (parts.length === 1 && node[attr] !== void 0){\r\n                                                            if (node[attr] !== current) {\r\n                                                                node[attr] = current;\r\n                                                            }\r\n                                                        } else {\r\n                                                            parts.forEach(function (part, index) {\r\n                                                                if (index !== parts.length - 1) {\r\n                                                                    dest = dest !== null ? (dest[part] !== void 0 ? dest[part] : null) : null;\r\n                                                                } else if (dest !== null) {\r\n                                                                    if (dest[part] !== void 0 && dest[part] !== current) {\r\n                                                                        dest[part] = current;\r\n                                                                    }\r\n                                                                }\r\n                                                            });\r\n                                                        }\r\n                                                    });\r\n                                                    if (bind_parent !== null){\r\n                                                        if (attr.indexOf('.') === -1 && node[attr] === void 0) {\r\n                                                            //Bind attribute\r\n                                                            _node(node).bindingAttrs().bind(attr, function (attr, current, previous, mutation, id) {\r\n                                                                if (_map[prop] !== current) {\r\n                                                                    _map[prop] = current;\r\n                                                                }\r\n                                                            }, bind_parent);\r\n                                                        } else {\r\n                                                            //Bind property\r\n                                                            _node(node).bindingProps().bind(attr, function (attr, current, previous, mutation, id) {\r\n                                                                if (_map[prop] !== current) {\r\n                                                                    _map[prop] = current;\r\n                                                                }\r\n                                                            }, bind_parent);\r\n                                                        }\r\n                                                    }\r\n                                                }(attrs[_prop][0].node));\r\n                                                attrs[_prop].splice(0, 1);\r\n                                            }\r\n                                            if (_hooks[prop] !== void 0 && !(_hooks[prop] instanceof settings.classes.CALLER) && !(typeof _hooks[prop] === 'object')) {\r\n                                                if (typeof _hooks[prop] === 'function') {\r\n                                                    default_val = _hooks[prop]();\r\n                                                } else if (typeof _hooks[prop] === 'string') {\r\n                                                    default_val = _hooks[prop];\r\n                                                } else if (typeof _hooks[prop].toString === 'function') {\r\n                                                    default_val = _hooks[prop].toString();\r\n                                                }\r\n                                                _map[prop] = default_val;\r\n                                            }\r\n                                        });\r\n                                        proccess(_hooks, _map, path);\r\n                                        map.push(_map);\r\n                                    });\r\n                                } else {\r\n                                    map.push(_object(defmap).copy());\r\n                                }\r\n                                return map;\r\n                            };\r\n                            var cache = {},\r\n                                nodes = model.nodes(),\r\n                                attrs = model.attrs();\r\n                            privates.map.model = getMap(self.url, privates.hooks, '');\r\n                        },\r\n                        combine     : function () {\r\n                            function process(dom, model, path) {\r\n                                function obj(dom, model, path) {\r\n                                    _object(dom).forEach(function (prop, val) {\r\n                                        if (val instanceof addition.nodeList.NODE_LIST) {\r\n                                            model[settings.other.DOM_PREFIX + prop] = val;\r\n                                            privates.cache.dom[prop] === void 0 && (privates.cache.dom[prop] = []);\r\n                                            privates.cache.dom[prop].push({\r\n                                                nodeList    : val,\r\n                                                path        : path\r\n                                            });\r\n                                        } else if (helpers.isArray(val)) {\r\n                                            model[prop] = model[prop] !== void 0 ? model[prop] : [];\r\n                                            process(val, model[prop], (path !== '' ? path + '.' : '') + prop.replace(borders, ''));\r\n                                        } else if (typeof val === 'object') {\r\n                                            model[prop] = model[prop] !== void 0 ? model[prop] : {};\r\n                                            obj(val, model[prop], (path !== '' ? path + '.' : '') + prop.replace(borders, ''));\r\n                                        }\r\n                                    });\r\n                                };\r\n                                dom.forEach(function (_dom, index) {\r\n                                    if (model[index] === void 0) {\r\n                                        model.push({});\r\n                                    }\r\n                                    obj(dom[index], model[index], path);\r\n                                });\r\n                            };\r\n                            var _dom    = dom.bind(),\r\n                                borders = new RegExp('^' + settings.other.SUBLEVEL_BEGIN + '|' + settings.other.SUBLEVEL_END + '$', 'gi');\r\n                            if (helpers.isArray(_dom)) {\r\n                                privates.map.model = helpers.isArray(privates.map.model) ? privates.map.model : new ExArray();\r\n                                process(_dom, privates.map.model, '');\r\n                            }\r\n                        },\r\n                        accessors   : function (){\r\n                            function process(accessors, model, path) {\r\n                                function obj(accessors, model, path) {\r\n                                    if (helpers.isArray(model) && model.length === 1) {\r\n                                        model = model[0];\r\n                                    }\r\n                                    _object(accessors).forEach(function (prop, val) {\r\n                                        if (val[settings.other.HOOK_ACCESSOR_FUNC_NAME] !== void 0) {\r\n                                            model[settings.other.ACCESSOR_PREFIX + prop.replace(borders, '')] = val[settings.other.HOOK_ACCESSOR_FUNC_NAME].bind({ model: model, hook: prop });\r\n                                        }\r\n                                        if (typeof val === 'object' && val !== null) {\r\n                                            if ((Object.keys(val).length > 0 && val[settings.other.HOOK_ACCESSOR_FUNC_NAME] === void 0) ||\r\n                                                (Object.keys(val).length > 1 && val[settings.other.HOOK_ACCESSOR_FUNC_NAME] !== void 0)) {\r\n                                                model[prop] = model[prop] !== void 0 ? model[prop] : {};\r\n                                                obj(val, model[prop], (path !== '' ? path + '.' : '') + prop.replace(borders, ''));\r\n                                            }\r\n                                        } else if (helpers.isArray(val)) {\r\n                                            model[prop] = model[prop] !== void 0 ? model[prop] : [];\r\n                                            process(val, model[prop], (path !== '' ? path + '.' : '') + prop.replace(borders, ''));\r\n                                        }\r\n                                    });\r\n                                };\r\n                                accessors.forEach(function (accessors, index) {\r\n                                    if (model[index] === void 0) {\r\n                                        model.push({});\r\n                                    }\r\n                                    obj(accessors, model[index], path);\r\n                                });\r\n                            };\r\n                            var accessors   = helpers.isArray(privates.map.accessors) ? privates.map.accessors : [privates.map.accessors],\r\n                                borders     = new RegExp('^' + settings.other.SUBLEVEL_BEGIN + '|' + settings.other.SUBLEVEL_END + '$', 'gi');\r\n                            privates.map.model = helpers.isArray(privates.map.model) ? privates.map.model : new ExArray();\r\n                            process(accessors, privates.map.model, '', { model: null, prop: null });\r\n                            //Reset accessors\r\n                            privates.map.accessors = null;\r\n                        },\r\n                        finalize    : function () {\r\n                            function getMap(path) {\r\n                                var parts   = path.split('.'),\r\n                                    obj     = privates.map.refs;\r\n                                if (obj !== null) {\r\n                                    parts.forEach(function (part) {\r\n                                        if (obj.hooks !== void 0 && obj.hooks[part] !== void 0) {\r\n                                            obj = obj.hooks[part];\r\n                                        }\r\n                                    });\r\n                                }\r\n                                return obj;\r\n                            };\r\n                            function getRef(path) {\r\n                                var parts   = path.split('.'),\r\n                                    obj     = privates.map.refs,\r\n                                    ref     = null;\r\n                                if (obj !== null) {\r\n                                    parts.forEach(function (part) {\r\n                                        if (obj.hooks !== void 0 && obj.hooks[part] !== void 0 && ref !== false) {\r\n                                            obj = obj.hooks[part];\r\n                                            ref = obj.url;\r\n                                        } else {\r\n                                            ref = false;\r\n                                        }\r\n                                    });\r\n                                }\r\n                                return ref === null ? false : ref;\r\n                            };\r\n                            function bind(target, path, url) {\r\n                                function getPath(path) {\r\n                                    var parts = path.split('.'),\r\n                                        _path = '';\r\n                                    parts.forEach(function (part) {\r\n                                        _path += (_path !== '' ? '.' : '') + settings.other.SUBLEVEL_BEGIN + part + settings.other.SUBLEVEL_END;\r\n                                    });\r\n                                    return _path;\r\n                                }\r\n                                var _path       = cache[path] === void 0 ? getPath(path) : cache[path],\r\n                                    anchor      = hooks.anchors.get(_path),\r\n                                    collection  = null;\r\n                                cache[path] = _path;\r\n                                if (anchor !== null) {\r\n                                    collection = model.collection(url, anchor, target, getMap(path), dom.indexes);\r\n                                    target.bind('add',      collection.add      );\r\n                                    target.bind('remove',   collection.remove   );\r\n                                } else {\r\n                                    flex.logs.log(signature() + logs.pattern.CANNOT_DETECT_HOOK_ANCHOR, flex.logs.types.WARNING);\r\n                                }\r\n                            };\r\n                            function process(hooks, model, path) {\r\n                                function obj(hooks, model, path) {\r\n                                    _object(hooks).forEach(function (prop, val) {\r\n                                        var ref = null,\r\n                                            url = null;\r\n                                        if (val instanceof settings.classes.CALLER) {\r\n                                            ref = settings.other.SUBLEVEL_BEGIN + prop + settings.other.SUBLEVEL_END;\r\n                                            model[ref] === void 0 && (model[ref] = new ExArray());\r\n                                            bind(model[ref], (path !== '' ? path + '.' : '') + prop, val.url);\r\n                                            process(val.hooks, model[ref], (path !== '' ? path + '.' : '') + prop);\r\n                                        } else if (typeof val === 'object') {\r\n                                            model[prop] === void 0 && (model[prop] = {});\r\n                                            obj(val, model[prop], (path !== '' ? path + '.' : '') + prop);\r\n                                        } else {\r\n                                            if (val === null) {\r\n                                                url = getRef((path !== '' ? path + '.' : '') + prop);\r\n                                                if (url !== false) {\r\n                                                    ref = settings.other.SUBLEVEL_BEGIN + prop + settings.other.SUBLEVEL_END;\r\n                                                    model[ref] === void 0 && (model[ref] = new ExArray());\r\n                                                    bind(model[ref], (path !== '' ? path + '.' : '') + prop, url);\r\n                                                } else {\r\n                                                    model[prop] === void 0 && (model[prop] = val);\r\n                                                }\r\n                                            } else {\r\n                                                model[prop] === void 0 && (model[prop] = val);\r\n                                            }\r\n                                        }\r\n                                    });\r\n                                };\r\n                                hooks.forEach(function (hooks, index) {\r\n                                    model[index] === void 0 && model.push({});\r\n                                    obj(hooks, model[index], path);\r\n                                });\r\n                            };\r\n                            var cache = {};\r\n                            if (helpers.isArray(privates.hooks)) {\r\n                                privates.map.model = helpers.isArray(privates.map.model) ? privates.map.model : new ExArray();\r\n                                process(privates.hooks, privates.map.model, '');\r\n                            }\r\n                            return privates.map.model;\r\n                        },\r\n                        collection  : function (url, anchor, parent, refs, indexesUpdate) {\r\n                            var Collection = function (url, anchor) {\r\n                                var self            = this,\r\n                                    add             = null,\r\n                                    getStartIndex   = null,\r\n                                    mount           = null,\r\n                                    unmount         = null,\r\n                                    remove          = null,\r\n                                    hooks           = null,\r\n                                    update          = indexesUpdate,\r\n                                    dom             = null;\r\n                                this.url        = url;\r\n                                this.anchor     = anchor;\r\n                                this.parent     = parent;\r\n                                this.refs       = refs;\r\n                                this.start      = null;\r\n                                getStartIndex   = function getStartIndex() {\r\n                                    var parent = self.anchor.parentNode,\r\n                                        target = null;\r\n                                    if (self.start === null) {\r\n                                        try {\r\n                                            Array.prototype.forEach.call(parent.childNodes, function (node) {\r\n                                                if (node === self.anchor) {\r\n                                                    throw 'found';\r\n                                                }\r\n                                                if (node instanceof Element) {\r\n                                                    target = node;\r\n                                                }\r\n                                            });\r\n                                        } catch (e) { }\r\n                                        if (target !== null) {\r\n                                            self.start = Array.prototype.indexOf.call(parent.children, target) + 1;\r\n                                        } else {\r\n                                            self.start = 0;\r\n                                        }\r\n                                    }\r\n                                    return self.start;\r\n                                };\r\n                                mount           = function mount(nodes, index, count) {\r\n                                    var parent  = self.anchor.parentNode,\r\n                                        mark    = null,\r\n                                        start   = getStartIndex(),\r\n                                        finish  = start + (self.parent.length - 2);\r\n                                    if (self.parent.length - 1 === index + (count - 1)) {\r\n                                        if (parent.children.length - 1 > finish) {\r\n                                            mark = parent.children[finish + 1];\r\n                                            for (var i = nodes.length - 1; i >= 0; i -= 1) {\r\n                                                parent.insertBefore(nodes[0], mark);\r\n                                            }\r\n                                        } else {\r\n                                            for (var i = nodes.length - 1; i >= 0; i -= 1) {\r\n                                                parent.appendChild(nodes[0]);\r\n                                            }\r\n                                        }\r\n                                    } else if (parent.children[start + index] !== void 0) {\r\n                                        mark = parent.children[start + index];\r\n                                        for (var i = nodes.length - 1; i >= 0; i -= 1) {\r\n                                            parent.insertBefore(nodes[0], mark);\r\n                                        }\r\n                                    }\r\n                                };\r\n                                unmount         = function unmount(index, count) {\r\n                                    var children    = self.anchor.parentNode !== null ? self.anchor.parentNode.children : null,\r\n                                        target      = null,\r\n                                        start       = getStartIndex();\r\n                                    if (children.length !== null && children[start + index] !== void 0) {\r\n                                        for (var i = count - 1; i >= 0; i -= 1) {\r\n                                            target = children[start + index + i];\r\n                                            target.parentNode.removeChild(target);\r\n                                        }\r\n                                    }\r\n                                };\r\n                                hooks           = function hooks(src, map) {\r\n                                    var map = map === null ? null : (map.hooks !== void 0 ? map.hooks : null);\r\n                                    if (map !== null) {\r\n                                        src.forEach(function (_hooks, index) {\r\n                                            _object(_hooks).forEach(function (prop, val) {\r\n                                                if (map[prop] !== void 0) {\r\n                                                    src[index][prop] = Caller.instance({\r\n                                                        url     : map[prop].url,\r\n                                                        hooks   : hooks(helpers.isArray(val) ? val : [val], map[prop])\r\n                                                    });\r\n                                                }\r\n                                            });\r\n                                        });\r\n                                    }\r\n                                    return src;\r\n                                };\r\n                                add             = function add(event) {\r\n                                    var added   = helpers.isArray(event.item) ? event.item : [event.item],\r\n                                        inst    = Caller.instance({\r\n                                            url     : self.url,\r\n                                            hooks   : hooks(added, self.refs)\r\n                                        });\r\n                                    inst        = inst.build();\r\n                                    added.forEach(function (item, index) {\r\n                                        self.parent[event.index + index] = inst.model[index].length === 1 ? inst.model[index][0] : inst.model[index];\r\n                                    });\r\n                                    mount(inst.nodes, event.index, event.count);\r\n                                    dom.add(inst.model);\r\n                                    update();\r\n                                    return void 0;\r\n                                };\r\n                                remove          = function remove(event) {\r\n                                    unmount(event.index, event.count);\r\n                                    dom.remove(helpers.isArray(event.item) ? event.item : [event.item]);\r\n                                    update();\r\n                                    return void 0;\r\n                                };\r\n                                dom             = {\r\n                                    add     : function (models) {\r\n                                        models.forEach(function (model) {\r\n                                            if (typeof model === 'object') {\r\n                                                _object(model).forEach(function (prop, val) {\r\n                                                    if (val instanceof addition.nodeList.NODE_LIST) {\r\n                                                        self.parent[prop] === void 0 && (self.parent[prop] = addition.nodeList.create());\r\n                                                        self.parent[prop].add(val);\r\n                                                    }\r\n                                                });\r\n                                            }\r\n                                        });\r\n                                    },\r\n                                    remove  : function (models) {\r\n                                        models.forEach(function (model) {\r\n                                            if (typeof model === 'object') {\r\n                                                _object(model).forEach(function (prop, val) {\r\n                                                    if (val instanceof addition.nodeList.NODE_LIST && self.parent[prop] !== void 0) {\r\n                                                        self.parent[prop] === void 0 && (self.parent[prop] = addition.nodeList.create());\r\n                                                        self.parent[prop].exclude(val);\r\n                                                    }\r\n                                                });\r\n                                            }\r\n                                        });\r\n                                    }\r\n                                };\r\n                                return {\r\n                                    add     : add,\r\n                                    remove  : remove\r\n                                }\r\n                            };\r\n                            return new Collection(url, anchor);\r\n                        },\r\n                    };\r\n                    dom         = {\r\n                        nodes   : function () {\r\n                            var nodes       = _nodes('*[' + settings.css.attrs.DOM + ']', false, privates.wrapper).target,\r\n                                res         = {},\r\n                                cache       = {};\r\n                            if (nodes !== null && nodes.length > 0) {\r\n                                Array.prototype.forEach.call(nodes, function (node) {\r\n                                    var attr    = node.getAttribute(settings.css.attrs.DOM),\r\n                                        names   = cache[attr] !== void 0 ? cache[attr] : attr.split(',');\r\n                                    cache[attr] = names;\r\n                                    names.forEach(function (ref) {\r\n                                        res[ref] = res[ref] === void 0 ? [] : res[ref];\r\n                                        res[ref].push(node);\r\n                                    });\r\n                                    node.removeAttribute(settings.css.attrs.DOM);\r\n                                });\r\n                            }\r\n                            return res;\r\n                        },\r\n                        bind    : function (){\r\n                            function getMap(map, path) {\r\n                                var res = null;\r\n                                if (map instanceof Array) {\r\n                                    res = [];\r\n                                    map.forEach(function (item) {\r\n                                        res.push(getMap(item, path));\r\n                                    });\r\n                                } else if (typeof map === 'object') {\r\n                                    res = {};\r\n                                    _object(map).forEach(function (prop, val) {\r\n                                        res[prop] = getMap(val, path + (path === '' ? '' : '.') + prop);\r\n                                    });\r\n                                } else if (typeof map === 'number') {\r\n                                    if (nodes[path] !== void 0 && nodes[path].length >= map) {\r\n                                        res = addition.nodeList.create(nodes[path].slice(0, map));\r\n                                        nodes[path].splice(0, map);\r\n                                    }\r\n                                }\r\n                                return res;\r\n                            };\r\n                            var cache   = {},\r\n                                nodes   = dom.nodes(),\r\n                                map     = mapping.get(consts.maps.DOM);\r\n                            return getMap(map, '');\r\n                        },\r\n                        indexes : function () {\r\n                            function process(model, indexes, parent) {\r\n                                if (helpers.isArray(model)) {\r\n                                    model.forEach(function (model, index) {\r\n                                        process(model, indexes.concat([index]), parent);\r\n                                    });\r\n                                } else if (typeof model === 'object') {\r\n                                    _object(model).forEach(function (prop, val) {\r\n                                        if (val instanceof addition.nodeList.NODE_LIST) {\r\n                                            val.setIndexes(indexes);\r\n                                            if (parent !== null) {\r\n                                                parent[prop] === void 0 && (parent[prop] = addition.nodeList.create());\r\n                                                parent[prop].add(val);\r\n                                            }\r\n                                        } else if (helpers.isArray(val)) {\r\n                                            process(val, indexes, val);\r\n                                        }\r\n                                    });\r\n                                }\r\n                            };\r\n                            if (helpers.isArray(privates.map.model)) {\r\n                                process(privates.map.model, [], null);\r\n                            }\r\n                        }\r\n                    };\r\n                    html        = {\r\n                        cache       : {\r\n                            load    : function (parent, conditions) {\r\n                                var cache       = privates.cache.html,\r\n                                    conditions  = typeof conditions === 'object' ? conditions : false,\r\n                                    _cache      = {},\r\n                                    _names      = {},\r\n                                    insts       = {};\r\n                                if (helpers.isArray(privates.hooks)) {\r\n                                    privates.hooks.forEach(function (_hooks) {\r\n                                        _object(_hooks).forEach(function (name, value) {\r\n                                            var _name   = null,\r\n                                                path    = null,\r\n                                                ref     = null;\r\n                                            if (value instanceof settings.classes.CALLER) {\r\n                                                _name       = settings.other.SUBLEVEL_BEGIN + name + settings.other.SUBLEVEL_END;\r\n                                                path        = (parent === false ? '' : parent + '.') + _name;\r\n                                                ref         = path + value.url;\r\n                                                _cache[ref] = _cache[ref] !== void 0 ? _cache[ref] : { url: value.url, hooks: [], path: path };\r\n                                                if (helpers.isArray(value.hooks)) {\r\n                                                    _cache[ref].hooks = _cache[ref].hooks.concat(value.hooks.getOriginal());\r\n                                                } else {\r\n                                                    _cache[ref].hooks.push(value.hooks);\r\n                                                }\r\n                                            }\r\n                                        });\r\n                                    });\r\n                                    _object(_cache).forEach(function (ref, data) {\r\n                                        var html = Pattern.instance({\r\n                                                id      : flex.unique(),\r\n                                                url     : data.url,\r\n                                                hooks   : data.hooks\r\n                                            });\r\n                                        html        = html.html(data.path, conditions);\r\n                                        cache[ref]  = {\r\n                                            hooks       : data.hooks,\r\n                                            html        : html.html,\r\n                                            fragments   : html.fragments,\r\n                                            parent      : data.path,\r\n                                            cursor      : 0,\r\n                                        };\r\n                                    });\r\n                                    return cache;\r\n                                }\r\n                            },\r\n                        },\r\n                        getHTML     : function (parent, name, inst, index){\r\n                            var html            = false,\r\n                                cached          = null,\r\n                                ref             = null,\r\n                                _ref            = (parent === false ? '' : parent + '.') + settings.other.SUBLEVEL_BEGIN + name + settings.other.SUBLEVEL_END;\r\n                            if (inst instanceof settings.classes.CALLER) {\r\n                                ref     = _ref + inst.url;\r\n                                if (privates.cache.html[ref] !== void 0) {\r\n                                    cached  = privates.cache.html[ref];\r\n                                    html    = {\r\n                                        html        : '<!--' + settings.other.ANCHOR + _ref + '-->' + cached.fragments.slice(cached.cursor, cached.cursor + inst.hooks.length).join(''),\r\n                                        fragments   : null,\r\n                                        original    : cached.original\r\n                                    };\r\n                                    cached.cursor   += inst.hooks.length;\r\n                                }\r\n                            }\r\n                            return html;\r\n                        },\r\n                        build       : function (parent, conditions) {\r\n                            var parent      = typeof parent === 'string' ? parent : false,\r\n                                conditions  = typeof conditions === 'object' ? conditions : false,\r\n                                res         = '',\r\n                                original    = null,\r\n                                regs        = settings.regs,\r\n                                _cache      = cache.reset().regs,\r\n                                fragments   = [],\r\n                                cached      = hash.getCache();\r\n                            if (cached === null) {\r\n                                original = self.source.html(parent);\r\n                                if (helpers.isArray(privates.hooks)) {\r\n                                    html.cache.load(parent, conditions);\r\n                                    privates.hooks.forEach(function (_hooks, index) {\r\n                                        var fragment = original;\r\n                                        _object(_hooks).forEach(function (name, value) {\r\n                                            var _name   = (!parent ? '' : parent + '.') + name,\r\n                                                _res    = html.getHTML(parent, name, value, index);\r\n                                            _cache[_name]   = _cache[_name] === void 0 ? new RegExp(regs.HOOK_OPEN + _name.replace(/\\./gi,'\\\\.') + regs.HOOK_CLOSE, 'gi') : _cache[_name];\r\n                                            fragment        = _res !== false ? fragment.replace(_cache[_name], _res.html) : fragment;\r\n                                            fragment        = _res !== false ? fragment : hooks.insert(_name, value, fragment);\r\n                                        });\r\n                                        fragment    = condition.html(fragment, condition.getByPath(!parent ? '' : parent, conditions), _hooks, parent);\r\n                                        res         += fragment;\r\n                                        fragments.push(fragment);\r\n                                    });\r\n                                }\r\n                                privates.html = res !== '' ? res : original;\r\n                                hash.setCache({\r\n                                    html        : privates.html,\r\n                                    fragments   : fragments.length === 0 ? [original] : fragments,\r\n                                });\r\n                                return fragments.length === 0 ? [original] : fragments;\r\n                            } else {\r\n                                privates.html = cached.html;\r\n                                return cached.fragments;\r\n                            }\r\n                        },\r\n                        wrap        : function () {\r\n                            privates.wrapper            = helpers.getPattern(privates.html);\r\n                            privates.wrapper.innerHTML  = privates.html;\r\n                        },\r\n                        map         : function (){\r\n                            function procces(hooks, path, name, dest) {\r\n                                var _name   = '',\r\n                                    source  = null;\r\n                                if (hooks instanceof settings.classes.CALLER) {\r\n                                    _name = settings.other.SUBLEVEL_BEGIN + name + settings.other.SUBLEVEL_END;\r\n                                    if (dest[_name] === void 0) {\r\n                                        source      = Source.storage.get(hooks.url);\r\n                                        path        = (path === '' ? '' : path + '.') + _name;\r\n                                        dest.inc    = dest.inc === void 0 ? [] : dest.inc;\r\n                                        dest[_name] = {\r\n                                            url     : hooks.url,\r\n                                            html    : source.html(path),\r\n                                        };\r\n                                        dest.inc.push(_name);\r\n                                        procces(hooks.hooks, path, name, dest[_name]);\r\n                                    }\r\n                                } else if (helpers.isArray(hooks)) {\r\n                                    hooks.forEach(function (hooks) {\r\n                                        procces(hooks, path, name, dest);\r\n                                    });\r\n                                } else if (typeof hooks === 'object') {\r\n                                    _object(hooks).forEach(function (name, hooks) {\r\n                                        procces(hooks, path, name, dest);\r\n                                    });\r\n                                }\r\n                            };\r\n                            privates.map.html = {\r\n                                url : self.url,\r\n                                html: self.source.html(''),\r\n                            };\r\n                            procces(privates.hooks, '', '', privates.map.html);\r\n                        },\r\n                    };\r\n                    hooks       = {\r\n                        cache   : {},\r\n                        getValue: function (name, value) {\r\n                            var res = '';\r\n                            if (value instanceof settings.classes.CALLER) {\r\n                                res = hooks.convert(value.hooks);\r\n                            } else if (typeof value === 'function'){\r\n                                res = hooks.getValue(name, value());\r\n                            } else if (typeof value === 'string') {\r\n                                res = value;\r\n                            } else if (typeof value === 'object') {\r\n                                res = {};\r\n                                _object(value).forEach(function (name, val) {\r\n                                    res[name] = hooks.getValue(name, val);\r\n                                });\r\n                            } else if (typeof value.toString === 'function') {\r\n                                res = value.toString();\r\n                            } else {\r\n                                flex.logs.log(signature() + logs.pattern.CANNOT_DETECT_HOOK_VALUE + '. Hook name: (' + name + ')', flex.logs.types.WARNING);\r\n                                res = '';\r\n                            }\r\n                            return res;\r\n                        },\r\n                        convert : function (source_hooks) {\r\n                            var result = [];\r\n                            if (helpers.isArray(source_hooks)) {\r\n                                source_hooks.forEach(function (_hooks) {\r\n                                    var res = {};\r\n                                    _object(_hooks).forEach(function (name, value) {\r\n                                        res[name] = hooks.getValue(name, value);\r\n                                    });\r\n                                    result.push(res);\r\n                                });\r\n                            }\r\n                            return result;\r\n                        },\r\n                        insert  : function (name, value, fragment) {\r\n                            function getProps(parent, obj, props) {\r\n                                var props = props !== void 0 ? props : {};\r\n                                _object(obj).forEach(function (name, value) {\r\n                                    if (!(value instanceof settings.classes.CALLER) && typeof value === 'object') {\r\n                                        getProps(parent + '.' + name, value, props);\r\n                                    } else {\r\n                                        props[parent + '.' + name] = value;\r\n                                    }\r\n                                });\r\n                                return props;\r\n                            };\r\n                            var cache           = privates.cache.regs;\r\n                            if (typeof value === 'object') {\r\n                                _object(getProps(name, value)).forEach(function (name, value) {\r\n                                    fragment = hooks.insert(name, value, fragment);\r\n                                });\r\n                                return fragment;\r\n                            } else {\r\n                                cache[name] = cache[name] === void 0 ? new RegExp(settings.regs.HOOK_OPEN + name + settings.regs.HOOK_CLOSE, 'gi') : cache[name];\r\n                                return fragment.replace(cache[name], hooks.getValue(name, value));\r\n                            }\r\n                        },\r\n                        anchors : {\r\n                            html    : function () {\r\n                                function getRef(ref) {\r\n                                    var parts   = ref.split('.'),\r\n                                        _ref    = '';\r\n                                    parts.forEach(function (part, index) {\r\n                                        if (index === parts.length - 1) {\r\n                                            _ref += (_ref !== '' ? '.' : '') + settings.other.SUBLEVEL_BEGIN + part + settings.other.SUBLEVEL_END;\r\n                                        } else {\r\n                                            _ref += (_ref !== '' ? '.' : '') + part;\r\n                                        }\r\n                                    });\r\n                                    return _ref;\r\n                                };\r\n                                var matchs  = privates.html.match(settings.regs.HOOK),\r\n                                    regs    = settings.regs,\r\n                                    cache   = {},\r\n                                    refs    = {};\r\n                                if (matchs instanceof Array) {\r\n                                    matchs.forEach(function (hook) {\r\n                                        var ref = hook.replace(settings.regs.HOOK_BORDERS, ''),\r\n                                            reg = cache[ref] !== void 0 ? cache[ref] : new RegExp(regs.HOOK_OPEN + ref.replace(/\\./gi, '\\\\.') + regs.HOOK_CLOSE, 'gi');\r\n                                        cache[ref]  = reg;\r\n                                        ref         = refs[ref] === void 0 ? getRef(ref) : refs[ref];\r\n                                        refs[ref]   = ref;\r\n                                        privates.html = privates.html.replace(reg, '<!--' + settings.other.ANCHOR + ref + '-->');\r\n                                    });\r\n                                }\r\n                            },\r\n                            convert : function () {\r\n                                function converHooksAccessors(accessors, name, path) {\r\n                                    function convert(node) {\r\n                                        var textNode = document.createTextNode('');\r\n                                        node.parentNode.insertBefore(textNode, node);\r\n                                        node.parentNode.removeChild(node);\r\n                                        return textNode;\r\n                                    };\r\n                                    function makeAccessor(begin, end, path) {\r\n                                        return function hookAccessor(content, safely) {\r\n                                            function getNodes(begin, end) {\r\n                                                var i       = 10000,\r\n                                                    nodes   = [],\r\n                                                    current = begin;\r\n                                                do {\r\n                                                    if (current !== begin && current !== end) {\r\n                                                        nodes.push(current);\r\n                                                    }\r\n                                                    current = current.nextSibling;\r\n                                                    i -= 1;\r\n                                                } while (i >= 0 && current !== null && current !== end);\r\n                                                i < 0 && flex.logs.log(signature() + logs.pattern.CANNOT_DETECT_BEGIN_OR_END_HOOK_ANC + '. Hook name: (' + path + ')', flex.logs.types.WARNING);\r\n                                                return nodes;\r\n                                            };\r\n                                            function getValue(value) {\r\n                                                var res = value;\r\n                                                if (typeof value === 'function') {\r\n                                                    res = getValue(value());\r\n                                                } else if (typeof value === 'string') {\r\n                                                    res = value;\r\n                                                } else if (typeof value !== 'object' && typeof value.toString === 'function') {\r\n                                                    res = value.toString();\r\n                                                }\r\n                                                return res === null ? '' : res;\r\n                                            };\r\n                                            function setModelValue(model, hook, value, pattern) {\r\n                                                var prev = model[hook] !== void 0 ? model[hook] : model[settings.other.SUBLEVEL_BEGIN + hook + settings.other.SUBLEVEL_END];\r\n                                                model[settings.other.SUBLEVEL_BEGIN + hook + settings.other.SUBLEVEL_END] !== void 0 && (delete model[settings.other.SUBLEVEL_BEGIN + hook + settings.other.SUBLEVEL_END]);\r\n                                                model[hook]                                                                 !== void 0 && (delete model[hook]);\r\n                                                model[(pattern ? settings.other.SUBLEVEL_BEGIN : '') + hook + (pattern ? settings.other.SUBLEVEL_END : '')] = value;\r\n                                                if (privates.controller !== null && typeof privates.controller === 'object' && typeof privates.controller[settings.events.ONCHANGE] === 'function') {\r\n                                                    privates.controller[settings.events.ONCHANGE]((pattern ? settings.other.SUBLEVEL_BEGIN : '') + hook + (pattern ? settings.other.SUBLEVEL_END : ''), value, prev);\r\n                                                }\r\n                                            };\r\n                                            var nodes       = getNodes(begin, end),\r\n                                                inserted    = getValue(content),\r\n                                                wrapper     = null,\r\n                                                tag         = null,\r\n                                                safely      = typeof safely === 'boolean' ? safely : true,\r\n                                                model       = this;\r\n                                            if (nodes instanceof Array && nodes.length > 0) {\r\n                                                //Remove nodes\r\n                                                nodes.forEach(function (node) {\r\n                                                    node.parentNode.removeChild(node);\r\n                                                });\r\n                                                //Inserting\r\n                                                if (typeof inserted === 'string' && !safely) {\r\n                                                    tag = helpers.getFirstTag(inserted);\r\n                                                    if (tag !== null) {\r\n                                                        wrapper = helpers.getParentFor(tag);\r\n                                                        if (wrapper !== null) {\r\n                                                            wrapper.innerHTML = inserted;\r\n                                                            Array.prototype.forEach.call(wrapper.childNodes, function (child) {\r\n                                                                end.parentNode.insertBefore(child, end);\r\n                                                            });\r\n                                                        } else {\r\n                                                            flex.logs.log(signature() + logs.pattern.CANNOT_DETECT_HTML + '. Hook name: (' + path + ')', flex.logs.types.WARNING);\r\n                                                        }\r\n                                                    } else {\r\n                                                        end.parentNode.insertBefore(document.createTextNode(inserted), end);\r\n                                                    }\r\n                                                    setModelValue(model.model, model.hook, inserted, false);\r\n                                                } else if (typeof inserted === 'string' && safely){\r\n                                                    end.parentNode.insertBefore(document.createTextNode(inserted), end);\r\n                                                    setModelValue(model.model, model.hook, inserted, false);\r\n                                                } else if (inserted instanceof settings.classes.CALLER) {\r\n                                                    inserted.render({\r\n                                                        replace : false,\r\n                                                        before  : end,\r\n                                                        callback: function (result) {\r\n                                                            setModelValue(model.model, model.hook, result.model, true);\r\n                                                            return result;\r\n                                                        }\r\n                                                    });\r\n                                                } else {\r\n                                                    flex.logs.log(signature() + logs.pattern.TEXT_HOOK_VALUE_CANBE_ONLY_TEXT + '. Hook name: (' + path + ')', flex.logs.types.WARNING);\r\n                                                    end.parentNode.insertBefore(document.createTextNode(Object.prototype.toString.call(inserted)), end);\r\n                                                    setModelValue(model.model, model.hook, Object.prototype.toString.call(inserted), false);\r\n                                                }\r\n                                            }\r\n                                        };\r\n                                    };\r\n                                    if (helpers.isArray(accessors)) {\r\n                                        if (accessors[settings.other.HOOK_COM_BEGIN] !== void 0 && accessors[settings.other.HOOK_COM_END] !== void 0) {\r\n                                            accessors[settings.other.HOOK_ACCESSOR_FUNC_NAME] = makeAccessor(convert(accessors[settings.other.HOOK_COM_BEGIN]), convert(accessors[settings.other.HOOK_COM_END]), path);\r\n                                            delete accessors[settings.other.HOOK_COM_BEGIN];\r\n                                            delete accessors[settings.other.HOOK_COM_END];\r\n                                        }\r\n                                        accessors.forEach(function (accessors) {\r\n                                            converHooksAccessors(accessors, name, path);\r\n                                        });\r\n                                    } else if (typeof accessors === 'object' && accessors !== null) {\r\n                                        if (accessors[settings.other.HOOK_COM_BEGIN ] !== void 0 && accessors[settings.other.HOOK_COM_END] !== void 0) {\r\n                                            accessors[settings.other.HOOK_ACCESSOR_FUNC_NAME] = makeAccessor(convert(accessors[settings.other.HOOK_COM_BEGIN]), convert(accessors[settings.other.HOOK_COM_END]), path);\r\n                                            delete accessors[settings.other.HOOK_COM_BEGIN];\r\n                                            delete accessors[settings.other.HOOK_COM_END];\r\n                                            _object(accessors).forEach(function (prop, accessors) {\r\n                                                if (prop !== settings.other.HOOK_COM_BEGIN && prop !== settings.other.HOOK_COM_END) {\r\n                                                    converHooksAccessors(accessors, prop, path + (path === '' ? '' : '.') + prop);\r\n                                                }\r\n                                            });\r\n                                        } else {\r\n                                            _object(accessors).forEach(function (prop, accessors) {\r\n                                                converHooksAccessors(accessors, prop, path + (path === '' ? '' : '.') + prop);\r\n                                            });\r\n                                        }\r\n                                    }\r\n                                };\r\n                                var cursor          = { __root : 0 },\r\n                                    accessors       = [{}],\r\n                                    ends            = {},\r\n                                    remove          = [],\r\n                                    treeWalker      = document.createTreeWalker(\r\n                                        privates.wrapper,\r\n                                        NodeFilter.SHOW_COMMENT,\r\n                                        {\r\n                                            acceptNode: function (node) {\r\n                                                function getObj(ref) {\r\n                                                    var path    = ref.split('.'),\r\n                                                        trg     = accessors[cursor.__root],\r\n                                                        cur     = '',\r\n                                                        prev    = null,\r\n                                                        _trg    = null;\r\n                                                    path.forEach(function (step, index) {\r\n                                                        _trg = trg;\r\n                                                        cur += (cur === '' ? '' : '.') + step;\r\n                                                        if (prev === null && trg[step] !== void 0 && index === path.length - 1) {\r\n                                                            accessors.push({});\r\n                                                            cursor.__root   += 1;\r\n                                                            trg             = accessors[cursor.__root];\r\n                                                        }\r\n                                                        if (trg[step] === void 0) {\r\n                                                            trg[step]   = {};\r\n                                                            trg         = trg[step];\r\n                                                        } else {\r\n                                                            if (trg[step] instanceof Array) {\r\n                                                                if (index === path.length - 1) {\r\n                                                                    trg[step].push({});\r\n                                                                    cursor[cur] += 1;\r\n                                                                    trg         = trg[step][cursor[cur]];\r\n                                                                } else {\r\n                                                                    trg         = trg[step][cursor[cur]];\r\n                                                                }\r\n                                                            } else {\r\n                                                                if (index === path.length - 1) {\r\n                                                                    if (prev.trg[prev.step] instanceof Array) {\r\n                                                                        prev.trg[prev.step].push({});\r\n                                                                        cursor[prev.cur]    += 1;\r\n                                                                        trg                 = prev.trg[prev.step][cursor[prev.cur]];\r\n                                                                        trg[step]           = {};\r\n                                                                        trg                 = trg[step];\r\n                                                                    } else {\r\n                                                                        prev.trg[prev.step] = [prev.trg[prev.step], {}];\r\n                                                                        if (prev.trg[prev.step][0][settings.other.HOOK_COM_BEGIN] !== void 0 ){\r\n                                                                            prev.trg[prev.step][settings.other.HOOK_COM_BEGIN]  = prev.trg[prev.step][0][settings.other.HOOK_COM_BEGIN];\r\n                                                                            prev.trg[prev.step][0][ref_perent]                  = prev.trg[prev.step];\r\n                                                                            delete prev.trg[prev.step][0][settings.other.HOOK_COM_BEGIN];\r\n                                                                        }\r\n                                                                        trg                 = prev.trg[prev.step][1];\r\n                                                                        trg[step]           = {};\r\n                                                                        trg                 = trg[step];\r\n                                                                        cursor[prev.cur]    = 1;\r\n                                                                    }\r\n                                                                } else {\r\n                                                                    trg = trg[step];\r\n                                                                }\r\n                                                            }\r\n                                                        }\r\n                                                        prev = {\r\n                                                            cur : cur,\r\n                                                            trg : _trg,\r\n                                                            step: step\r\n                                                        };\r\n                                                    });\r\n                                                    return trg;\r\n                                                };\r\n                                                var obj         = null,\r\n                                                    clr         = null,\r\n                                                    ref_perent  = '__REF_TO_PARENT_ARR',\r\n                                                    _parent     = null;\r\n                                                if (config.get().ACCESSORS) {\r\n                                                    if (~(node.nodeValue.indexOf(settings.other.HOOK_COM_BEGIN))) {\r\n                                                        clr                                 = node.nodeValue.replace(settings.other.HOOK_COM_BEGIN, '');\r\n                                                        obj                                 = getObj(clr);\r\n                                                        obj[settings.other.HOOK_COM_BEGIN]  = node;\r\n                                                        ends[clr]                           = obj;\r\n                                                    }\r\n                                                    if (~(node.nodeValue.indexOf(settings.other.HOOK_COM_END))) {\r\n                                                        clr                                     = node.nodeValue.replace(settings.other.HOOK_COM_END, '');\r\n                                                        if (ends[clr][ref_perent] !== void 0){\r\n                                                            _parent     = ends[clr][ref_perent];\r\n                                                            delete ends[clr][ref_perent];\r\n                                                            ends[clr]   = _parent;\r\n                                                        }\r\n                                                        ends[clr][settings.other.HOOK_COM_END]  = node;\r\n                                                    }\r\n                                                } else {\r\n                                                    if (~(node.nodeValue.indexOf(settings.other.HOOK_COM_BEGIN)) || ~(node.nodeValue.indexOf(settings.other.HOOK_COM_END))) {\r\n                                                        remove.push(node);\r\n                                                    }\r\n                                                }\r\n                                                return ~(node.nodeValue.indexOf(settings.other.ANCHOR)) ? NodeFilter.FILTER_ACCEPT : NodeFilter.FILTER_REJECT;\r\n                                            }\r\n                                        },\r\n                                        false\r\n                                    ),\r\n                                    nodeList        = [],\r\n                                    anchors         = {};\r\n                                while (treeWalker.nextNode()) {\r\n                                    nodeList.push(treeWalker.currentNode);\r\n                                }\r\n                                remove.forEach(function (node) {\r\n                                    node.parentNode.removeChild(node);\r\n                                });\r\n                                nodeList.forEach(function (node) {\r\n                                    var anchor  = document.createTextNode(''),\r\n                                        ref     = node.nodeValue.replace(settings.other.ANCHOR, '');\r\n                                    anchors[ref] === void 0 && (anchors[ref] = []);\r\n                                    anchors[ref].push(anchor);\r\n                                    node.parentNode.insertBefore(anchor, node);\r\n                                    node.parentNode.removeChild(node);\r\n                                });\r\n                                config.get().ACCESSORS && converHooksAccessors(accessors, '', '');\r\n                                privates.map.anchors    = anchors;\r\n                                privates.map.accessors  = accessors;\r\n                            },\r\n                            get     : function (path) {\r\n                                var anchor = null;\r\n                                if (privates.map.anchors !== null) {\r\n                                    if (privates.map.anchors[path] instanceof Array && privates.map.anchors[path].length > 0) {\r\n                                        anchor = privates.map.anchors[path][0];\r\n                                        privates.map.anchors[path].splice(0, 1);\r\n                                    }\r\n                                }\r\n                                return anchor;\r\n                            }\r\n                        },\r\n                    };\r\n                    condition   = {\r\n                        find        : function () {\r\n                            function proccess(_conditions, hooks) {\r\n                                if (helpers.isArray(hooks)) {\r\n                                    hooks.forEach(function (hooks) {\r\n                                        proccess(_conditions, hooks);\r\n                                    });\r\n                                } else if (typeof hooks === 'object') {\r\n                                    _object(hooks).forEach(function (prop, val) {\r\n                                        var _prop = null,\r\n                                            _cond = null;\r\n                                        if (val instanceof settings.classes.CALLER) {\r\n                                            if (_urls[val.url] === void 0) {\r\n                                                _prop               = settings.other.SUBLEVEL_BEGIN + prop + settings.other.SUBLEVEL_END;\r\n                                                _cond               = _object(val.conditions).copy();\r\n                                                _cond               = Object.keys(_cond).length === 0 ? conditions.storage.get(val.url) : _cond;\r\n                                                _conditions[_prop]  = _cond !== null ? _cond : {};\r\n                                                proccess(_conditions[_prop], val.hooks);\r\n                                            }\r\n                                        } else if (typeof val === 'object') {\r\n                                            _conditions[prop] = {};\r\n                                            proccess(_conditions[prop], val);\r\n                                        }\r\n                                    });\r\n                                }\r\n                            };\r\n                            var _urls = {};\r\n                            if (Object.keys(privates.conditions).length === 0) {\r\n                                privates.conditions = conditions.storage.get(self.url);\r\n                                privates.conditions = privates.conditions === null ? {} : privates.conditions;\r\n                            }\r\n                            proccess(privates.conditions, privates.hooks);\r\n                            return privates.conditions;\r\n                        },\r\n                        html        : function (fragment, conditions, hooks, parent){\r\n                            var source  = null,\r\n                                res     = null,\r\n                                path    = parent !== false ? parent + '.' : '',\r\n                                cache   = null,\r\n                                map     = null,\r\n                                refs    = '';\r\n                            privates.cache.html_conds   = privates.cache.html_conds === void 0 ? { regs : {}, matches : {}, removed: {}} : privates.cache.html_conds;\r\n                            cache                       = privates.cache.html_conds;\r\n                            if (conditions !== false) {\r\n                                source = Source.storage.get(self.url);\r\n                                if (source !== null && source.flags().has_conditions && !source.flags().has_model) {\r\n                                    map = source.map().conditions;\r\n                                    _object(conditions).forEach(function (prop, val) {\r\n                                        var res     = null,\r\n                                            ref     = null,\r\n                                            match   = null;\r\n                                        if (val instanceof Function) {\r\n                                            res                 = val(hooks);\r\n                                            ref                 = path + prop + '=' + res;\r\n                                            match               = null;\r\n                                            cache.regs[ref]     = cache.regs[ref] !== void 0 ? cache.regs[ref] : new RegExp(settings.regs.CONDITION_CONTENT.replace('[open]', ref.replace('.', '\\\\.')).\r\n                                                                                                                                                            replace('[close]', (path + prop).replace('.', '\\\\.')), 'gi');\r\n                                            match = fragment.match(cache.regs[ref]);\r\n                                            if (match instanceof Array && match.length > 0) {\r\n                                                match.forEach(function (match) {\r\n                                                    fragment = fragment.replace(match, match.replace('<!--' + ref + '-->', '').replace('<!--' + path + prop + '-->', ''));\r\n                                                });\r\n                                            }\r\n                                            cache.regs[prop] = cache.regs[prop] !== void 0 ? cache.regs[prop] : new RegExp(settings.regs.CONDITION_CONTENT_ANY. replace('[open]', (path + prop).replace('.', '\\\\.')).\r\n                                                                                                                                                                replace('[close]', (path + prop).replace('.', '\\\\.')), 'gi');\r\n                                            fragment    = fragment.replace(cache.regs[prop], '');\r\n                                            refs        += refs === '' ? path + prop : '|' + path + prop;\r\n                                        }\r\n                                    });\r\n                                    cache.regs[refs]    = cache.regs[refs] !== void 0 ? cache.regs[refs] : new RegExp(settings.css.attrs.CONDITION + '=\".*?(' + refs + ').*?\"', 'gi');\r\n                                    fragment            = fragment.replace(cache.regs[refs], '');\r\n                                } else {\r\n                                    _object(conditions).forEach(function (prop, val) {\r\n                                        var ref     = path + prop,\r\n                                            open    = 'OPEN-' + ref,\r\n                                            close   = 'CLOSE-' + ref;\r\n                                        cache.removed[open]     = cache.removed[open]   !== void 0 ? cache.removed[open]    : new RegExp('<\\\\!--' + ref.replace('.', '\\\\.') + '=.{1,}?' + '-->', 'gi');\r\n                                        cache.removed[close]    = cache.removed[close]  !== void 0 ? cache.removed[close]   : new RegExp('<\\\\!--' + ref.replace('.', '\\\\.') + '-->', 'gi');\r\n                                        fragment = fragment.replace(cache.removed[open], '');\r\n                                        fragment = fragment.replace(cache.removed[close], '');\r\n                                    });\r\n                                }\r\n                            }\r\n                            return fragment;\r\n                        },\r\n                        getByPath   : function (path, conditions){\r\n                            var parts   = path.split('.'),\r\n                                dest    = conditions !== void 0 ? (conditions !== false ? conditions : privates.conditions) : privates.conditions,\r\n                                cache   = privates.cache.conditions;\r\n                            if (path !== '' && cache[path] === void 0) {\r\n                                parts.forEach(function (part) {\r\n                                    if (dest !== null && dest[part] !== void 0 && typeof dest === 'object') {\r\n                                        dest = dest[part];\r\n                                    } else {\r\n                                        dest = null;\r\n                                    }\r\n                                });\r\n                                cache[path] = dest !== null ? (Object.keys(dest).length > 0 ? dest : null) : dest;\r\n                            }\r\n                            return path !== '' ? cache[path] : dest;\r\n                        },\r\n                        apply       : function () {\r\n                            function addAnchors() {\r\n                                if (!anchored) {\r\n                                    Array.prototype.forEach.call(list, function (node, index) {\r\n                                        var anchor = document.createTextNode('');\r\n                                        node.parentNode.insertBefore(anchor, node);\r\n                                        node.__anchor = anchor;\r\n                                    });\r\n                                    anchored = true;\r\n                                }\r\n                            };\r\n                            function proccess(hooks, path, model, count) {\r\n                                function instance(hooks, model, funcs, conds) {\r\n                                    var Instance = function (hooks, model, funcs, conds) {\r\n                                        this.hooks  = hooks;\r\n                                        this.model  = model;\r\n                                        this.funcs  = funcs;\r\n                                        this.conds  = conds;\r\n                                    };\r\n                                    Instance.prototype = {\r\n                                        getter  : function () {\r\n                                            var self = this,\r\n                                                data = {};\r\n                                            _object(this.hooks).forEach(function (prop, val) {\r\n                                                data[prop] = self.model[prop] !== void 0 ? self.model[prop] : val;\r\n                                            });\r\n                                            return data;\r\n                                        },\r\n                                        results : function (_prop, _val){\r\n                                            var res     = {},\r\n                                                data    = this.getter();\r\n                                            if (_prop !== void 0) {\r\n                                                data[_prop] = _val;\r\n                                            }\r\n                                            _object(funcs).forEach(function (prop, val) {\r\n                                                res[prop] = val(data);\r\n                                            });\r\n                                            return res;\r\n                                        },\r\n                                        update  : function (_prop, _val) {\r\n                                            var res = this.results(_prop, _val);\r\n                                            _object(this.conds).forEach(function (prop, val) {\r\n                                                var visible = true;\r\n                                                val.conds.forEach(function (con) {\r\n                                                    visible = !visible ? visible : (res[con.con] === con.val);\r\n                                                });\r\n                                                if (!visible) {\r\n                                                    val.nodes.forEach(function (node) {\r\n                                                        node.parentNode !== null && node.parentNode.removeChild(node);\r\n                                                    });\r\n                                                } else {\r\n                                                    val.nodes.forEach(function (node) {\r\n                                                        node.__anchor !== void 0 && node.__anchor.parentNode.insertBefore(node, node.__anchor);\r\n                                                    });\r\n                                                }\r\n                                            });\r\n                                        }\r\n                                    };\r\n                                    return new Instance(hooks, model, funcs, conds);\r\n                                };\r\n                                function bind(inst) {\r\n                                    _object(model).forEach(function (prop, val) {\r\n                                        if (typeof val !== 'object' && model[settings.other.BIND_PREFIX + prop] !== void 0) {\r\n                                            model[settings.other.BIND_PREFIX + prop].bind(function (current, previous) {\r\n                                                inst.update(prop, current);\r\n                                            });\r\n                                        }\r\n                                    });\r\n                                };\r\n                                var _conds  = {},\r\n                                    funcs   = {},\r\n                                    res     = {},\r\n                                    inst    = [];\r\n                                if (helpers.isArray(hooks)) {\r\n                                    hooks.forEach(function (_hooks, index) {\r\n                                        proccess(_hooks, path, model !== null ? (model[index] !== void 0 ? model[index] : null) : null, hooks.length);\r\n                                    });\r\n                                } else if (typeof hooks === 'object'){\r\n                                    _object(conds).forEach(function (prop, val) {\r\n                                        var _count = null;\r\n                                        if (val.path === path) {\r\n                                            _count          = counts[prop] === void 0 ? nodes[prop].length / count : counts[prop];\r\n                                            counts[prop]    = _count;\r\n                                            if (nodes[prop].length >= _count) {\r\n                                                _conds[prop] = {\r\n                                                    conds: val.conditions,\r\n                                                    nodes: nodes[prop].slice(0, _count)\r\n                                                };\r\n                                                nodes[prop].splice(0, _count);\r\n                                            }\r\n                                        }\r\n                                    });\r\n                                    if (Object.keys(_conds).length > 0) {\r\n                                        funcs = condition.getByPath(path);\r\n                                        if (funcs !== null) {\r\n                                            inst = instance(hooks, model, funcs, _conds);\r\n                                            if (model !== null && Object.keys(model).length > 0) {\r\n                                                addAnchors();\r\n                                                bind(inst);\r\n                                                inst.update();\r\n                                            } else {\r\n                                                inst.update();\r\n                                            }\r\n                                        }\r\n                                    }\r\n                                    _object(hooks).forEach(function (prop, val) {\r\n                                        var _prop = null;\r\n                                        if (val instanceof settings.classes.CALLER) {\r\n                                            _prop = settings.other.SUBLEVEL_BEGIN + prop + settings.other.SUBLEVEL_END;\r\n                                            proccess(   val.hooks,\r\n                                                        (path === '' ? '' : path + '.') + _prop,\r\n                                                        model !== null ? (model[_prop] !== void 0 ? model[_prop] : null) : null,\r\n                                                        -1);\r\n                                        } else if (helpers.isArray(val)) {\r\n                                            hooks.forEach(function (_hooks, index) {\r\n                                                proccess(_hooks, path, model !== null ? (model[index] !== void 0 ? model[index] : null) : null, -1);\r\n                                            });\r\n                                        }\r\n                                    });\r\n                                }\r\n                            };\r\n                            var list        = _nodes('*[' + settings.css.attrs.CONDITION + ']', false, privates.wrapper).target,\r\n                                nodes       = null,\r\n                                conds       = {},\r\n                                counts      = {},\r\n                                anchored    = false;\r\n                            if (list instanceof NodeList) {\r\n                                Array.prototype.forEach.call(list, function (node, index) {\r\n                                    var attr    = node.getAttribute(settings.css.attrs.CONDITION);\r\n                                    conds[attr] = conds[attr] === void 0 ? [] : conds[attr];\r\n                                    conds[attr].push(node);\r\n                                    node.removeAttribute(settings.css.attrs.CONDITION);\r\n                                });\r\n                                nodes = conds;\r\n                                conds = {};\r\n                                _object(nodes).forEach(function (prop, val) {\r\n                                    var conditions  = prop.split(','),\r\n                                        path        = conditions[0].split('=')[0];\r\n                                    conds[prop] = {\r\n                                        path        : path.indexOf('.') === -1 ? '' : path.replace(/\\.[\\w\\d_]{1,}$/gi, ''),\r\n                                        conditions  : conditions.map(function (con) {\r\n                                            con = con.split('=');\r\n                                            return {\r\n                                                con: con[0].indexOf('.') === -1 ? con[0] : con[0].replace(/.*[^\\w\\d]/gi, ''),\r\n                                                val: con[1]\r\n                                            };\r\n                                        })\r\n                                    };\r\n                                });\r\n                                proccess(   privates.hooks,\r\n                                            '', \r\n                                            privates.map.model, \r\n                                            helpers.isArray(privates.hooks)? privates.hooks.length : 1);\r\n                            }\r\n                        }\r\n                    };\r\n                    controller  = {\r\n                        convert     : function (controller, url){\r\n                            controller = controller !== null ? controller : controllers.storage.get(url);\r\n                            if (controller instanceof Function && (controller.prototype[settings.events.ONREADY] !== void 0 || controller.prototype[settings.events.ONUPDATE] !== void 0 || controller.prototype[settings.events.SETINSTNCE] !== void 0)) {\r\n                                return new controller(privates.__instance);\r\n                            } else {\r\n                                return controller;\r\n                            }\r\n                        },\r\n                        init        : function () {\r\n                            privates.controller = controller.convert(privates.caller.controller, self.url);\r\n                            privates.listener   = privates.listener === null ? new addition.listener.create(privates.__instance) : privates.listener;\r\n                        },\r\n                        events      : function () {\r\n                            function process(refs, controllers) {\r\n                                var paths = null;\r\n                                if (typeof refs === 'object' && refs !== null) {\r\n                                    controllers.push({\r\n                                        path        : refs.path,\r\n                                        controller  : refs.controller\r\n                                    });\r\n                                    if (refs.events instanceof Array && refs.events.length > 0) {\r\n                                        paths = controllers.map(function (ref) {\r\n                                            return ref.path;\r\n                                        });\r\n                                        paths = paths.reverse();\r\n                                        refs.events.forEach(function (event) {\r\n                                            controllers.forEach(function (contr, index) {\r\n                                                var path    = paths[index] + (paths[index] !== '' ? '.' : '') + event.handle,\r\n                                                    handle  = null;\r\n                                                if (contr.controller !== null && typeof contr.controller === 'object') {\r\n                                                    handle = _object(contr.controller).getByPath(path);\r\n                                                    if (doms[event.id] !== void 0) {\r\n                                                        if (handle instanceof Function) {\r\n                                                            doms[event.id].forEach(function (item) {\r\n                                                                if (~paths.indexOf(item.path)) {\r\n                                                                    handle = handle.bind(contr.controller);\r\n                                                                    item.nodeList.on(event.event, handle);\r\n                                                                }\r\n                                                            });\r\n                                                        } else if (handle instanceof Array && handle.length === doms[event.id].length) {\r\n                                                            doms[event.id].forEach(function (item, index) {\r\n                                                                if (~paths.indexOf(item.path) && handle[index] instanceof Function) {\r\n                                                                    handle[index] = handle[index].bind(contr.controller);\r\n                                                                    item.nodeList.on(event.event, handle[index]);\r\n                                                                }\r\n                                                            });\r\n                                                        }\r\n                                                    }\r\n                                                }\r\n                                            });\r\n                                        });\r\n                                    }\r\n                                    if (refs.hooks !== void 0 && typeof refs.hooks === 'object' && refs.hooks !== null) {\r\n                                        _object(refs.hooks).forEach(function (prop, val) {\r\n                                            process(val, controllers.filter(function () { return true;}));\r\n                                        });\r\n                                    }\r\n                                }\r\n                            };\r\n                            var refs = privates.map.refs,\r\n                                doms = privates.cache.dom;\r\n                            process(refs, []);\r\n                        },\r\n                        apply       : function (update) {\r\n                            function process(hooks, model, _controller, exchange) {\r\n                                if (hooks instanceof settings.classes.CALLER) {\r\n                                    _controller = hooks.controller !== null ? hooks.controller : controllers.storage.get(hooks.url);\r\n                                    process(hooks.hooks, model, _controller, hooks.exchange !== null ? hooks.exchange : exchange);\r\n                                } else if (helpers.isArray(hooks)) {\r\n                                    hooks.forEach(function (hooks, index) {\r\n                                        if (hooks instanceof settings.classes.CALLER || typeof hooks === 'object' || helpers.isArray(hooks)) {\r\n                                            process(hooks,\r\n                                                    model !== null ? (model[index] !== void 0 ? model[index] : null) : null,\r\n                                                    _controller,\r\n                                                    exchange);\r\n                                        }\r\n                                    });\r\n                                } else if (typeof hooks === 'object' && !helpers.isArray(hooks)) {\r\n                                    if (_controller !== null) {\r\n                                        controller.handle(_controller, model, exchange, update);\r\n                                    }\r\n                                    _object(hooks).forEach(function (name, hooks) {\r\n                                        var ref = name;\r\n                                        if (hooks instanceof settings.classes.CALLER) {\r\n                                            ref = settings.other.SUBLEVEL_BEGIN + name + settings.other.SUBLEVEL_END;\r\n                                        }\r\n                                        if (hooks instanceof settings.classes.CALLER || typeof hooks === 'object' || helpers.isArray(hooks)) {\r\n                                            process(hooks,\r\n                                                    model !== null ? (model[ref] !== void 0 ? model[ref] : null) : null,\r\n                                                    null,\r\n                                                    exchange);\r\n                                        }\r\n                                    });\r\n                                }\r\n                            }\r\n                            process(privates.hooks,\r\n                                    privates.map.model,\r\n                                    privates.controller,\r\n                                    privates.caller.exchange === null ? null : privates.caller.exchange);\r\n                        },\r\n                        handle      : function (handle, model, exchange, update) {\r\n                            function call(handle, _this) {\r\n                                var _this = _this !== void 0 ? _this : privates.__instance;\r\n                                handle.call(_this, {\r\n                                    model   : model,\r\n                                    listener: privates.listener,\r\n                                    exchange: exchange,\r\n                                    instance: privates.__instance\r\n                                });\r\n                            };\r\n                            var update = typeof update === 'boolean' ? update : false;\r\n                            if (handle instanceof Function) {\r\n                                call(handle);\r\n                            } else if (typeof handle === 'object' && handle !== null) {\r\n                                if (update) {\r\n                                    handle[settings.events.ONUPDATE] instanceof Function && call(handle[settings.events.ONUPDATE], handle);\r\n                                } else {\r\n                                    handle[settings.events.ONREADY] instanceof Function && call(handle[settings.events.ONREADY], handle);\r\n                                }\r\n                                if (handle[settings.events.SETINSTNCE] instanceof Function) {\r\n                                    call(handle[settings.events.SETINSTNCE], handle)\r\n                                } else {\r\n                                    handle.model    = model;\r\n                                    handle.listener = privates.listener;\r\n                                    handle.exchange = exchange;\r\n                                    handle.instance = privates.__instance;\r\n                                }\r\n                            }\r\n                        }\r\n                    };\r\n                    cache       = {\r\n                        reset   : function () {\r\n                            privates.cache = {\r\n                                regs        : {},\r\n                                conditions  : {},\r\n                                html        : {},\r\n                                dom         : {}\r\n                            };\r\n                            return privates.cache;\r\n                        },\r\n                    };\r\n                    hash        = {\r\n                        getString   : function () {\r\n                            function toString(obj) {\r\n                                var _obj = null;\r\n                                if (helpers.isArray(obj)) {\r\n                                    return obj.map(function (obj) {\r\n                                        return toString(obj);\r\n                                    });\r\n                                } else if (obj instanceof settings.classes.CALLER) {\r\n                                    return {\r\n                                        url     : obj.url,\r\n                                        hooks   : toString(obj.hooks)\r\n                                    };\r\n                                } else if (typeof obj === 'object') {\r\n                                    _obj = {};\r\n                                    _object(obj).forEach(function (prop, obj) {\r\n                                        _obj[prop] = toString(obj);\r\n                                    });\r\n                                    return _obj;\r\n                                } else {\r\n                                    return obj;\r\n                                }\r\n                            };\r\n                            var res = {\r\n                                url     : self.url,\r\n                                hooks   : toString(privates.hooks)\r\n                            };\r\n                            return JSON.stringify(res);\r\n                        },\r\n                        setHash     : function () {\r\n                            privates.hash = config.get().CACHE_PATTERNS ? (settings.other.CACHE_PATTERNS_PREFIX + helpers.getHash(hash.getString())): null;\r\n                        },\r\n                        getCache    : function (){\r\n                            var storage = flex.overhead.globaly.get(settings.storage.VIRTUAL_STORAGE_GROUP, settings.storage.PATTERN_CACHE, {}),\r\n                                target  = null;\r\n                            if (config.get().CACHE_PATTERNS && privates.hash !== void 0 && privates.hash !== null) {\r\n                                if (storage === null || storage[privates.hash] === void 0) {\r\n                                    target = flex.localStorage.getJSON(privates.hash);\r\n                                    if (target !== null) {\r\n                                        storage[privates.hash] = target;\r\n                                        return _object(storage[privates.hash]).copy();\r\n                                    } else {\r\n                                        return null;\r\n                                    }\r\n                                } else if (storage[privates.hash] !== void 0) {\r\n                                    return _object(storage[privates.hash]).copy();\r\n                                }\r\n                            } else {\r\n                                return null;\r\n                            }\r\n                        },\r\n                        setCache    : function (obj) {\r\n                            if (config.get().CACHE_PATTERNS && privates.hash !== void 0 && privates.hash !== null) {\r\n                                flex.localStorage.addJSON(privates.hash, obj);\r\n                            }\r\n                        }\r\n                    };\r\n                    methods     = {\r\n                        make    : function (update){\r\n                            var update = typeof update === 'boolean' ? update : false;\r\n                            html.build(false, privates.conditions);\r\n                            hooks.anchors.html();\r\n                            html.wrap();\r\n                            hooks.anchors.convert();\r\n                            model.bind();\r\n                            model.combine();\r\n                            model.accessors();\r\n                            model.finalize();\r\n                            dom.indexes();\r\n                            condition.apply();\r\n                            controller.apply(update);\r\n                            controller.events();\r\n                            html.map();\r\n                        },\r\n                        build   : function (callback) {\r\n                            cache.reset();\r\n                            hash.setHash();\r\n                            condition.find();\r\n                            controller.init();\r\n                            mapping.refs();\r\n                            methods.make(false);\r\n                            controller.handle(privates.caller.onReady, privates.map.model, privates.caller.exchange);\r\n                            controller.handle(callback, privates.map.model, privates.caller.exchange);\r\n                            return {\r\n                                nodes   : privates.wrapper.children,\r\n                                model   : privates.map.model,\r\n                            };\r\n                        },\r\n                        update  : function (hooks){\r\n                            function getHooks(src, org, refs) {\r\n                                var _hooks = [];\r\n                                if (helpers.isArray(src) && helpers.isArray(org)) {\r\n                                    if (src.length !== org.length) {\r\n                                        org = null;\r\n                                    }\r\n                                } else {\r\n                                    org = null;\r\n                                }\r\n                                src.forEach(function (hooks, index) {\r\n                                    var item = {};\r\n                                    if (typeof hooks === 'object') {\r\n                                        _object(hooks).forEach(function (prop, val) {\r\n                                            if (refs.hooks[prop] !== void 0) {\r\n                                                item[prop] = Caller.instance({\r\n                                                    url     : refs.hooks[prop].url,\r\n                                                    hooks   : getHooks(val instanceof Array ? val : [val], org !== null ? (org[index][prop] instanceof settings.classes.CALLER ? org[index][prop].hooks : null) : null, refs.hooks[prop])\r\n                                                });\r\n                                            } else {\r\n                                                item[prop] = val;\r\n                                            }\r\n                                        });\r\n                                        org !== null && (_object(org[index]).forEach(function (prop, val) {\r\n                                            item[prop] === void 0 && (item[prop] = val);\r\n                                        }));\r\n                                        _hooks.push(item);\r\n                                    }\r\n                                });\r\n                                return _hooks;\r\n                            };\r\n                            var hooks   = helpers.isArray(hooks) ? hooks : [hooks],\r\n                                _hooks  = null;\r\n                            if (privates.map.refs !== null) {\r\n                                _hooks          = getHooks(hooks, privates.hooks, privates.map.refs);\r\n                                privates.hooks  = _hooks;\r\n                                privates.caller.unmount();\r\n                                methods.make(true);\r\n                                controller.handle(privates.caller.onUpdate, privates.map.model, privates.caller.exchange);\r\n                                privates.caller.mount(privates.wrapper.children);\r\n                            }\r\n                        },\r\n                        html    : function (parent, conditions) {\r\n                            var fragments = html.build(parent, conditions);\r\n                            return {\r\n                                html        : privates.html,\r\n                                fragments   : fragments,\r\n                            };\r\n                        },\r\n                    };\r\n                    signature   = function () {\r\n                        return logs.SIGNATURE + ':: pattern (' + self.url + ')';\r\n                    };\r\n                    returning   = {\r\n                        build   : methods.build,\r\n                        html    : methods.html,\r\n                        update  : methods.update\r\n                    };\r\n                    return {\r\n                        build   : returning.build,\r\n                        html    : returning.html,\r\n                        update  : returning.update,\r\n                    };\r\n                },\r\n                instance: function (parameters) {\r\n                    if (flex.oop.objects.validate(parameters, [ { name: 'url',                  type: 'string'                                                          },\r\n                                                                { name: 'conditions',           type: 'object',                                     value: {}           },\r\n                                                                { name: 'caller',               type: 'object',                                     value: null         },\r\n                                                                { name: 'hooks',                type: ['object', 'array'],                          value: null         }]) !== false) {\r\n                        return _object({\r\n                            parent          : settings.classes.PATTERN,\r\n                            constr          : function () {\r\n                                this.id     = flex.unique();\r\n                                this.url    = flex.system.url.restore(parameters.url);\r\n                                this.source = Source.storage.get(parameters.url);\r\n                                if (this.source === null) {\r\n                                    flex.logs.log(logs.pattern.CANNOT_FIND_SOURCE_OF_TEMPLATE + ': ' + this.url, flex.logs.types.CRITICAL);\r\n                                    throw new Error(logs.pattern.CANNOT_FIND_SOURCE_OF_TEMPLATE + ': ' + this.url);\r\n                                }\r\n                            },\r\n                            privates        : {\r\n                                caller      : parameters.caller,\r\n                                hooks       : parameters.hooks,\r\n                                conditions  : parameters.conditions,\r\n                                html        : null,\r\n                                wrapper     : null,\r\n                                map         : {\r\n                                    model   : null,\r\n                                    html    : null,\r\n                                    hooks   : null,\r\n                                    refs    : null,\r\n                                    anchors : null,\r\n                                },\r\n                                listener    : null,\r\n                                model       : null,\r\n                                cache       : {\r\n                                    html    : null,\r\n                                    regs    : null\r\n                                }\r\n                            },\r\n                            prototype       : Pattern.proto\r\n                        }).createInstanceClass();\r\n                    } else {\r\n                        return null;\r\n                    }\r\n                }\r\n            };\r\n            //BEGIN: caller class ===============================================\r\n            Caller          = {\r\n                proto   : function (privates){\r\n                    var self        = this,\r\n                        render      = null,\r\n                        build       = null,\r\n                        patterns    = null,\r\n                        mount       = null,\r\n                        unmount     = null,\r\n                        signature   = null,\r\n                        returning   = null;\r\n                    patterns    = {\r\n                        inHooks : function (hooks) {\r\n                            var hooks = hooks === void 0 ? privates.hooks : hooks;\r\n                            hooks = helpers.isArray(hooks) ? hooks : (hooks !== null ? new ExArray([hooks]) : null);\r\n                            if (hooks !== null) {\r\n                                hooks.forEach(function (_hooks) {\r\n                                    _object(_hooks).forEach(function (hook_name, hook_value) {\r\n                                        if (hook_value instanceof settings.classes.CALLER) {\r\n                                            if (privates.patterns.indexOf(hook_value.url) === -1) {\r\n                                                privates.patterns.push(hook_value.url);\r\n                                            }\r\n                                            patterns.inHooks(hook_value.hooks);\r\n                                        }\r\n                                    });\r\n                                });\r\n                            }\r\n                            privates.patterns.indexOf(self.url) === -1 && privates.patterns.push(self.url);\r\n                        },\r\n                        inMap   : function (map) {\r\n                            var map = map === void 0 ? privates.map : map;\r\n                            if (map !== null && typeof map === 'object') {\r\n                                _object(map).forEach(function (prop, val) {\r\n                                    var url = null;\r\n                                    if (val !== null && typeof val === 'object') {\r\n                                        url = val.url !== void 0 ? flex.system.url.restore(val.url) : null;\r\n                                        val.url     !== void 0 && (!~privates.patterns.indexOf(url) && privates.patterns.push(url));\r\n                                        val.hooks   !== void 0 && patterns.inMap(val.hooks);\r\n                                    }\r\n                                });\r\n                            }\r\n                        },\r\n                    };\r\n                    mount       = function (nodes) {\r\n                        var nodes   = nodes === void 0 ? privates.pattern.nodes : nodes,\r\n                            context = [];\r\n                        privates.mounted = Array.prototype.filter.call(nodes, function () { return true; });\r\n                        if (privates.node !== null) {\r\n                            Array.prototype.forEach.call(privates.node, function (parent) {\r\n                                for (var i = 0, max = nodes.length; i < max; i += 1) {\r\n                                    if (!privates.replace) {\r\n                                        parent.appendChild(nodes[max !== nodes.length ? 0 : i]);\r\n                                    } else {\r\n                                        parent.parentNode.insertBefore(nodes[max !== nodes.length ? 0 : i], parent);\r\n                                    }\r\n                                }\r\n                                if (privates.replace) {\r\n                                    parent.parentNode.removeChild(parent);\r\n                                }\r\n                                !~context.indexOf(parent.parentNode) && context.push(parent.parentNode);\r\n                            });\r\n                        } else if (privates.before !== null) {\r\n                            Array.prototype.forEach.call(privates.before, function (parent) {\r\n                                for (var i = 0, max = nodes.length; i < max; i += 1){\r\n                                    parent.parentNode !== null && parent.parentNode.insertBefore(nodes[max !== nodes.length ? 0 : i], parent);\r\n                                }\r\n                                !~context.indexOf(parent.parentNode) && context.push(parent.parentNode);\r\n                            });\r\n                        } else if (privates.after !== null) {\r\n                            Array.prototype.forEach.call(privates.after, function (parent) {\r\n                                var _before = parent.nextSibling !== void 0 ? parent.nextSibling : null;\r\n                                if (_before !== null) {\r\n                                    for (var i = 0, max = nodes.length; i < max; i += 1) {\r\n                                        _before.parentNode.insertBefore(nodes[max !== nodes.length ? 0 : i], _before);\r\n                                    }\r\n                                } else {\r\n                                    for (var i = 0, max = nodes.length; i < max; i += 1) {\r\n                                        parent.parentNode && parent.parentNode.appendChild(nodes[max !== nodes.length ? 0 : i]);\r\n                                    }\r\n                                }\r\n                                !~context.indexOf(parent.parentNode) && context.push(parent.parentNode);\r\n                            });\r\n                        }\r\n                        if (mount.ui_created === void 0) {\r\n                            mount.ui_created = true;\r\n                            flex.oop.namespace.get('flex.libraries.ui.window.move'      ) !== null && flex.libraries.ui.window.move.    create();\r\n                            flex.oop.namespace.get('flex.libraries.ui.window.focus'     ) !== null && flex.libraries.ui.window.focus.   create();\r\n                            flex.oop.namespace.get('flex.libraries.ui.window.resize'    ) !== null && flex.libraries.ui.window.resize.  create();\r\n                            flex.oop.namespace.get('flex.libraries.ui.window.maximize'  ) !== null && flex.libraries.ui.window.maximize.create();\r\n                        }\r\n                        layout.init(true, self.url);\r\n                        flex.events.core.fire(flex.registry.events.ui.patterns.GROUP, flex.registry.events.ui.patterns.MOUNTED, context);\r\n                    };\r\n                    unmount     = function () {\r\n                        var parent = null;\r\n                        if (privates.mounted instanceof Array && privates.mounted.length > 0) {\r\n                            parent = privates.mounted[0].parentNode !== void 0 ? (privates.mounted[0].parentNode !== null ? privates.mounted[0].parentNode : null) : null;\r\n                            if (parent !== null) {\r\n                                privates.mounted.forEach(function (node) {\r\n                                    parent.removeChild(node);\r\n                                });\r\n                            }\r\n                        }\r\n                    };\r\n                    render      = function (parameters) {\r\n                        function makeComponentCaller(map) {\r\n                            function getHooks(map, hooks) {\r\n                                function obj(map, hooks) {\r\n                                    var _hooks = {};\r\n                                    _object(hooks).forEach(function (prop, val) {\r\n                                        if (map.hooks[prop] !== void 0) {\r\n                                            _hooks[prop] = Caller.instance({\r\n                                                url     : map.hooks[prop].src,\r\n                                                hooks   : getHooks(map.hooks[prop], val)\r\n                                            });\r\n                                        } else {\r\n                                            _hooks[prop] = val;\r\n                                        }\r\n                                    });\r\n                                    return _hooks;\r\n                                };\r\n                                if (helpers.isArray(hooks)) {\r\n                                    return hooks.map(function (hooks) {\r\n                                        return obj(map, hooks);\r\n                                    });\r\n                                } else {\r\n                                    return obj(map, hooks);\r\n                                }\r\n                            };\r\n                            var caller      = null,\r\n                                _map        = _object(map).copy(),\r\n                                params      = {\r\n                                    id                  : privates.id,\r\n                                    node                : privates.node,\r\n                                    before              : privates.before,\r\n                                    after               : privates.after,\r\n                                    replace             : privates.replace,\r\n                                    conditions          : privates.conditions,\r\n                                    controller          : privates.controller === null ? controllers.storage.get(self.url) : privates.controller,\r\n                                    onReady             : privates.onReady,\r\n                                    exchange            : privates.exchange,\r\n                                    remove_missing_hooks: privates.remove_missing_hooks,\r\n                                    map                 : privates.map,\r\n                                };\r\n                            if (privates.hooks !== null) {\r\n                                params.url      = map.src;\r\n                                params.hooks    = getHooks(map, privates.hooks);\r\n                                caller          = Caller.instance(params);\r\n                                caller.render();\r\n                            }\r\n                            return caller;\r\n                        };\r\n                        function correctCallers() {\r\n                            function check(hooks, map) {\r\n                                if (helpers.isArray(hooks)) {\r\n                                    hooks.forEach(function (_hooks) {\r\n                                        _object(_hooks).forEach(function (name, obj) {\r\n                                            if (map[name] !== void 0 && !(obj instanceof settings.classes.CALLER)) {\r\n                                                _hooks[name] = Caller.instance({\r\n                                                    url     : map[name].url,\r\n                                                    hooks   : obj\r\n                                                });\r\n                                                map[name].hooks !== void 0 && check(_hooks[name].hooks, map[name].hooks);\r\n                                            } else if (map[name] !== void 0 && map[name].hooks !== void 0 && obj instanceof settings.classes.CALLER) {\r\n                                                check(obj.hooks, map[name].hooks);\r\n                                            }\r\n                                        });\r\n                                    });\r\n                                }\r\n                            };\r\n                            var map = Object.keys(privates.map).length === 0 ? defaultsmap.storage.get(self.url) : privates.map;\r\n                            if (map !== null) {\r\n                                if (privates.hooks !== null) {\r\n                                    check(privates.hooks, map);\r\n                                }\r\n                            }\r\n                        };\r\n                        function checkAdditionRefs(callback) {\r\n                            var map     = Object.keys(privates.map).length === 0 ? defaultsmap.storage.get(self.url) : privates.map,\r\n                                count   = privates.patterns.length;\r\n                            patterns.inMap(map);\r\n                            if (count !== privates.patterns.length) {\r\n                                Source.init(privates.patterns, callback, onFail);\r\n                            } else {\r\n                                callback();\r\n                            }\r\n                        };\r\n                        function checkURLs(callback) {\r\n                            function check(hooks) {\r\n                                function asObj(hooks) {\r\n                                    _object(hooks).forEach(function (name, obj) {\r\n                                        if (obj instanceof settings.classes.URL) {\r\n                                            flex.overhead.register.add(URL_REGISTER, name + obj.url);\r\n                                            obj.load(function (response) {\r\n                                                hooks[name] = response;\r\n                                                flex.overhead.register.done(URL_REGISTER, name + obj.url);\r\n                                            });\r\n                                        } else if (obj instanceof settings.classes.CALLER) {\r\n                                            check(obj.hooks);\r\n                                        } else if (typeof obj === 'object' && obj !== null) {\r\n                                            asObj(obj);\r\n                                        } else if (helpers.isArray(obj)) {\r\n                                            check(hooks);\r\n                                        }\r\n                                    });\r\n                                };\r\n                                if (helpers.isArray(hooks)) {\r\n                                    hooks.forEach(function (_hooks, index) {\r\n                                        if (_hooks instanceof settings.classes.URL) {\r\n                                            flex.overhead.register.add(URL_REGISTER, _hooks.url);\r\n                                            _hooks.load(function (response) {\r\n                                                if (helpers.isArray(response)) {\r\n                                                    hooks.splice(0, hooks.length);\r\n                                                    response.forEach(function (item) {\r\n                                                        hooks.push(item);\r\n                                                    });\r\n                                                } else {\r\n                                                    hooks[index] = response;\r\n                                                }\r\n                                                flex.overhead.register.done(URL_REGISTER, _hooks.url);\r\n                                            });\r\n                                        } else {\r\n                                            asObj(_hooks);\r\n                                        }\r\n                                    });\r\n                                }\r\n                            };\r\n                            var URL_REGISTER = 'PATTERNS.URLS.REGISTER';\r\n                            if (privates.hooks !== null) {\r\n                                flex.overhead.register.open(URL_REGISTER, [], callback);\r\n                                check(privates.hooks);\r\n                                flex.overhead.register.isReady(URL_REGISTER) && callback();\r\n                            } else {\r\n                                callback();\r\n                            }\r\n                        };\r\n                        function checkCollections(sources) {\r\n                            function updateHooks(hooks, collection, parent) {\r\n                                if (helpers.isArray(hooks)) {\r\n                                    hooks.forEach(function (hooks) {\r\n                                        updateHooks(hooks, collection, parent);\r\n                                    });\r\n                                } else if (typeof hooks === 'object' && hooks !== null) {\r\n                                    if (hooks[collection.hook] !== void 0 && hooks[collection.hook] !== null && !(hooks[collection.hook] instanceof settings.classes.CALLER) && collection.parent === parent) {\r\n                                        hooks[collection.hook] = Caller.instance({\r\n                                            url     : collection.id,\r\n                                            hooks   : hooks[collection.hook]\r\n                                        });\r\n                                        result = true;\r\n                                    } else {\r\n                                        _object(hooks).forEach(function (prop, val) {\r\n                                            if (prop !== collection.hook) {\r\n                                                if ((typeof val === 'object' && val !== null) || val instanceof settings.classes.CALLER) {\r\n                                                    updateHooks(val instanceof settings.classes.CALLER ? val.hooks : val, collection, val instanceof settings.classes.CALLER ? val.url : parent);\r\n                                                }\r\n                                            }\r\n                                        });\r\n                                    }\r\n                                }\r\n                            };\r\n                            var result = false;\r\n                            sources.forEach(function (source) {\r\n                                var collections = source.collections();\r\n                                if (Object.keys(collections).length > 0) {\r\n                                    _object(collections).forEach(function (prop, collection) {\r\n                                        updateHooks(privates.hooks, collection, self.url);\r\n                                    });\r\n                                }\r\n                            });\r\n                            return result;\r\n                        };\r\n                        function onSuccess(sources) {\r\n                            //Check addition references\r\n                            checkAdditionRefs(function () {\r\n                                checkURLs(function () {\r\n                                    //Setup default hooks\r\n                                    if (helpers.isArray(privates.hooks)) {\r\n                                        privates.hooks.forEach(function(hooks, index){\r\n                                            privates.hooks[index] = defaultshooks.apply(hooks, self.url);\r\n                                        });\r\n                                    } else {\r\n                                        privates.hooks = defaultshooks.apply({}, self.url);\r\n                                        Object.keys(privates.hooks).length > 0  && (privates.hooks = new ExArray([privates.hooks]));\r\n                                        !helpers.isArray(privates.hooks)        && (privates.hooks = null);\r\n                                    }\r\n                                    if (sources.length === 1 && sources[0].map().component !== null) {\r\n                                        //This is component\r\n                                        makeComponentCaller(sources[0].map().component);\r\n                                    } else {\r\n                                        //Correct callers\r\n                                        correctCallers();\r\n                                        //Check collections\r\n                                        if (!checkCollections(sources)) {\r\n                                            //No collections inside\r\n                                            //This is pattern\r\n                                            privates.pattern = Pattern.instance({\r\n                                                id      : privates.id,\r\n                                                url     : self.url,\r\n                                                hooks   : privates.hooks,\r\n                                                caller  : privates.__instance\r\n                                            }).build(parameters.callback);\r\n                                            mount();\r\n                                            return true;\r\n                                        } else {\r\n                                            //Some collections inside\r\n                                            //Repeat whole procedure\r\n                                            return render();\r\n                                        }\r\n                                    }\r\n                                });\r\n                            });\r\n                        };\r\n                        function onFail() {\r\n                            flex.logs.log(signature() + logs.caller.CANNOT_INIT_PATTERN, flex.logs.types.CRITICAL);\r\n                            privates.onReady(null, logs.caller.CANNOT_INIT_PATTERN, self.url);\r\n                            throw logs.caller.CANNOT_INIT_PATTERN;\r\n                        };\r\n                        parameters = parameters === void 0 ? {} : parameters;\r\n                        if (flex.oop.objects.validate(parameters, [ { name: 'node',     type: ['node', 'string', 'array', 'NodeList'],  value: privates.node    },\r\n                                                                    { name: 'before',   type: ['node', 'string', 'array', 'NodeList'],  value: privates.before  },\r\n                                                                    { name: 'after',    type: ['node', 'string', 'array', 'NodeList'],  value: privates.after   },\r\n                                                                    { name: 'replace',  type: 'boolean',                                value: privates.replace },\r\n                                                                    { name: 'callback', type: 'function',                               value: null             }]) !== false) {\r\n                            privates.node       = parameters.node   !== null ? (typeof parameters.node      === 'string' ? _nodes(parameters.node   ).target : (parameters.node     instanceof Array ? parameters.node      : (parameters.node      instanceof NodeList ? parameters.node   : [parameters.node]     ))) : null;\r\n                            privates.before     = parameters.before !== null ? (typeof parameters.before    === 'string' ? _nodes(parameters.before ).target : (parameters.before   instanceof Array ? parameters.before    : (parameters.before    instanceof NodeList ? parameters.before : [parameters.before]   ))) : null;\r\n                            privates.after      = parameters.after  !== null ? (typeof parameters.after     === 'string' ? _nodes(parameters.after  ).target : (parameters.after    instanceof Array ? parameters.after     : (parameters.after     instanceof NodeList ? parameters.after  : [parameters.after]    ))) : null;\r\n                            privates.replace    = parameters.replace;\r\n                            checkURLs(function () {\r\n                                patterns.inHooks();\r\n                                patterns.inMap();\r\n                                Source.init(privates.patterns, onSuccess, onFail);\r\n                            });\r\n                        }\r\n                    };\r\n                    build       = function () {\r\n                        return Pattern.instance({\r\n                            id      : privates.id,\r\n                            url     : self.url,\r\n                            hooks   : privates.hooks,\r\n                            caller  : privates.__instance\r\n                        }).build();\r\n                    };\r\n                    signature   = function () {\r\n                        return logs.SIGNATURE + ':: caller (' + self.url + ')';\r\n                    };\r\n                    returning   = {\r\n                        render      : render,\r\n                        build       : build,\r\n                        mount       : mount,\r\n                        unmount     : unmount\r\n                    };\r\n                    return {\r\n                        render      : returning.render,\r\n                        build       : returning.build,\r\n                        mount       : returning.mount,\r\n                        unmount     : returning.unmount,\r\n                        hooks       : privates.hooks,\r\n                        map         : privates.map,\r\n                        conditions  : privates.conditions,\r\n                        controller  : privates.controller,\r\n                        exchange    : privates.exchange,\r\n                        onReady     : privates.onReady,\r\n                    };\r\n                },\r\n                instance: function (parameters) {\r\n                    /// <summary>\r\n                    /// Load template; save it in virtual storage and local storage (if it's allowed)\r\n                    /// </summary>\r\n                    /// <param name=\"parameters\" type=\"Object\">Template parameters: &#13;&#10;\r\n                    /// {   [string]            url                     (source of template),                                               &#13;&#10;\r\n                    ///     [string || node]    node                    (target node for mount),                                            &#13;&#10;\r\n                    ///     [boolean]           replace                 (true - replace node by template; false - append template to node), &#13;&#10;\r\n                    ///     [object || array]   hooks                   (bind data),                                                        &#13;&#10;\r\n                    ///     [object]            conditions              (conditions),                                                       &#13;&#10;\r\n                    ///     [object]            onReady                 (onReady(res) in success, onReady(null, error, url) in fail,        &#13;&#10;\r\n                    ///     [object]            exchange                (resources),                                                        &#13;&#10;\r\n                    ///     [boolean]           remove_missing_hooks    (remove missed bind data),                                          &#13;&#10;\r\n                    /// }</param>\r\n                    /// <returns type=\"boolean\">true - success; false - fail</returns>\r\n                    if (flex.oop.objects.validate(parameters, [ //For public usage\r\n                                                                { name: 'url',                  type: 'string'                                              },\r\n                                                                { name: 'node',                 type: ['node', 'string', 'array', 'NodeList'],      value: null         },\r\n                                                                { name: 'before',               type: ['node', 'string', 'array', 'NodeList'],      value: null         },\r\n                                                                { name: 'after',                type: ['node', 'string', 'array', 'NodeList'],      value: null         },\r\n                                                                { name: 'id',                   type: 'string',                                     value: flex.unique()},\r\n                                                                { name: 'replace',              type: 'boolean',                                    value: false        },\r\n                                                                { name: 'hooks',                type: ['object', 'array', settings.classes.URL],        value: null         },\r\n                                                                { name: 'conditions',           type: 'object',                                     value: {}           },\r\n                                                                { name: 'controller',           type: ['function', 'object'],                       value: null         },\r\n                                                                { name: settings.events.ONREADY, type: 'function', value: function () { } },\r\n                                                                { name: 'map',                  type: 'object',                                     value: {}           },\r\n                                                                { name: 'exchange',             type: 'object',                                     value: null         },\r\n                                                                { name: 'remove_missing_hooks', type: 'boolean',                                    value: true         },\r\n                                                                //For internal usage\r\n                                                                { name: 'component',            type: 'string',                                     value: null         }]) !== false) {\r\n                        return _object({\r\n                            parent          : settings.classes.CALLER,\r\n                            constr          : function () {\r\n                                this.id     = parameters.id;\r\n                                this.url    = flex.system.url.restore(parameters.url);\r\n                            },\r\n                            privates        : {\r\n                                //From parameters\r\n                                id                  : parameters.id,\r\n                                node                : parameters.node   !== null ? (typeof parameters.node      === 'string' ? _nodes(parameters.node   ).target : (parameters.node     instanceof Array ? parameters.node      : (parameters.node      instanceof NodeList ? parameters.node   : [parameters.node]     ))) : null,\r\n                                before              : parameters.before !== null ? (typeof parameters.before    === 'string' ? _nodes(parameters.before ).target : (parameters.before   instanceof Array ? parameters.before    : (parameters.before    instanceof NodeList ? parameters.before : [parameters.before]   ))) : null,\r\n                                after               : parameters.after  !== null ? (typeof parameters.after     === 'string' ? _nodes(parameters.after  ).target : (parameters.after    instanceof Array ? parameters.after     : (parameters.after     instanceof NodeList ? parameters.after  : [parameters.after]    ))) : null,\r\n                                hooks               : parameters.hooks  !== null ? (parameters.hooks instanceof Array ? new ExArray(parameters.hooks) : new ExArray([parameters.hooks])) : null,\r\n                                replace             : parameters.replace,\r\n                                conditions          : parameters.conditions,\r\n                                controller          : parameters.controller,\r\n                                onReady             : parameters.onReady,\r\n                                exchange            : parameters.exchange,\r\n                                remove_missing_hooks: parameters.remove_missing_hooks,\r\n                                map                 : parameters.map,\r\n                                //Local\r\n                                component           : parameters.component,\r\n                                pattern             : null,\r\n                                mounted             : null,\r\n                                patterns            : []\r\n                            },\r\n                            prototype       : Caller.proto\r\n                        }).createInstanceClass();\r\n                    } else {\r\n                        return null;\r\n                    }\r\n                }\r\n            };\r\n            //END: caller class ===============================================\r\n            addition        = {\r\n                nodeList: {\r\n                    NODE_LIST   : function (nodeList){\r\n                        function addID(smth) {\r\n                            smth.collection_id  = flex.unique();\r\n                            smth.indexes        = null;\r\n                            return smth;\r\n                        };\r\n                        if (nodeList instanceof NodeList || nodeList instanceof Array) {\r\n                            this.collections = [addID(nodeList)];\r\n                        } else if (helpers.isNode(nodeList)) {\r\n                            this.collections = [addID([nodeList])];\r\n                        } else {\r\n                            this.collections = [];\r\n                        }\r\n                    },\r\n                    init        : function () {\r\n                        addition.nodeList.NODE_LIST.prototype = {\r\n                            add         : function (nodeList) {\r\n                                function addID(smth) {\r\n                                    smth.collection_id  = flex.unique();\r\n                                    smth.indexes        = null;\r\n                                    return smth;\r\n                                };\r\n                                if (nodeList instanceof NodeList || nodeList instanceof Array) {\r\n                                    this.collections.push(addID(nodeList));\r\n                                } else if (nodeList instanceof addition.nodeList.NODE_LIST) {\r\n                                    this.collections = this.collections.concat(nodeList.collections);\r\n                                } else if (helpers.isNode(nodeList)) {\r\n                                    this.collections.push(addID([nodeList]));\r\n                                }\r\n                            },\r\n                            setIndexes  : function (indexes) {\r\n                                this.collections.forEach(function (collection) {\r\n                                    collection.indexes = indexes;\r\n                                });\r\n                            },\r\n                            exclude     : function (nodeList) {\r\n                                var IDs     = [],\r\n                                    indexes = [],\r\n                                    self    = this;\r\n                                if (nodeList instanceof addition.nodeList.NODE_LIST) {\r\n                                    IDs     = nodeList.collections.map(function (collection) { return collection.collection_id; });\r\n                                    self.collections.forEach(function (collection, index) {\r\n                                        ~IDs.indexOf(collection.collection_id) && indexes.unshift(index);\r\n                                    });\r\n                                    indexes.forEach(function (index) {\r\n                                        self.collections.splice(index, 1);\r\n                                    });\r\n                                }\r\n                            },\r\n                            css         : function (css) {\r\n                                var self = this;\r\n                                if (typeof css === 'object' && css !== null) {\r\n                                    _object(css).forEach(function (name, value) {\r\n                                        self.collections.forEach(function (nodeList) {\r\n                                            Array.prototype.forEach.call(nodeList, function (node) {\r\n                                                if (node.style[name] !== void 0) {\r\n                                                    node.style[name] = value;\r\n                                                }\r\n                                            });\r\n                                        });\r\n                                    });\r\n                                }\r\n                            },\r\n                            addClass    : function (className){\r\n                                this.collections.forEach(function (nodeList) {\r\n                                    Array.prototype.forEach.call(nodeList, function (node) {\r\n                                        var classes = node.className.replace(/\\s{2,}/gi, '').split(' ');\r\n                                        if (classes.indexOf(className) === -1) {\r\n                                            classes.push(className);\r\n                                            node.className = classes.join(' ');\r\n                                        }\r\n                                    });\r\n                                });\r\n                            },\r\n                            removeClass : function (className){\r\n                                this.collections.forEach(function (nodeList) {\r\n                                    Array.prototype.forEach.call(nodeList, function (node) {\r\n                                        var classes = node.className.replace(/\\s{2,}/gi, '').split(' '),\r\n                                            index   = classes.indexOf(className);\r\n                                        if (index !== -1) {\r\n                                            classes.splice(index, 1);\r\n                                            node.className = classes.join(' ');\r\n                                        }\r\n                                    });\r\n                                });\r\n                            },\r\n                            show        : function () {\r\n                                this.collections.forEach(function (nodeList) {\r\n                                    Array.prototype.forEach.call(nodeList, function (node) {\r\n                                        node.style.display = node.__display !== void 0 ? node.__display : 'block';\r\n                                    });\r\n                                });\r\n                            },\r\n                            hide        : function () {\r\n                                this.collections.forEach(function (nodeList) {\r\n                                    Array.prototype.forEach.call(nodeList, function (node) {\r\n                                        node.__display      = node.style.display;\r\n                                        node.style.display  = 'none';\r\n                                    });\r\n                                });\r\n                            },\r\n                            remove      : function (){\r\n                                this.collections.forEach(function (nodeList) {\r\n                                    Array.prototype.forEach.call(nodeList, function (node) {\r\n                                        if (node.parentNode !== void 0 && node.parentNode !== null) {\r\n                                            node.parentNode.removeChild(node);\r\n                                        }\r\n                                    });\r\n                                });\r\n                                this.collections = [];\r\n                            },\r\n                            append      : function (parent){\r\n                                if (typeof parent.appendChild === 'function') {\r\n                                    this.collections.forEach(function (nodeList) {\r\n                                        Array.prototype.forEach.call(nodeList, function (node) {\r\n                                            parent.appendChild(node);\r\n                                        });\r\n                                    });\r\n                                }\r\n                            },\r\n                            insertBefore: function (before) {\r\n                                if (before.parentNode !== void 0 && before.parentNode !== null && typeof before.parentNode.insertBefore === 'function' && helpers.isNode(before)) {\r\n                                    this.collections.forEach(function (nodeList) {\r\n                                        Array.prototype.forEach.call(nodeList, function (node) {\r\n                                            before.parentNode.insertBefore(node, before);\r\n                                        });\r\n                                    });\r\n                                }\r\n                            },\r\n                            attr        : function (name, value){\r\n                                var result = [];\r\n                                this.collections.forEach(function (nodeList) {\r\n                                    Array.prototype.forEach.call(nodeList, function (node) {\r\n                                        if (value !== void 0) {\r\n                                            node.setAttribute(name, value);\r\n                                            result.push(true);\r\n                                        } else {\r\n                                            result.push(node.getAttribute(name));\r\n                                        }\r\n                                    });\r\n                                });\r\n                                return result.length === 1 ? result[0] : result;\r\n                            },\r\n                            removeAttr  : function (name) {\r\n                                var result = [];\r\n                                this.collections.forEach(function (nodeList) {\r\n                                    Array.prototype.forEach.call(nodeList, function (node) {\r\n                                        result.push(node.removeAttribute(name));\r\n                                    });\r\n                                });\r\n                                return result.length === 1 ? result[0] : result;\r\n                            },\r\n                            on          : function (event, handle){\r\n                                var self = this;\r\n                                if (typeof handle === 'function') {\r\n                                    this.collections.forEach(function (collection) {\r\n                                        Array.prototype.forEach.call(collection, function (node) {\r\n                                            flex.events.DOM.add(node, event, function (event) { \r\n                                                handle(event, collection.indexes);\r\n                                            });\r\n                                        });\r\n                                    });\r\n                                } else {\r\n                                    throw Error('Defined [handle] is not a function');\r\n                                }\r\n                            },\r\n                            getAsArray  : function () {\r\n                                var result = [];\r\n                                this.collections.forEach(function (nodeList) {\r\n                                    Array.prototype.forEach.call(nodeList, function (node) {\r\n                                        result.push(node);\r\n                                    });\r\n                                });\r\n                                return result;\r\n                            }\r\n                        };\r\n                    },\r\n                    create      : function (nodeList) {\r\n                        return new addition.nodeList.NODE_LIST(nodeList);\r\n                    },\r\n                    addMethod   : function (name, method) {\r\n                        if (typeof name === 'string' && typeof method === 'function') {\r\n                            if (addition.nodeList.NODE_LIST.prototype[name] !== void 0) {\r\n                                flex.logs.log('Method [' + name + '] of NODE_LIST list class was overwritten.', flex.logs.types.NOTIFICATION);\r\n                            }\r\n                            addition.nodeList.NODE_LIST.prototype[name] = method;\r\n                        }\r\n                    }\r\n                },\r\n                listener: {\r\n                    LISTENER: function (instance) {\r\n                        var instance        = instance,\r\n                            handles         = {},\r\n                            globals         = flex.overhead.globaly.get(settings.storage.VIRTUAL_STORAGE_GROUP, settings.storage.GLOBAL_EVENTS, {}),\r\n                            bind            = null,\r\n                            unbind          = null,\r\n                            trigger         = null;\r\n                        bind    = function bind(event, handle, id, globaly) {\r\n                            var id      = ~['string', 'number'].indexOf(typeof id) ? id : flex.unique(),\r\n                                globaly = typeof globaly    === 'boolean' ? globaly : false;\r\n                            if (handle instanceof Function && ~['string', 'number'].indexOf(typeof event)) {\r\n                                handles[event] !== void 0 ? handles[event] : {};\r\n                                globaly     && (handles[event][id] = handle);\r\n                                !globaly    && (globals[event][id] = handle);\r\n                                handle[settings.other.EVENTS_HANDLE_ID] = id;\r\n                                return id;\r\n                            }\r\n                            return false;\r\n                        };\r\n                        unbind  = function unbind(event, handle, id) {\r\n                            var id      = ~['string', 'number'].indexOf(typeof id)      ? id    : null,\r\n                                event   = ~['string', 'number'].indexOf(typeof event)   ? event : null,\r\n                                handle  = handle instanceof Function ? handle : null;\r\n                            if (event !== null) {\r\n                                if (id === null && handle !== null) {\r\n                                    id = handle[settings.other.EVENTS_HANDLE_ID] !== void 0 ? handle[settings.other.EVENTS_HANDLE_ID] : null;\r\n                                }\r\n                                if (id !== null) {\r\n                                    handles[event][id] !== void 0 && (delete handles[event][id]);\r\n                                    globals[event][id] !== void 0 && (delete globals[event][id]);\r\n                                    Object.keys(handles[event]).length === 0 && (delete handles[event]);\r\n                                    Object.keys(globals[event]).length === 0 && (delete globals[event]);\r\n                                    return true;\r\n                                }\r\n                            }\r\n                            return false;\r\n                        };\r\n                        trigger = function trigger(event, params, globaly) {\r\n                            var event   = ~['string', 'number'].indexOf(typeof event) ? event : null,\r\n                                globaly = typeof globaly    === 'boolean' ? globaly : false,\r\n                                root    = typeof root       === 'boolean' ? root    : false,\r\n                                storage = globaly ? globals : handles;\r\n                            if (event !== null) {\r\n                                if (storage[event] !== void 0) {\r\n                                    _object(storage[event]).forEach(function (handle) {\r\n                                        handle.call(instance, params);\r\n                                    });\r\n                                    return true;\r\n                                }\r\n                            }\r\n                            return false;\r\n                        };\r\n                        this.bind           = function bind(event, handle, id) {\r\n                            return bind(event, handle, id, false);\r\n                        };\r\n                        this.bindGlobal     = function bindGlobal(event, handle, id) {\r\n                            return bind(event, handle, id, true);\r\n                        };\r\n                        this.unbind         = function unbind(event, handle, id) {\r\n                            return unbind(event, handle, id);\r\n                        };\r\n                        this.trigger        = function trigger(event, params) {\r\n                            return trigger(event, params, false);\r\n                        };\r\n                        this.triggerGlobal  = function triggerGlobal(event, params) {\r\n                            return trigger(event, params, true);\r\n                        };\r\n                    },\r\n                    create  : function () {\r\n                        return new addition.listener.LISTENER(instance);\r\n                    }\r\n                },\r\n                map     : {\r\n                    MAP     : function (context) {\r\n                        if (context !== void 0 && context.nodeType !== void 0) {\r\n                            this.context = context;\r\n                        } else {\r\n                            throw Error('Context [context] should be a node.');\r\n                        }\r\n                    },\r\n                    init    : function () {\r\n                        addition.map.MAP.prototype = {\r\n                            select: function (selector) {\r\n                                var results = _nodes(selector, false, this.context);\r\n                                if (results.target !== null && results.target.length > 0) {\r\n                                    return results.target.length > 1 ? results.target : results.target[0];\r\n                                } else {\r\n                                    return null;\r\n                                }\r\n                            }\r\n                        };\r\n                    },\r\n                    create  : function (context) {\r\n                        return new addition.map.MAP(context);\r\n                    }\r\n                },\r\n                url: {\r\n                    create: function (url, parameters) {\r\n                        return _object({\r\n                            parent  : settings.classes.URL,\r\n                            constr  : function () {\r\n                                this.url                            = typeof url        === 'string' ? url          : null;\r\n                                this.parameters                     = typeof parameters === 'object' ? parameters : {};\r\n                                this.callback                       = null;\r\n                                this.parameters.parser              = this.parameters.parser            !== void 0 ? this.parameters.parser             : null;\r\n                                this.parameters.method              = this.parameters.method            !== void 0 ? this.parameters.method             : flex.ajax.methods.GET;\r\n                                this.parameters.parameters          = this.parameters.parameters        !== void 0 ? this.parameters.parameters         : void 0;\r\n                                this.parameters.settings            = this.parameters.settings          !== void 0 ? this.parameters.settings           : void 0;\r\n                                this.parameters.callbacks           = this.parameters.callbacks         !== void 0 ? this.parameters.callbacks          : {};\r\n                                this.parameters.callbacks.success   = this.parameters.callbacks.success !== void 0 ? this.parameters.callbacks.success  : null;\r\n                                this.parameters.callbacks._success  = this.parameters.callbacks.success;\r\n                                this.parameters.callbacks           = this.parameters.callbacks         !== void 0 ? this.parameters.callbacks          : {};\r\n                                this.parameters.callbacks.fail      = this.parameters.callbacks.fail    !== void 0 ? this.parameters.callbacks.fail     : null;\r\n                                this.parameters.callbacks._fail     = this.parameters.callbacks.fail;\r\n                                if (this.url === null) {\r\n                                    throw logs.url.URL_SHOULD_BE_DEFINED_AS_STRING;\r\n                                }\r\n                            },\r\n                            privates    : { },\r\n                            prototype   : function(){\r\n                                var self        = this,\r\n                                    onSuccess   = null,\r\n                                    onFail      = null,\r\n                                    load        = null,\r\n                                    update      = null;\r\n                                onSuccess   = function (response, event) {\r\n                                    response = typeof self.parameters.parser === 'function' ? self.parameters.parser(response.parsed !== void 0 ? response.parsed : response.original) : (response.parsed !== void 0 ? response.parsed : response.original);\r\n                                    typeof self.parameters.callbacks._success   === 'function' && self.parameters.callbacks._success(response, event);\r\n                                    typeof self.callback                        === 'function' && self.callback(response, event);\r\n\r\n                                };\r\n                                onFail      = function (response, event) {\r\n                                    typeof self.parameters.callbacks._fail  === 'function' && self.parameters.callbacks._fail(event);\r\n                                    typeof self.callback                    === 'function' && self.callback(response, event);\r\n                                };\r\n                                load        = function (callback) {\r\n                                    self.parameters.callbacks.success   = onSuccess;\r\n                                    self.parameters.callbacks.fail      = onFail;\r\n                                    self.callback                       = callback;\r\n                                    var request = flex.ajax.send(\r\n                                        self.url,\r\n                                        self.parameters.method      !== void 0 ? self.parameters.method     : void 0,\r\n                                        self.parameters.parameters  !== void 0 ? self.parameters.parameters : void 0,\r\n                                        self.parameters.callbacks   !== void 0 ? self.parameters.callbacks  : void 0,\r\n                                        self.parameters.settings    !== void 0 ? self.parameters.settings   : void 0\r\n                                    );\r\n                                    request.send();\r\n                                };\r\n                                update      = function (callback) {\r\n                                    load(callback);\r\n                                };\r\n                                return {\r\n                                    load : load\r\n                                };\r\n                            }\r\n                        }).createInstanceClass();\r\n                    }\r\n                },\r\n            };\r\n            layout          = {\r\n                journal     : {\r\n                    data    : [],\r\n                    add     : function (url) {\r\n                        layout.journal.data.push(flex.system.url.restore(url));\r\n                    },\r\n                    done    : function (url) {\r\n                        var index = layout.journal.data.indexOf(url);\r\n                        index !== -1 && (layout.journal.data.splice(index, 1));\r\n                        if (layout.journal.data.length === 0) {\r\n                            if (typeof config.get().onLayoutBuildFinish === 'function' && config.get().onLayoutBuildFinish.started === void 0) {\r\n                                config.get().onLayoutBuildFinish.started = true;\r\n                                config.get().onLayoutBuildFinish();\r\n                            }\r\n                        }\r\n                    }\r\n                },\r\n                getScheme   : function(){\r\n                    var patterns = null,\r\n                        scheme   = null;\r\n                    layout.getScheme.scheme === void 0 && (layout.getScheme.scheme = {});\r\n                    scheme = layout.getScheme.scheme;\r\n                    if (Object.keys(scheme).length === 0) {\r\n                        patterns = _nodes('link[rel=\"' + config.get().PATTERN_NODE + '\"]').target;\r\n                        if (patterns !== null && patterns instanceof NodeList && patterns.length > 0) {\r\n                            Array.prototype.forEach.call(patterns, function (pattern) {\r\n                                var name        = null,\r\n                                    src         = null,\r\n                                    hooks_set   = null;\r\n                                if (pattern.hasAttribute('name') && pattern.hasAttribute('src')) {\r\n                                    name        = pattern.getAttribute('name').toLowerCase();\r\n                                    src         = pattern.getAttribute('src');\r\n                                    hooks_set   = pattern.hasAttribute(config.get().HOOKS_SET) ? pattern.getAttribute(config.get().HOOKS_SET) : '';\r\n                                    if (name.length > 0 && src.length > 0 && scheme[name] === void 0) {\r\n                                        scheme[name] = {\r\n                                            name        : name,\r\n                                            src         : src,\r\n                                            hooks_set   : hooks_set\r\n                                        };\r\n                                    } else {\r\n                                        if (scheme[name] !== void 0) {\r\n                                            flex.logs.log(logs.layout.PATTERN_SRC_DEFINED_TWICE_OR_MORE, flex.logs.types.WARNING);\r\n                                        } else {\r\n                                            flex.logs.log(logs.layout.PATTERN_SRC_OR_NAME_IS_TOO_SHORT, flex.logs.types.WARNING);\r\n                                        }\r\n                                    }\r\n                                }\r\n                            });\r\n                        }\r\n                    }\r\n                    return scheme;\r\n                },\r\n                getHooksMap : function(){\r\n                    var hooks   = null,\r\n                        map     = null;\r\n                    layout.getHooksMap.map === void 0 && (layout.getHooksMap.map = {});\r\n                    map = layout.getHooksMap.map;\r\n                    if (Object.keys(map).length === 0) {\r\n                        hooks = _nodes('link[rel=\"hook\"]').target;\r\n                        if (hooks !== null && hooks instanceof NodeList && hooks.length > 0) {\r\n                            Array.prototype.forEach.call(hooks, function (hook) {\r\n                                var name    = null,\r\n                                    src     = null;\r\n                                if (hook.hasAttribute('name') && hook.hasAttribute('src')) {\r\n                                    name    = hook.getAttribute('name').toLowerCase();\r\n                                    src     = hook.getAttribute('src');\r\n                                    if (name.length > 0 && src.length > 0 && map[name] === void 0) {\r\n                                        map[name] = {\r\n                                            name: name,\r\n                                            src : src\r\n                                        };\r\n                                    } else {\r\n                                        if (map[name] !== void 0) {\r\n                                            flex.logs.log(logs.layout.HOOK_SRC_DEFINED_TWICE_OR_MORE, flex.logs.types.WARNING);\r\n                                        } else {\r\n                                            flex.logs.log(logs.layout.HOOK_SRC_OR_NAME_IS_TOO_SHORT, flex.logs.types.WARNING);\r\n                                        }\r\n                                    }\r\n                                }\r\n                            });\r\n                        }\r\n                    }\r\n                    return map;\r\n                },\r\n                initByScheme: function (is_auto) {\r\n                    var scheme  = layout.getScheme(),\r\n                        nodes   = [];\r\n                    if (Object.keys(scheme).length > 0) {\r\n                        _object(scheme).forEach(function (prop, val) {\r\n                            var patterns = _nodes(prop).target;\r\n                            if (patterns !== null && patterns instanceof NodeList && patterns.length > 0) {\r\n                                Array.prototype.forEach.call(patterns, function (pattern, index) {\r\n                                    if (pattern.__in_work === void 0 && !layout.helpers.isNested(pattern)) {\r\n                                        pattern.__in_work = true;\r\n                                        layout.journal.add(val.src);\r\n                                        nodes.push({\r\n                                            node    : pattern,\r\n                                            scheme  : val\r\n                                        });\r\n                                    }\r\n                                });\r\n                            }\r\n                        });\r\n                        nodes.forEach(function (pattern) {\r\n                            pattern.node.setAttribute(config.get().PATTERN_SRC, pattern.scheme.src);\r\n                            !pattern.node.hasAttribute(config.get().HOOKS_SET) && pattern.node.setAttribute(config.get().HOOKS_SET, pattern.scheme.hooks_set);\r\n                            if (!pattern.node.hasAttribute(settings.events.ONREADY) || !is_auto) {\r\n                                layout.caller(pattern.node);\r\n                            }\r\n                        });\r\n                    }\r\n                },\r\n                initByHTML  : function (is_auto){\r\n                    var patterns    = _nodes(config.get().PATTERN_NODE).target,\r\n                        is_auto     = typeof is_auto === 'boolean' ? is_auto : false,\r\n                        nodes       = [];\r\n                    if (patterns !== null && patterns instanceof NodeList && patterns.length > 0) {\r\n                        Array.prototype.forEach.call(patterns, function (pattern) {\r\n                            if (pattern.__in_work === void 0 && !layout.helpers.isNested(pattern) && pattern.hasAttribute(config.get().PATTERN_SRC)) {\r\n                                pattern.__in_work = true;\r\n                                layout.journal.add(pattern.getAttribute(config.get().PATTERN_SRC));\r\n                                nodes.push(pattern);\r\n                            }\r\n                        });\r\n                        nodes.forEach(function (pattern) {\r\n                            if (!layout.helpers.isNested(pattern)) {\r\n                                if (!pattern.hasAttribute(settings.events.ONREADY) || !is_auto) {\r\n                                    layout.caller(pattern);\r\n                                }\r\n                            }\r\n                        });\r\n                    }\r\n                },\r\n                init        : function (is_auto, url){\r\n                    layout.initByScheme(is_auto);\r\n                    layout.initByHTML(is_auto);\r\n                    url !== void 0 && (layout.journal.done(url));\r\n                },\r\n                caller      : function (pattern, is_child, path, hooks_set) {\r\n                    function getIndex(source, hook) {\r\n                        var index = -1;\r\n                        try{\r\n                            source.forEach(function(hooks, _index){\r\n                                if (hooks[hook] === void 0){\r\n                                    index = _index;\r\n                                    throw 'found';\r\n                                }\r\n                            });\r\n                        }catch(e){}\r\n                        return index;\r\n                    };\r\n                    function getCallback(pattern, type) {\r\n                        var callback = pattern.getAttribute(type),\r\n                            parts       = null;\r\n                        if (typeof callback === 'string' && callback !== '') {\r\n                            parts       = callback.split('.');\r\n                            callback    = window;\r\n                            parts.forEach(function (part) {\r\n                                if (callback !== null && callback[part] !== void 0) {\r\n                                    callback = callback[part];\r\n                                } else {\r\n                                    callback = null;\r\n                                }\r\n                            });\r\n                            return callback;\r\n                        } else {\r\n                            return null;\r\n                        }\r\n                    };\r\n                    function hasHooks(pattern, url, hooks_set) {\r\n                        var status = -1;\r\n                        if (pattern.children !== void 0 && pattern.children.length > 0) {\r\n                            Array.prototype.forEach.call(pattern.children, function (child) {\r\n                                var hook    = child.nodeName.toLowerCase(),\r\n                                    is_hook = hook.indexOf(config.get().HOOK_PREFIX) === 0 ? true : (hooks_set.indexOf(hook) !== -1);\r\n                                status = status === -1 ? is_hook : (status ? (!is_hook ? null : status) : (is_hook ? null : status));\r\n                                if (status === null) {\r\n                                    flex.logs.log(logs.layout.HOOK_CANNOT_BE_DEFINED_WITH_OTHER_TAGS + ' (' + url + ')', flex.logs.types.CRITICAL);\r\n                                    throw new Error(logs.layout.HOOK_CANNOT_BE_DEFINED_WITH_OTHER_TAGS + ' (' + url + ')');\r\n                                }\r\n                            });\r\n                        }\r\n                        status === -1 && (status = false);\r\n                        return status;\r\n                    };\r\n                    function getHookName(nodeName) {\r\n                        return nodeName.indexOf(config.get().HOOK_PREFIX) === 0 ? nodeName.replace(config.get().HOOK_PREFIX, '') : nodeName;\r\n                    };\r\n                    function getHooksSet(pattern) {\r\n                        var hooks_set = pattern.hasAttribute(config.get().HOOKS_SET) ? pattern.getAttribute(config.get().HOOKS_SET) : [];\r\n                        if (typeof hooks_set === 'string') {\r\n                            hooks_set = hooks_set.split(',');\r\n                            hooks_set = hooks_set.map(function (hook) {\r\n                                return hook.replace(/\\s/gi, '');\r\n                            });\r\n                        }\r\n                        return hooks_set;\r\n                    };\r\n                    function processing(child, hook) {\r\n                        var index   = 0,\r\n                            hook    = hook === void 0 ? getHookName(child.nodeName.toLowerCase()) : hook;\r\n                        if (_caller.hooks[hook] !== void 0 && !(_caller.hooks instanceof Array)) {\r\n                            _caller.hooks = [_caller.hooks];\r\n                        }\r\n                        if (_caller.hooks instanceof Array) {\r\n                            index = getIndex(_caller.hooks, hook);\r\n                            if (index === -1) {\r\n                                _caller.hooks.push({});\r\n                                index = _caller.hooks.length - 1;\r\n                            }\r\n                            if (!hasHooks(child, _caller.url, hooks_set)) {\r\n                                _caller.hooks[index][hook] = child.innerHTML;\r\n                            } else {\r\n                                _caller.hooks[index][hook] = layout.caller(child, true, path + (path === '' ? '' : '.') + hook, hooks_set);\r\n                            }\r\n                        } else {\r\n                            if (!hasHooks(child, _caller.url, hooks_set)) {\r\n                                _caller.hooks[hook] = child.innerHTML;\r\n                            } else {\r\n                                _caller.hooks[hook] = layout.caller(child, true, path + (path === '' ? '' : '.') + hook, hooks_set);\r\n                            }\r\n                        }\r\n                    };\r\n                    var _caller     = null,\r\n                        is_child    = is_child !== void 0 ? is_child : false,\r\n                        path        = path !== void 0 ? path : pattern.nodeName.toLowerCase(),\r\n                        url         = null,\r\n                        map         = layout.getHooksMap(),\r\n                        single      = hooks_set instanceof Array ? false : true,\r\n                        hooks_set   = hooks_set instanceof Array ? hooks_set.concat(getHooksSet(pattern)) : getHooksSet(pattern),\r\n                        hooks_src   = pattern.hasAttribute(config.get().HOOKS_SRC) ? pattern.getAttribute(config.get().HOOKS_SRC) : null;\r\n                    if (hooks_src !== null && hooks_src !== '') {\r\n                        _caller = {\r\n                            url     : pattern.hasAttribute(config.get().PATTERN_SRC) ? pattern.getAttribute(config.get().PATTERN_SRC) : (map[path] !== void 0 ? map[path].src : null),\r\n                            hooks   : addition.url.create(hooks_src)\r\n                        };\r\n                    } else {\r\n                        single = single ? (hooks_set.length === 1 ? hooks_set[0] : false) : false;\r\n                        _caller = {\r\n                            url     : pattern.hasAttribute(config.get().PATTERN_SRC) ? pattern.getAttribute(config.get().PATTERN_SRC) : (map[path] !== void 0 ? map[path].src : null),\r\n                            hooks   : {}\r\n                        };\r\n                        if (single !== false && !hasHooks(pattern, _caller.url, hooks_set)) {\r\n                            processing(pattern, single);\r\n                        } else {\r\n                            Array.prototype.forEach.call(pattern.children, function (child) {\r\n                                processing(child);\r\n                            });\r\n                        }\r\n                        if (typeof _caller.hooks === 'object' && Object.keys(_caller.hooks).length === 0) {\r\n                            delete _caller.hooks;\r\n                        }\r\n                    }\r\n                    if (!is_child && _caller.url !== null) {\r\n                        _caller.node        = pattern;\r\n                        _caller.replace     = true;\r\n                        _caller.onReady     = getCallback(pattern, settings.events.ONREADY);\r\n                        _caller             = Caller.instance(_caller).render();\r\n                        return _caller;\r\n                    } else {\r\n                        if (_caller.url !== null) {\r\n                            _caller = Caller.instance(_caller);\r\n                            return _caller;\r\n                        }\r\n                    }\r\n                    return _caller.hooks;\r\n                },\r\n                attach      : function () {\r\n                    if (document.readyState !== 'complete') {\r\n                        flex.events.DOM.add(window, 'load', function () {\r\n                            layout.init(true);\r\n                        });\r\n                    } else {\r\n                        layout.init(true);\r\n                    }\r\n                },\r\n                helpers     : {\r\n                    isNested: function (pattern) {\r\n                        var nodeName    = null,\r\n                            scheme      = layout.getScheme();\r\n                        if (pattern.parentNode !== void 0 && pattern.parentNode !== null) {\r\n                            nodeName = pattern.parentNode.nodeName.toLowerCase();\r\n                            return nodeName === config.get().PATTERN_NODE.toLowerCase() ? true : (scheme[nodeName] !== void 0 ? true : (nodeName === 'body' ? false : layout.helpers.isNested(pattern.parentNode)));\r\n                        } else {\r\n                            return false;\r\n                        }\r\n                    }\r\n                }\r\n            };\r\n            controllers     = {\r\n                references  : {\r\n                    assign          : function (url, pattern_url) {\r\n                        var storage = flex.overhead.globaly.get(settings.storage.VIRTUAL_STORAGE_GROUP, settings.storage.CONTROLLERS_LINKS, {});\r\n                        if (storage[url] === void 0) {\r\n                            storage[url] = pattern_url;\r\n                        }\r\n                    },\r\n                    getPatternURL   : function (url) {\r\n                        var storage = flex.overhead.globaly.get(settings.storage.VIRTUAL_STORAGE_GROUP, settings.storage.CONTROLLERS_LINKS, {});\r\n                        return storage[url] !== void 0 ? storage[url] : null;\r\n                    }\r\n                },\r\n                storage     : {\r\n                    add : function (pattern_url, controller) {\r\n                        var storage = flex.overhead.globaly.get(settings.storage.VIRTUAL_STORAGE_GROUP, settings.storage.CONTROLLERS_STORAGE, {});\r\n                        if (storage[pattern_url] === void 0) {\r\n                            storage[pattern_url] = controller;\r\n                        } else {\r\n                            flex.logs.log('[' + pattern_url + ']' + logs.controller.CONTROLLER_DEFINED_MORE_THAN_ONCE, flex.logs.types.WARNING);\r\n                        }\r\n                    },\r\n                    get : function (url) {\r\n                        var storage = flex.overhead.globaly.get(settings.storage.VIRTUAL_STORAGE_GROUP, settings.storage.CONTROLLERS_STORAGE, {});\r\n                        return storage[url] !== void 0 ? storage[url] : null;\r\n                    },\r\n                },\r\n                current     : {\r\n                    data    : null,\r\n                    set     : function (url){\r\n                        controllers.current.data = url;\r\n                    },\r\n                    get     : function () {\r\n                        return controllers.current.data;\r\n                    },\r\n                    reset   : function () {\r\n                        controllers.current.data = null;\r\n                    },\r\n                },\r\n                attach      : function (controller) {\r\n                    var url     = null,\r\n                        _source = null;\r\n                    if (~['function', 'object'].indexOf(typeof controller)) {\r\n                        url = controllers.current.get() !== null ? controllers.current.get() : flex.resources.attach.js.getCurrentSRC();\r\n                        if (url !== null) {\r\n                            _source = controllers.references.getPatternURL(url);\r\n                            controllers.storage.add(_source, controller);\r\n                        }\r\n                    }\r\n                },\r\n            };\r\n            storage         = {\r\n                virtual : {\r\n                    add: function (url, content) {\r\n                        var storage = flex.overhead.globaly.get(settings.storage.VIRTUAL_STORAGE_GROUP, settings.storage.VIRTUAL_STORAGE_ID, {});\r\n                        if (storage !== null) {\r\n                            if (storage[url] === void 0) {\r\n                                storage[url] = content;\r\n                                return true;\r\n                            }\r\n                        }\r\n                    },\r\n                    get: function (url) {\r\n                        var storage = flex.overhead.globaly.get(settings.storage.VIRTUAL_STORAGE_GROUP, settings.storage.VIRTUAL_STORAGE_ID, {});\r\n                        if (storage !== null) {\r\n                            return (storage[url] !== void 0 ? storage[url] : null);\r\n                        }\r\n                        return null;\r\n                    }\r\n                },\r\n                local   : {\r\n                    add: function (url, content) {\r\n                        if (config.get().USE_LOCALSTORAGE === true) {\r\n                            return flex.localStorage.addJSON(url, {\r\n                                html: content,\r\n                                hash: flex.hashes.get(url)\r\n                            });\r\n                        }\r\n                        return false;\r\n                    },\r\n                    get: function (url) {\r\n                        function resetPatternsCache() {\r\n                            if (storage.local.resetPatternsCache === void 0) {\r\n                                flex.localStorage.reset(settings.other.CACHE_PATTERNS_PREFIX);\r\n                                storage.local.resetPatternsCache = true;\r\n                            }\r\n                        };\r\n                        var target = null;\r\n                        if (config.get().USE_LOCALSTORAGE === true) {\r\n                            flex.hashes.update(url);\r\n                            target = flex.localStorage.getJSON(url);\r\n                            if (target !== null) {\r\n                                if (target.hash === flex.hashes.get(url)) {\r\n                                    return target.html;\r\n                                } else {\r\n                                    resetPatternsCache();\r\n                                }\r\n                            }\r\n                        } else {\r\n                            resetPatternsCache();\r\n                        }\r\n                        return null;\r\n                    }\r\n                },\r\n                add     : function (url, content) {\r\n                    storage.local.  add(url, content);\r\n                    storage.virtual.add(url, content);\r\n                },\r\n                get     : function (url) {\r\n                    var result = storage.virtual.get(url);\r\n                    if (result === null) {\r\n                        result = storage.local.get(url);\r\n                    }\r\n                    return result;\r\n                },\r\n            };\r\n            measuring       = {\r\n                measure: (function () {\r\n                    var storage = {};\r\n                    return function (id, operation) {\r\n                        if (settings.measuring.MEASURE) {\r\n                            var id = id === void 0 ? flex.unique() : id;\r\n                            if (storage[id] === void 0) {\r\n                                storage[id] = performance.now();\r\n                            } else {\r\n                                flex.logs.log(logs.SIGNATURE + 'Operation [' + operation + '] was taken ' + (performance.now() - storage[id]).toFixed(4) + 'ms.', flex.logs.types.NOTIFICATION);\r\n                                delete storage[id];\r\n                            }\r\n                            return id;\r\n                        }\r\n                    };\r\n                }())\r\n            };\r\n            conditions      = {\r\n                storage : {\r\n                    add: function (pattern_url, _conditions) {\r\n                        var storage = flex.overhead.globaly.get(settings.storage.VIRTUAL_STORAGE_GROUP, settings.storage.CONDITIONS_STORAGE, {});\r\n                        storage[pattern_url] = _conditions;\r\n                    },\r\n                    get : function (pattern_url) {\r\n                        var storage = flex.overhead.globaly.get(settings.storage.VIRTUAL_STORAGE_GROUP, settings.storage.CONDITIONS_STORAGE, {});\r\n                        return storage[pattern_url] !== void 0 ? storage[pattern_url] : null;\r\n                    },\r\n                },\r\n                attach  : function (_conditions) {\r\n                    var url     = null,\r\n                        _source = null;\r\n                    if (typeof _conditions === 'object' && _conditions !== null) {\r\n                        url = controllers.current.get() !== null ? controllers.current.get() : flex.resources.attach.js.getCurrentSRC();\r\n                        if (url !== null) {\r\n                            _source = controllers.references.getPatternURL(url);\r\n                            conditions.storage.add(_source, _conditions);\r\n                        }\r\n                    }\r\n                }\r\n            };\r\n            defaultshooks   = {\r\n                storage : {\r\n                    add: function (pattern_url, _hooks) {\r\n                        var storage = flex.overhead.globaly.get(settings.storage.VIRTUAL_STORAGE_GROUP, settings.storage.HOOKS_STORAGE, {});\r\n                        storage[pattern_url] = _hooks;\r\n                    },\r\n                    get : function (pattern_url) {\r\n                        var storage = flex.overhead.globaly.get(settings.storage.VIRTUAL_STORAGE_GROUP, settings.storage.HOOKS_STORAGE, {});\r\n                        return storage[pattern_url] !== void 0 ? storage[pattern_url] : null;\r\n                    },\r\n                },\r\n                attach  : function (_hooks) {\r\n                    var url     = null,\r\n                        _source = null;\r\n                    if (typeof _hooks === 'object' && _hooks !== null) {\r\n                        url = controllers.current.get() !== null ? controllers.current.get() : flex.resources.attach.js.getCurrentSRC();\r\n                        if (url !== null) {\r\n                            _source = controllers.references.getPatternURL(url);\r\n                            defaultshooks.storage.add(_source, _hooks);\r\n                        }\r\n                    }\r\n                },\r\n                apply   : function (hooks, url) {\r\n                    function process(source, destination) {\r\n                        _object(source).forEach(function (hook_name, hook_value) {\r\n                            if (destination[hook_name] === void 0) {\r\n                                destination[hook_name] = hook_value;\r\n                            } else {\r\n                                if (destination[hook_name] !== null && typeof destination[hook_name] === 'object') {\r\n                                    process(hook_value, destination[hook_name]);\r\n                                }\r\n                            }\r\n                        });\r\n                    };\r\n                    var defaults = defaultshooks.storage.get(url);\r\n                    if (defaults !== null && typeof defaults === 'object') {\r\n                        process(defaults, hooks);\r\n                    }\r\n                    return hooks;\r\n                }\r\n            };\r\n            defaultsmap     = {\r\n                storage : {\r\n                    add: function (pattern_url, _hooks) {\r\n                        var storage = flex.overhead.globaly.get(settings.storage.VIRTUAL_STORAGE_GROUP, settings.storage.MAPS_STORAGE, {});\r\n                        storage[pattern_url] = _hooks;\r\n                    },\r\n                    get : function (pattern_url) {\r\n                        var storage = flex.overhead.globaly.get(settings.storage.VIRTUAL_STORAGE_GROUP, settings.storage.MAPS_STORAGE, {});\r\n                        return storage[pattern_url] !== void 0 ? storage[pattern_url] : null;\r\n                    },\r\n                },\r\n                attach  : function (_map) {\r\n                    var url     = null,\r\n                        _source = null;\r\n                    if (typeof _map === 'object' && _map !== null) {\r\n                        url = controllers.current.get() !== null ? controllers.current.get() : flex.resources.attach.js.getCurrentSRC();\r\n                        if (url !== null) {\r\n                            _source = controllers.references.getPatternURL(url);\r\n                            defaultsmap.storage.add(_source, _map);\r\n                        }\r\n                    }\r\n                }\r\n            };\r\n            helpers         = {\r\n                testReg                 : function(reg, str){\r\n                    reg.lastIndex = 0;\r\n                    return reg.test(str);\r\n                },\r\n                binds                   : {\r\n                    data        : {\r\n                        value: [\r\n                            //Group #1\r\n                            {\r\n                                nodes   : ['input', 'textarea'],\r\n                                event   : 'change',\r\n                                getter  : function () { return this.value; },\r\n                                setter  : function (value) { this.value = value; }\r\n                            }\r\n                        ],\r\n                    },\r\n                    assing      : function (node, prop_name, handle) {\r\n                        var node_name   = node.nodeName.toLowerCase(),\r\n                            group       = null;\r\n                        if (helpers.binds.data[prop_name] !== void 0) {\r\n                            helpers.binds.data[prop_name].forEach(function (_group) {\r\n                                if (_group.nodes.indexOf(node_name) !== -1) {\r\n                                    group = _group;\r\n                                }\r\n                            });\r\n                            if (group !== null) {\r\n                                (function (event, node, getter, setter, handle) {\r\n                                    _node(node).events().add(event, function (event) {\r\n                                        handle.call(node, event, getter, setter);\r\n                                    });\r\n                                }(group.event, node, group.getter.bind(node), group.setter.bind(node), handle));\r\n                            }\r\n                        }\r\n                        return false;\r\n                    },\r\n                    isPossible  : function (node, prop_name) {\r\n                        var node_name = node.nodeName.toLowerCase();\r\n                        if (helpers.binds.data[prop_name] !== void 0) {\r\n                            try{\r\n                                helpers.binds.data[prop_name].forEach(function (_group) {\r\n                                    if (_group.nodes.indexOf(node_name) !== -1) {\r\n                                        throw 'found';\r\n                                    }\r\n                                });\r\n                            } catch (e) {\r\n                                return e === 'found' ? true : false;\r\n                            }\r\n                        }\r\n                        return false;\r\n                    }\r\n                },\r\n                isNode                  : function (something) {\r\n                    if (something !== void 0 && something.nodeName !== void 0 && something.parentNode !== void 0 && something.nodeType !== void 0) {\r\n                        return true;\r\n                    } else {\r\n                        return false;\r\n                    }\r\n                },\r\n                isArray                 : function (arr) { return arr instanceof Array ? true : arr instanceof ExArray;},\r\n                getTextNode             : function (node, text, index) {\r\n                    var target  = null,\r\n                        index   = index !== void 0 ? index : null;\r\n                    if (node.childNodes !== void 0) {\r\n                        if (index !== null && node.childNodes[index] !== void 0 && node.childNodes[index].nodeValue === text) {\r\n                            target = node.childNodes[index];\r\n                        } else {\r\n                            try {\r\n                                Array.prototype.forEach.call(node.childNodes, function (child) {\r\n                                    if (child.nodeType === 3 && child.nodeValue === text) {\r\n                                        target = child;\r\n                                        throw 'found';\r\n                                    }\r\n                                });\r\n                            } catch (e) { }\r\n                        }\r\n                    }\r\n                    return target;\r\n                },\r\n                getPattern              : function (html){\r\n                    var tag = helpers.getFirstTag(html);\r\n                    if (tag !== null){\r\n                        return helpers.getParentFor(tag);\r\n                    }\r\n                    return null;\r\n                },\r\n                getHash                 : function (str){\r\n                    //Source: http://werxltd.com/wp/2010/05/13/javascript-implementation-of-javas-string-hashcode-method/\r\n                    var hash = 0, i, chr, len;\r\n                    if (str.length === 0) return hash;\r\n                    for (i = 0, len = str.length; i < len; i++) {\r\n                        chr = str.charCodeAt(i);\r\n                        hash = ((hash << 5) - hash) + chr;\r\n                        hash |= 0; // Convert to 32bit integer\r\n                    }\r\n                    return hash.toString();\r\n                },\r\n                getFirstTag             : function (html) {\r\n                    var tag = html.match(settings.regs.FIRST_TAG);\r\n                    if (tag !== null) {\r\n                        if (tag.length === 1) {\r\n                            return tag[0].replace(settings.regs.TAG_BORDERS, '').replace(/\\s/gi, '').match(settings.regs.FIRST_WORD)[0].toLowerCase()\r\n                        }\r\n                    }\r\n                    return null;\r\n                },\r\n                getParentFor            : function (child_tag) {\r\n                    if (typeof child_tag === 'string') {\r\n                        if (settings.compatibility.CHILD_TO_PARENT[child_tag] !== void 0) {\r\n                            return document.createElement(settings.compatibility.CHILD_TO_PARENT[child_tag]);\r\n                        } else {\r\n                            return document.createElement(settings.compatibility.BASE);\r\n                        }\r\n                    } else {\r\n                        return null;\r\n                    }\r\n                },\r\n                getFirstTagWithContect  : function (html) {\r\n                    function replace(reg) {\r\n                        var replaced = {\r\n                            value   : _html.match(reg),\r\n                            mark    : flex.unique()\r\n                        };\r\n                        replaced.value  = replaced.value[0];\r\n                        _html           = _html.replace(reg, replaced.mark);\r\n                        cache.replaced.push(replaced);\r\n                    };\r\n                    var tag         = html.match(/<\\s*\\w{1,}/gi),\r\n                        close       = null,\r\n                        full        = null,\r\n                        open        = null,\r\n                        result      = null,\r\n                        close_pos   = null,\r\n                        open_pos    = null,\r\n                        cache       = {\r\n                            start   : { mark: null, value: null },\r\n                            replaced: []\r\n                        },\r\n                        _html       = html;\r\n                    if (tag instanceof Array && tag.length > 0) {\r\n                        cache.start.mark    = flex.unique();\r\n                        cache.start.value   = tag[0];\r\n                        _html               = _html.replace(cache.start.value, cache.start.mark);\r\n                        tag                 = tag[0].replace(/<\\s*/gi, '');\r\n                        close               = new RegExp('<\\\\s*\\/\\\\s*' + tag + '\\\\s*>', 'i');\r\n                        open                = new RegExp('<\\s*' + tag + '.*?>', 'i');\r\n                        do {\r\n                            close_pos   = _html.search(close);\r\n                            open_pos    = _html.search(open);\r\n                            if (open_pos !== -1 && open_pos < close_pos) {\r\n                                replace(open);\r\n                                replace(close);\r\n                            } else {\r\n                                result = ~close_pos ?_html.substring(0, close_pos) + _html.match(close)[0] : null;\r\n                                break;\r\n                            }\r\n                        } while (open_pos !== -1 && open_pos < close_pos);\r\n                        if (result !== null) {\r\n                            result = result.replace(cache.start.mark, cache.start.value);\r\n                            cache.replaced.forEach(function (replaced) {\r\n                                result = result.replace(replaced.mark, replaced.value);\r\n                            });\r\n                        }\r\n                    }\r\n                    return result;\r\n                }\r\n            };\r\n            callers         = {\r\n                init    : function () {\r\n                    flex.callers.define.node('ui.patterns.append', function (parameters) {\r\n                        if (typeof parameters === 'object' && this.target) {\r\n                            parameters.node = this.target;\r\n                        }\r\n                        return Caller.instance(parameters);\r\n                    });\r\n                    flex.callers.define.nodes('ui.patterns.append', function () {\r\n                        var result = [];\r\n                        Array.prototype.forEach.call(this.target, function (target) {\r\n                            if (typeof parameters === 'object' && this.target) {\r\n                                parameters.node = this.target;\r\n                            }\r\n                            result.push(Caller.instance(parameters));\r\n                        });\r\n                        return result;\r\n                    });\r\n                }\r\n            };\r\n            //Init addition classes\r\n            addition.nodeList.init();\r\n            addition.map.init();\r\n            //Add events\r\n            (function () {\r\n                flex.registry.events.ui             === void 0 && (flex.registry.events.ui          = {});\r\n                flex.registry.events.ui.patterns    === void 0 && (flex.registry.events.ui.patterns = {\r\n                    GROUP   : 'flex.registry.events.ui.patterns',\r\n                    MOUNTED : 'MOUNTED'\r\n                });\r\n            }());\r\n            //Private part\r\n            privates    = {\r\n                preload     : Source.init,\r\n                get         : Caller.instance,\r\n                controller  : {\r\n                    attach  : controllers.attach\r\n                },\r\n                conditions  : {\r\n                    attach  : conditions.attach\r\n                },\r\n                hooks       : {\r\n                    attach  : defaultshooks.attach\r\n                },\r\n                map         : {\r\n                    attach  : defaultsmap.attach\r\n                },\r\n                classes     : {\r\n                    NODE_LIST: {\r\n                        addMethod : addition.nodeList.addMethod\r\n                    }\r\n                },\r\n                setup       : config.setup,\r\n                debug       : config.debug,\r\n                layout      : layout.init,\r\n                url         : addition.url.create\r\n            };\r\n            //Global callers\r\n            callers.init();\r\n            window['_controller'] = privates.controller.attach;\r\n            window['_conditions'] = privates.conditions.attach;\r\n            window['_hooks'     ] = privates.hooks.attach;\r\n            window['_map'       ] = privates.map.attach;\r\n            //Run layout parser\r\n            layout.attach();\r\n            //Public part\r\n            return {\r\n                preload : privates.preload,\r\n                get     : privates.get,\r\n                classes : {\r\n                    NODE_LIST: {\r\n                        addMethod: privates.classes.NODE_LIST.addMethod\r\n                    }\r\n                },\r\n                setup   : privates.setup,\r\n                debug   : privates.debug,\r\n                layout  : privates.layout,\r\n                url     : privates.url\r\n            };\r\n        };\r\n        flex.modules.attach({\r\n            name            : 'ui.patterns',\r\n            protofunction   : protofunction,\r\n            reference       : ['flex.events', 'flex.html', 'flex.binds', 'flex.types.array'],\r\n            onAfterAttach   : function () {\r\n                flex.libraries.events.      create();\r\n                flex.libraries.html.        create();\r\n                flex.libraries.binds.       create();\r\n                flex.libraries.types.array.create();\r\n                window['_patterns'] = flex.libraries.ui.patterns.create();\r\n            }\r\n        });\r\n    }\r\n}());","/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\r\n* Copyright © 2015-2016 Dmitry Astafyev. All rights reserved.                                                      *\r\n* This file (core / module) is released under the Apache License (Version 2.0). See [LICENSE] file for details.    *\r\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\r\nflex.init({\r\n    resources               : {\r\n        MODULES             : ['flex.ui.patterns', 'flex.ui.window.resize', 'flex.ui.window.focus', 'flex.ui.window.maximize', 'flex.ui.window.move'],\r\n        USE_STORAGED        : true,\r\n    },\r\n    settings                : {\r\n        CHECK_PATHS_IN_CSS  : true\r\n    },\r\n    logs                    : {\r\n        SHOW                : ['CRITICAL']\r\n    }\r\n});"],"sourceRoot":"/source/"}